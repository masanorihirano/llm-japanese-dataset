[
  {
    "index": "F23000",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、url関数を使ってウェブページへのconnectionを開くことができます。",
    "output": "For example, you can open a connection to a webpage using the URL function."
  },
  {
    "index": "F23001",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "urlconnectionを使ってウェブページからデータを読めます。",
    "output": "And so, when you open a connection to a webpage, you can read data from that webpage using the URL connection."
  },
  {
    "index": "F23002",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "connectionインターフェースを使う狙いはRの外にある様々な型のオブジェクトへ接続する仕組みを抽象的に提供することですオブジェクトはファイルでもウェブページでも何でも構いません。",
    "output": "The mechanism for connecting to different types of objects that are external to R, whether they be files, or webpages, or whatever."
  },
  {
    "index": "F23003",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "file関数は、標準的な非圧縮ファイルへのconnectionを開く関数です。",
    "output": "So the file function is the function that opens a connection to a standard uncompressed file."
  },
  {
    "index": "F23004",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "他の種類のテキストファイルを読むためには、gzfileやbzfileを使って、圧縮データファイルへのconnectionを開きます。",
    "output": "So this, this can be useful for text files, for, for reading in other types of text files."
  },
  {
    "index": "F23005",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "gzfileはgzipアルゴリズムで圧縮されたファイルに対して使います。",
    "output": "Gzfile and bzfile, are used for opening connections to compressed data files."
  },
  {
    "index": "F23006",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "bzfileは圧縮するのにbzip2アルゴリズムを使ったファイルへのconnectionを開くのに使います。gzipで圧縮されたファイルにはgzの拡張子が付いています。",
    "output": "So gz file i, are, is used for files that are compressed with the gzip algorithm and bz files used for, is for opening connections to files compressed with the bzip2 algorithm."
  },
  {
    "index": "F23007",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "bzip2で圧縮されたファイルにはbz2の拡張子が付いています。このようにfile関数には複数の引数があります。",
    "output": "Files that are compressed with gzip usually have a gz extension and files compressed with bzip2 usually have a bz2 extension."
  },
  {
    "index": "F23008",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次は、open引数でここで使う値は知らないと使えません。rが読み込み用、wが書き込み用aは追加書き込み用でrb、wb、abはバイナリファイルの読み込み、書き込み、追加用です。",
    "output": "So the file function here has a few arguments, the description argument is the name of the file and there's a flag that's called, that goes to the open argument and you have to know what the codes are, but basically r is for reading, w is for writing, a is for appending, and then rb, wb and ab are for reading, writing, and appending on binary files."
  },
  {
    "index": "F23009",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "他の引数は、ここでは特に重要ではありません。",
    "output": "The other options for file are not particularly important at this time."
  },
  {
    "index": "F23010",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "connectionは非常に強力で、ファイルや他の外部オブジェクトをより洗練された方法で扱えます。",
    "output": "So, connections can be very powerful and they can let you navigate files and other external objects in a more sophisticated way than just, like, reading the whole thing, for example."
  },
  {
    "index": "F23011",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、ただ全体を読み込むような方法ではありません。",
    "output": "And generally you don't have to deal with the connect interface in many cases, but sometimes it's useful."
  },
  {
    "index": "F23012",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "多くの場合、connectionインターフェースで直接扱う必要はありませんが時に役に立ちます。",
    "output": "So for example, so here I've got a simple example or opening a fi, a file connection to some file called foo.text, I'm going to open it for reading."
  },
  {
    "index": "F23013",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、この単純な例ではfoo.txtというファイルへのfileconnectionを読み取り用に開いています。",
    "output": "I can call read.csv on the connection, and that by default will just read the entire file then I can close the connection."
  },
  {
    "index": "F23014",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このconnectionに対してread.csvを呼び出してデフォルトではファイル全体を読み込みます。",
    "output": "So that three line process is the same as just calling read.csv on the file."
  },
  {
    "index": "F23015",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "その後、このconnectionを閉じます。この3行で行っている処理はread.csvをファイルに対して呼ぶのと同じです。",
    "output": "So in this case there was no need to use the connection to read the file."
  },
  {
    "index": "F23016",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合には、ファイルを読むのにconnectionを直接使う必要はありませんが時としてconnectionはファイルを読み込むのに非常に便利です。",
    "output": "However, sometimes a connection can be useful if you want to read parts of a file."
  },
  {
    "index": "F23017",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えばここではreadLines関数を使ってテキストファイルから行を読み込んでいるだけです。",
    "output": "So for example, here I've got the readLines function which just reads lines from a text file."
  },
  {
    "index": "F23018",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "words.gzファイルを開きます。",
    "output": "And I'm going to open up this words.gz file."
  },
  {
    "index": "F23019",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このファイルには多くの単語が入っています。これは辞書ファイルのようなものです。",
    "output": "So, this is a file that has words in it for it's like a dictionary file."
  },
  {
    "index": "F23020",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "gzipアルゴリズムのgzを使って圧縮されています。",
    "output": "And it's compressed using the gz, the gzip algorithm."
  },
  {
    "index": "F23021",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "圧縮方法に合うgzfile関数を使ってファイルへのconnectionを開きます。",
    "output": "So I'm going to be using the gz file function to open a connection to that."
  },
  {
    "index": "F23022",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、最初の10行を読み込みます。",
    "output": "And I'm just going to read the first ten lines."
  },
  {
    "index": "F23023",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここではこのconnectionを使って最初の10行を読み込んでいます。",
    "output": "So now I'm going to re, use this connection, and to read the first ten lines."
  },
  {
    "index": "F23024",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この最初の10行をここに出力しました。ファイルの最初に出てきそうな単語が見られるかと思います。",
    "output": "And here, the first ten lines are printed out here as you can see these are the first top ten words in the file."
  },
  {
    "index": "F23025",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "writeLinesも同じようにテキストの行をファイルに出力するのに使う関数です。",
    "output": "And similarly, write lines is a, is a function that can be used to write out lines of text to a file."
  },
  {
    "index": "F23026",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これの使い方は、writeLinesに文字ベクトルを渡すと文字ベクトルの各要素がテキストファイルの各行になります。",
    "output": "And each, and what you do is pass write lines of character vector and each element of the character vector becomes a line in the text file."
  },
  {
    "index": "F23027",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、url関数を使ってウェブサイトへのconnectionを作ります。これはJohnsHopkinsSchoolofHealthのウェブサイトで、このサイトの読み込み用にconnectionを開きます。",
    "output": "You can also use readLines to read elements from a web page, so for example, you can use the URL function to create a connection to a website, so this website here is the Johns Hopkins School of Public Health website."
  },
  {
    "index": "F23028",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、このconnectionから行を読み込みます。",
    "output": "And I'm going to open the connection there for reading, and then I'm going to read lines from this connection."
  },
  {
    "index": "F23029",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、connectionから取得したテキストの行は文字ベクトルxに格納されます。",
    "output": "And so and I'm, and then and so the lines of text that come from the connection are going to be stored in this character vector x."
  },
  {
    "index": "F23030",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで、xの最初の数行を見ると想像したのと同じようなHTMLが見えます。",
    "output": "So when I look at the first couple of lines from x you can see that it looks like HTML which is kind of what you would expect."
  },
  {
    "index": "F23031",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "url関数はファイルでないオブジェクトへconnectionを作るのに便利でreadLinesはconnectionからテキストを読むのに便利です。",
    "output": "And so the URL function is useful for creating a connection to a kind of a non file object."
  },
  {
    "index": "F23032",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これがread.tableやread.csvなどの関数を使っても読めないデータを読む方法の1つです。",
    "output": "So this is another way to read data beyond using functions like read.table or read.csv"
  },
  {
    "index": "F23033",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "引き続き、Rのデータ型と基本的な操作について説明します。",
    "output": "I'm going to continue to talk about data types, and basic operations in R."
  },
  {
    "index": "F23034",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "特に、このビデオではRオブジェクトの一部分を取り出しサブセットにすることを説明します。",
    "output": "In particular in this video I'm going to talk about subsetting objects in R."
  },
  {
    "index": "F23035",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "何種類かの演算子によってRオブジェクトからサブセットが抽出できます。",
    "output": "So there are a couple of different operators that you can use, to extract subsets of diff, of R objects."
  },
  {
    "index": "F23036",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで一つ覚えておいていただきたい基本的な原則は常に角カッコは参照しているオブジェクトを同じクラスのままで返すということです。",
    "output": "So the sing, the basic kind of principles to remember here is that the single square bracket always returns an object of the same class as the original."
  },
  {
    "index": "F23037",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このためベクトルのサブセットを作るとベクトルが返ってきます。",
    "output": "So the subset a vector, you're going to get back a vector."
  },
  {
    "index": "F23038",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "リストのサブセットを作るとリストが返ってきます。",
    "output": "If you subset a list, you're going to get back a list."
  },
  {
    "index": "F23039",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "オブジェクトをサブセットするために角カッコ演算子を使うと参照しているオブジェクトと同じクラスが常に返されます。",
    "output": "Any time you used the single bracket operator to subset an object, you'll get the same, an object of the same class back."
  },
  {
    "index": "F23040",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さらに、角カッコ演算子はオブジェクトから2要素以上を選択するのに使えます。",
    "output": "si, furthermore the single bracket operator can be used to select more than one element of an object."
  },
  {
    "index": "F23041",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ例外がありますがのちほど説明します。",
    "output": "With one ex, exception that we'll get to later."
  },
  {
    "index": "F23042",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコはデータフレームやリストの要素を抽出するのに使います。",
    "output": "But double bracket operator is used to extract elements of a list or a data frame."
  },
  {
    "index": "F23043",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、1つの要素しか抽出できません。",
    "output": "It can only be used to exa, extract a single element and."
  },
  {
    "index": "F23044",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、そこで使ったリストやデータフレームオブジェクトから返されたオブジェクトのクラスは必ずしもリストやデータフレームとは限りません。",
    "output": "And the class of the returned object will not necessarily be a list or a data frame."
  },
  {
    "index": "F23045",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "リストは異なるクラスを格納しておけるため全要素のクラスが同一になっている必要がありません。",
    "output": "So the idea with the double bracket operator is that, remember that lists can, can, can hold things that are of many different classes."
  },
  {
    "index": "F23046",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、1つ目の要素は実数ベクトルで2つ目の要素はデータフレームで3つ目の要素は複素数ベクトルとなっているかもしれません。",
    "output": "So, the first element might be a vec a numeric vector, the second element might be a data frame, the third element might be a complex vector, et cetera."
  },
  {
    "index": "F23047",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、リスト内の要素を抽出するには二重角カッコを使いますが返されるオブジェクトはリストでないかもしれません。",
    "output": "And so when you use the double bracket operator to extract an element of a list, the oh, the object that comes back maybe, may not be a list, it may be an object of a totally different class."
  },
  {
    "index": "F23048",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "$演算子ではリストの要素を抽出します。リストやデータフレームには名前があります。",
    "output": "The dollar sign is used to extract elements of a list, again of a list or data frame that have a name."
  },
  {
    "index": "F23049",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "オブジェクトの名前を使う理由には個別の名前を指定することでオブジェクトの要素を参照できるようにするという点があります。",
    "output": "Very similar objects can have names and the reason, one of the reasons you've used names in an object is so that you can reference elements of the object by the different names."
  },
  {
    "index": "F23050",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "$演算子の意味は二重角カッコと似ていて$演算子を使ってオブジェクトの要素を抽出します。",
    "output": "Otherwise the, the semantics of the dollar sign are similar to the double bracket in the sense that when you use the dollar sign to extract an element of an object it may or may not be of the same class as the original object."
  },
  {
    "index": "F23051",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最初の例として、ここに単純な文字ベクトルxがあります。",
    "output": "So, here is the first, the first example, a very simple vector, a character vector called x."
  },
  {
    "index": "F23052",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして角カッコを使って、最初の要素を抽出します。",
    "output": "And and I'm going to use the single bracket operator to extract the first element."
  },
  {
    "index": "F23053",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "返ってきたのはaで、aがある1つ要素の文字ベクトルです。",
    "output": "So here, what I get back is a, is another character vector with the single element a in it."
  },
  {
    "index": "F23054",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xの2つ目の要素を抽出するならbがある1要素の文字ベクトルが返ってきています。",
    "output": "If I, if I use, if I try to extract the second element of x, what I would get returned back to me is a character vector with the element b in it."
  },
  {
    "index": "F23055",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xの最初の4要素を抽出したいときは連番の1から4を作ればabccが返ってきます。",
    "output": "I could also extract a sequence of elements so if I say, If I, If I want to get the first four elements of x I can cre, construct the sequence one through four and then I get a, b, c, c."
  },
  {
    "index": "F23056",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでお見せした3つの例ではベクトルxを数値インデックスでサブセットしました。",
    "output": "So in these three examples here what I've done is I, I, is I subset the vector x using a numeric index so the numeric index is one, two or the sequence one through four."
  },
  {
    "index": "F23057",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "違う種類のインデックスも使えて論理値のインデックスがあります。次の例ではベクトルxをサブセットしますが文字aよりも大きい全要素を抽出します。",
    "output": "The oth, another type of index that you can use is the, is a logical index."
  },
  {
    "index": "F23058",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは少し奇妙に感じるかもしれませんが数字ではなく大なりの演算子を文字に対して使っています。",
    "output": "So, in this next example here, I'm going to subset the vector x and I want, I only want all the elements were, that are greater than or equ, sorry, that are greater than the letter a, right?"
  },
  {
    "index": "F23059",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、文字にも辞書式順序があります。a以外の文字がaよりも大きくb、c、d、eなどがあります。",
    "output": "So, you might, it might seem strange to you that I'm using the greater than sign with letters instead of numbers but there is a lexicographical ordering to the letters, and all the letters that are greater than a are letters like b, c, d, e, et cetera."
  },
  {
    "index": "F23060",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで返ってきているのは文字ベクトルでaよりも大きい文字のみが含まれています。",
    "output": "So what I get returned to me is a character vector that only contains the letters that are greater than a."
  },
  {
    "index": "F23061",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように、b、c、c、dが返ってきています。",
    "output": "So, here I've got b, c, c, and d."
  },
  {
    "index": "F23062",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "他にも、論理ベクトルを作ってuと名付けます。uはTRUEかFALSEを返すベクトルでこれによってベクトルxのどの要素がaよりも大きいかを返します。",
    "output": "The other thing I can do, is I can create a logical vector, which here I call u, which is just the it's a, it's, it tells it's a true or false vector, which tells me, which tells me which elements of the vector x are greater than a."
  },
  {
    "index": "F23063",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "uを出力すると最初の要素はaと同一値です。",
    "output": "So, if I print out u here I can see that the, the first element is equal to a, so it's not greater than a."
  },
  {
    "index": "F23064",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "よって、aより大きくものではありません。",
    "output": "Then, the next four are greater than a, but then the last element is equal to a, so again, that's false."
  },
  {
    "index": "F23065",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "続く4つの要素はaよりも大きいですが最後の要素はaと同一値なのでこれもFALSEです。",
    "output": "And so, I can subset the vector x with this u vector, and then I get out all the elements that are greater than a."
  },
  {
    "index": "F23066",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトルuでベクトルxのサブセットを作れます。そして、aよりも大きい要素を返させています。",
    "output": "So there are two types of indices that I use here, one, the first type with the numeric index."
  },
  {
    "index": "F23067",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目は数値のインデックスで2つ目は論理値のインデックスです。",
    "output": "And the second type was the logical index."
  },
  {
    "index": "F23068",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "リストをサブセットする場合には少し挙動が違います。",
    "output": "So subsetting a list is a little bit different."
  },
  {
    "index": "F23069",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコか$を使えるからです。",
    "output": "Because you can use the double bracket or the dollar sign operator."
  },
  {
    "index": "F23070",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、角カッコも使えます。",
    "output": "You can also use the single bracket operator."
  },
  {
    "index": "F23071",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目の要素fooはインデックスで1から4の連番です。",
    "output": "That's an ind, and it's a sequence 1 through 4."
  },
  {
    "index": "F23072",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つ目の要素はbarで数値の0.6です。",
    "output": "And the second element is named bar, and it's the number 0.6."
  },
  {
    "index": "F23073",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの2つの要素を含んだリストです。",
    "output": "So this is a list of two elements in it."
  },
  {
    "index": "F23074",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "角カッコを使って最初の要素を抽出できますが角カッコは常に参照元のクラスと同じクラスを返すのでしたね。",
    "output": "And I get, when I, remember the single square bracket always returns the element that's the same class as the original."
  },
  {
    "index": "F23075",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xがリストならxもリストになります。",
    "output": "So if x is a list, than x bracket 1 is going to be a list too."
  },
  {
    "index": "F23076",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "返されたのはリストでfooという要素がありリストには1から4の連番です。",
    "output": "So what I get back is a list that has element call foo, which is a sequence 1 through 4."
  },
  {
    "index": "F23077",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで、二重角カッコを使うと例えばxだと1から4の連番だけが返ってきます。",
    "output": "Now if I use, so if I use the double bracket then if I said x double bracket 1, what I get back is just a sequence, 1 through 4."
  },
  {
    "index": "F23078",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この例での違いは最初の例ではリストが返されて1から4の連番を含んでいました。",
    "output": "So, so the difference here is that in the first example, I got a list that contained the sequence 1 through 4, and in the second example, I got just the sequence."
  },
  {
    "index": "F23079",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これが角カッコ演算子と二重角カッコ演算子の違いです。",
    "output": "That's the difference between the single bracket and the double bracket operator."
  },
  {
    "index": "F23080",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次の例では、$を使います。",
    "output": "In the next example here I'm using a dollar sign."
  },
  {
    "index": "F23081",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、x$barと書けばbarという名前と関係のある要素を返します。",
    "output": "And so I'm saying, x dollar bar."
  },
  {
    "index": "F23082",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合には、ただ0.6が返ってきます。",
    "output": "So in that case it's the, it's a single number 0.6."
  },
  {
    "index": "F23083",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコ演算子を使って文字列を渡すこともできます。",
    "output": "I can also use the double bracket operator and pass in a string."
  },
  {
    "index": "F23084",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xとすればx$barと同じことで0.6が返ってきます。",
    "output": "So x double bracket quote bar is the same as doing as x dollar bar and it just gives me 0.6."
  },
  {
    "index": "F23085",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xのように角カッコで名前を指定すれば要素barが入ったリストを返します。",
    "output": "If I use the single bracket with the name, I can say x bracket quote bar, that gives me a list with the element bar in it."
  },
  {
    "index": "F23086",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "リストをサブセットすると角カッコでは常にリストを返すためです。",
    "output": "So remember, because the single bracket always returns a list if I'm going to subset a list."
  },
  {
    "index": "F23087",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "要素を名前を使ってサブセットすることで良いのはその要素のリスト内での場所を覚えておく必要がないからです。",
    "output": "So the nice thing about being able to subset an element using its name, is that you don't have to remember where it is in the list."
  },
  {
    "index": "F23088",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "bar要素が1つ目か2つ目なのか思い出せない時には数値インデックスでどの位置だったのかを覚えている必要はありません。",
    "output": "So if I couldn't remember whether bar was the first element or was the second element, I don't have to remember whether, what, where it is in order to use the numeric index."
  },
  {
    "index": "F23089",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "思い出す必要はなくリストからその要素を自動的に抽出してくれます。",
    "output": "I can just use its name, and then I don't have to, then it will automatically extract that, extract that element from the list."
  },
  {
    "index": "F23090",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もしリストから複数の要素を抽出したい場合には角カッコ演算子を使う必要があります。",
    "output": "If you want to extract multiple elements of a list then you need to use the single bracket operator."
  },
  {
    "index": "F23091",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、1つ目と3つ目の要素この場合、fooとbazを抽出したい場合にはxに対して角カッコ演算子で1,3の実数ベクトルを渡すとリストが返ってきて要素fooと要素bazが含まれています。",
    "output": "So for example, if I want the third, the first and the third element here, in which case, which is the foo and the baz element, I can pass a, a vector, a 1, 3, the numeric vector 1, 3 to x using the single bracket operator."
  },
  {
    "index": "F23092",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうやって複数の要素をリストから抽出しました。",
    "output": "So that's how I extract multiple elements of a list."
  },
  {
    "index": "F23093",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "複数の要素を抽出したいときには二重角カッコや$演算子は使えません。",
    "output": "There's, you cannot use the double bracket or the dollar sign operators when you only extract multiple elements of a list."
  },
  {
    "index": "F23094",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "$演算子とは異なっていて二重角カッコが良いのは二重角カッコ演算子を使ってインデックス自体が計算で作られたものをリストのインデックスにできるからです。",
    "output": "The nice thing about the double bracket operator, which is different from the dollar sign, is that you can use the double bracket operator to, to, to index it a list, where the index itself was computed."
  },
  {
    "index": "F23095",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "$を前に使った時にはbarという単語を入力する必要がありオブジェクトの名前を入力する必要がありました。",
    "output": "So, notice that when I used the dollar sign before, I had to, I actually typed out the word bar."
  },
  {
    "index": "F23096",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、要素の名前が計算結果で作られていることがあります。",
    "output": "But sometimes the name of the element is actually the result of some computation."
  },
  {
    "index": "F23097",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、foo、bar、bazの3つの要素があるリストがあります。",
    "output": "So for example here I've got a list with three elements, foo, bar, and baz."
  },
  {
    "index": "F23098",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "fooの文字列が入ったnameという変数を作ります。",
    "output": "And then I create a variable called name which is actually the string foo."
  },
  {
    "index": "F23099",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この変数に対して二重角カッコ演算子を使うとリストの中にはnameという要素はありませんね。",
    "output": "Notice that the there's no element in the list that has the name, name in it."
  },
  {
    "index": "F23100",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、リスト中にfooという名前の要素はあります。",
    "output": "But there is an element in the list that has the name foo in it."
  },
  {
    "index": "F23101",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコ演算子に変数nameを入れるとfooと関連した要素が返されます。",
    "output": "So now when I, when I pass this variable called name into the double bracket operator, it returns me the, the element that was associated with foo."
  },
  {
    "index": "F23102",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "変数nameの値がfooだからです。",
    "output": "because that's what the value of the name variable is."
  },
  {
    "index": "F23103",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "使いたいインデックスの値を計算した時は二重角カッコ演算子を使う必要があります。",
    "output": "So if I can, if I compute the index that I want to use, then I have to use the double bracket operator."
  },
  {
    "index": "F23104",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "$演算子をnameと使うとリストの中からnameと関連する要素を探そうとします。もちろん、この要素はリストにありません。",
    "output": "If I use the dollar sign, then it's going to literally look for an element of the list that's, that has the word name associated with it, and that of course doesn't exist in this list."
  },
  {
    "index": "F23105",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なので、$を使うときには実際のリテラルのシンボルを使う必要があります。",
    "output": "So to use the dollar sign I need to use a literal symbol."
  },
  {
    "index": "F23106",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコ演算子では1つの数ではなく整数の位置の数を使えます。これはリストに再帰していると考えることもできます。",
    "output": "Now, the double bracket operator can take an integer sequence in as, rather than a single number, and the way you can think of this is that it kind of recurses into the list."
  },
  {
    "index": "F23107",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにあるリストを見ると1つ目の要素のaは10、12、14の要素がある別のリストです。",
    "output": "So if you look at this current list I've got here, with the first element a is another list which has elements 10, 12 and 14."
  },
  {
    "index": "F23108",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで14を抽出したいとします。",
    "output": "So suppose I wanted to extract the number 14."
  },
  {
    "index": "F23109",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目の要素の中の3つ目の要素です。",
    "output": "Well, that's really the third element of the first element, right?"
  },
  {
    "index": "F23110",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これはリストa内の3つ目の要素ですがリストの1つ目の要素でもあります。",
    "output": "So it's the third element of the list, which happens to be the first element of the other list."
  },
  {
    "index": "F23111",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1、3の要素を取り出すには二重角カッコを使ってベクトル1、3をxに対して渡します。",
    "output": "And so I can extract the 1, 3 element term by passing the vector 1, 3 to it to the x list using the double bracket operator."
  },
  {
    "index": "F23112",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは1と3をサブセットするのと同じです。",
    "output": "And that's equivalent to kind of doing this double sub-setting of one and three."
  },
  {
    "index": "F23113",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つ目の要素の1つ目の要素も整数ベクトル2,1を渡して抽出できて3.14が返ってきます。",
    "output": "I can also extract the first element of the second element by use, by passing the integer vector 2,1 to get 3.14"
  },
  {
    "index": "F23114",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、部分一致はとても便利です。コマンドラインへの入力をかなり減らすことができます。",
    "output": "So partial matching is a handy tool which it, which it often saves you a lot of typing at the command line."
  },
  {
    "index": "F23115",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "プログラムや関数を書く場合にはそれほど役に立つというわけではないですがコマンドラインで作業している時にはできるだけ素早く入力したいのでとても役に立ちます。",
    "output": "It's not particularly useful when you're pro, when you're writing out programs and functions but it's very useful when you're kind of working at the command like typing things as fast as you can."
  },
  {
    "index": "F23116",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "部分一致というのは角カッコ、二重角カッコ、$の演算子で使えます。",
    "output": "So the idea with partial matching is that it works with the double bracket and the single, and the dollar sign operator."
  },
  {
    "index": "F23117",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、リストxがありこれは1から5の連番でできたaardvarkという要素があったとします。",
    "output": "So, suppose I have a list x which has an element in it called aardvark which is the sequence 1 through 5."
  },
  {
    "index": "F23118",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "毎回aardvarkと入力するのはちょっと面倒ですよね。",
    "output": "And suppose typing out the word aardvark every single time is a bit of a pain so I'm just going to type the word a."
  },
  {
    "index": "F23119",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "$はaと一致する名前をリストから探して動作するようにデフォルトでなっています。",
    "output": "Well, the way the dollar sign works by default is that it looks for it looks for a name in this list, that matches the letter a."
  },
  {
    "index": "F23120",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合1つの要素だけが合致してaardvarkが見つかります。",
    "output": "In this case there's only one element."
  },
  {
    "index": "F23121",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、1から5の連番が入っている関連するオブジェクトを返します。",
    "output": "And then it gives me the, the el, the object associated with aardvark, which is the sequence 1 through 5."
  },
  {
    "index": "F23122",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコ演算子を使う時は少し違います。",
    "output": "So if I use the double bracket operator things are a little bit different."
  },
  {
    "index": "F23123",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコ演算子のうしろにはリスト内の名前のどれかに全体一致する名前を書くことが決まっています。",
    "output": "So what the double bracket operator expects, is that it's going to be, that the name that you pass it is going to be an exact match for one of the names in the list."
  },
  {
    "index": "F23124",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、二重角カッコは$のようにデフォルトでの部分一致は行いません。",
    "output": "So by default the double bracket operator doesn't do partial matching like the dollar sign does."
  },
  {
    "index": "F23125",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xを実行するとNULLが返ってきます。リスト内にaという名前の要素がないからです。",
    "output": "So now when I pass x double bracket a what happens is I get null back, because there's no element of the list that has the name a."
  },
  {
    "index": "F23126",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "二重角カッコ演算子の2つ目の引数にはexact引数を指定することができます。",
    "output": "But there's a some, a second argument that you can pass to the dou, double bracket operator, which is the exact argument."
  },
  {
    "index": "F23127",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xを実行するときにexact=FALSEを指定すると1から5の連番を返します。",
    "output": "And if you specify that exact equals false. And then when I pass at x double bracket a, it gives me the sequence 1 through 5, because that's the one that mat, matches the letter a the closest."
  },
  {
    "index": "F23128",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最後に、オブジェクトから欠損値やNA値を削除する方法について説明します。",
    "output": "Last thing I want to talk about is removing missing values or NA values from an object."
  },
  {
    "index": "F23129",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これはデータ分析では非常に頻繁に行う操作で現実的なデータの多くには欠損値が多く存在するからです。",
    "output": "This is a very common operation in, in, in data analysis because most realistic data have lots of missing values."
  },
  {
    "index": "F23130",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトルか行列かデータセットに対してこの操作を行うにはまず論理ベクトルを作ってどの値がNA値が分かるようにします。",
    "output": "And so the way you can do this for, of either a vector, or a matrix, or a data frame is you want to create a logical vector which tells you where the NA's are and so that you can remove them by sub-setting."
  },
  {
    "index": "F23131",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、サブセットを実行することでNA値のものを削除します。ここにベクトルxがあります。",
    "output": "So here I've got a, a vector x, this is a very simple example."
  },
  {
    "index": "F23132",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これはとても単純な例で1、2、4、5の数値しかないですが3つ目と5つ目にNAの要素があります。",
    "output": "But then there are missing elements NA in the third position and in the fifth position."
  },
  {
    "index": "F23133",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで行いたいのは1、2、4と5だけのNA値外でできたベクトルを返してNA値は取り除いて計算できるようにすることです。",
    "output": "So what I want to do is I want to get a vector back that's just one two four five, the non missing values."
  },
  {
    "index": "F23134",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最初にis.na関数を使ってベクトル内を検査しNA値の要素を調べます。",
    "output": "And I want to strip out the missing value so I can maybe do some computation."
  },
  {
    "index": "F23135",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "badという名前でベクトルを作ります。",
    "output": "So, what I, the first thing I do is I use the is.na function to, to go through the vector and tell me which elements are NA and I create a new vector called, which I called bad here."
  },
  {
    "index": "F23136",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "badは論理ベクトルで欠損値はTRUEに、欠損値以外はFALSEの値を返します。",
    "output": "So, bad is going to be a logical vector which tells, which, which is true if the element is missing and false if it's not missing."
  },
  {
    "index": "F23137",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは出力していませんがベクトルbadは論理ベクトルでFALSE、FALSE、TRUE、FALSE、TRUE、FALSEという値になるはずですね。",
    "output": "So, even though I haven't printed it here the, the, the bad vector is going to be a logical vector that has false, false, true, false, true, false."
  },
  {
    "index": "F23138",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "3つ目と5つ目の要素が欠損しているからです。",
    "output": "Right, because the third and the fifth elements are missing."
  },
  {
    "index": "F23139",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これでどの要素が欠損か分かりましたが欠損値部分は不要で欠損値以外の部分を使いたいのでこのbadの逆の値を返すためには!",
    "output": "Now that tells me which ones are missing but actually I don't want the ones that are missing, I want the ones that are non missing."
  },
  {
    "index": "F23140",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "x[!bad]とすれば有効な要素の1、2、4、5が返ってきます。",
    "output": "So now I take x single bracket bang bad and that gives me the good elements which are 1, 2, 4 and 5."
  },
  {
    "index": "F23141",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、複数オブジェクトが入った複数のベクトルがあってベクトル毎に異なる欠損場所がある場合全てのオブジェクトに欠損がないようにサブセットを取りたいですよね。",
    "output": "So what if there are a multiple vectors or multiple objects and you want to take and each one has a kind of missing values in slightly different places and you kind of, you want to take the subset of all the objects that have no missing values, all right?"
  },
  {
    "index": "F23142",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにベクトルxを作り1、2、4、5とバラバラに欠損値があるものを作ります。",
    "output": "Which is 1, 2, 4 and 5, and missing values scattered about."
  },
  {
    "index": "F23143",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に文字ベクトルのyを作って欠損値を入れておきます。",
    "output": "And then y is, is a character vector with also some missing values in it."
  },
  {
    "index": "F23144",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "complete.cases関数を両方のベクトルに使ってベクトルを返してもらいます。このベクトルでは比較元の2つのベクトルの両方に欠損値がない位置を返します。",
    "output": "So I can use the complete cases function on both vectors which will give me a vector that tells me which of, of, of the two different vectors, which ones had were, which, which are, which positions are there that have both elements non missing."
  },
  {
    "index": "F23145",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "見ての通り、最初の2つはどちらも欠損値ではありません。",
    "output": "So you can see the first two are, are both non missing."
  },
  {
    "index": "F23146",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに1つ目のベクトルには1、2があり2つ目にはa、bがあります。",
    "output": "I got 1, 2, in the first one, and a, b in the second one."
  },
  {
    "index": "F23147",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "5つ目の要素は欠損で6つ目の要素は欠損ではありません。",
    "output": "The third one's missing, the fourth one is non missing the, the fifth one is missing and the sixth one is non missing."
  },
  {
    "index": "F23148",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、ベクトルxとyでは1、2、4、6つ目の要素が必要です。",
    "output": "So, of, for the both, for both vectors x and y, I want the first, the second, the fourth, and the sixth elements."
  },
  {
    "index": "F23149",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xをgoodでサブセットするとx内のgoodの要素が返されてyをgoodでサブセットするとy内のgoodの要素が返されます。",
    "output": "So now when I subset x, I get the good elements of that, and when I subset y, I also get the good elements of that."
  },
  {
    "index": "F23150",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようにして複数のオブジェクトを見て欠損値を除外して有効な要素を取得できます。",
    "output": "So that's how I can look at multiple objects and kind of subset all the missing values out to get the good elements."
  },
  {
    "index": "F23151",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "complete.cases関数を使うとデータフレームから欠損値を除外することができます。",
    "output": "You could also remove you can also use complete cases to remove missing values from data frames."
  },
  {
    "index": "F23152",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに、単純なデータフレームがあり最初の6行が表示されています。",
    "output": "So here I've got a simple data frame where I'm showing the first six rows."
  },
  {
    "index": "F23153",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "見てのとおり、データフレームには列が6列あり、6つの変数があるということです。",
    "output": "As you can see there are six columns to this data frame so there's six variables."
  },
  {
    "index": "F23154",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ozone変数に欠損値がありまた、Solar.R変数に欠損値があります。",
    "output": "And there's some missing values in the ozone variable and there's some missing values in the solar.r variable."
  },
  {
    "index": "F23155",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここではデータフレームの中で行の全ての値が欠損でないものを出力します。",
    "output": "And so all I want is the is the, is the, are the rows of the data frame where all the values are non missing, right?"
  },
  {
    "index": "F23156",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この単純な例では1行から4行までです。",
    "output": "So in this simple example, the rows that I want are rows 1 through 4."
  },
  {
    "index": "F23157",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "complete.casesをairqualityデータフレームに使いgoodと名付けた論理ベクトルを作ります。",
    "output": "And I create a, a logical vector that I called good here, so the logical vector here tells me which rows are complete."
  },
  {
    "index": "F23158",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "airqualityの行列をサブセットで消去して最初の該当行数行を消去し欠損値のある行がなくなったのが分かります。",
    "output": "And then when I subset out the air quality matrix take and take out the first couple of rows you can see that I now, that none of the rows have any missing values in them."
  },
  {
    "index": "F23159",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで、欠損値を消去できます。",
    "output": "So that's subsetting out missing values."
  },
  {
    "index": "F23160",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "complete.casesは非常に便利な関数で複数のベクトルや大きなデータフレームがあるときにここから欠損値を全て消去するのに使えます。",
    "output": "And there, in complete cases of very handy function which is when, when you have multiple sets of vectors or dat, or large data frames or you want to subset all out, all the missing values."
  },
  {
    "index": "F23161",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトル操作は、コマンドライン上で使っても使いやすくなるR言語の1つの機能です。",
    "output": "So, vectorized operations, is one of the features of the R language that make it, that makes it easy to use, on the command line."
  },
  {
    "index": "F23162",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "loopや、それに似たことをせずにコードが書けるようにしてくれるいい機能です。",
    "output": "It makes very, kind of, nice to write code, without having to do lots of looping, and things like that."
  },
  {
    "index": "F23163",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "MATLABのような他の言語の多くが同様の機能を備えています。",
    "output": "Many other types of languages, like MATLAB have this kind of feature."
  },
  {
    "index": "F23164",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、ベクトル操作というのは、例えば計算を行うときに並列処理で行えるということです。",
    "output": "so, the idea with vectorized operations is, is that things can happen in parallel, when you, for example want to do a computation."
  },
  {
    "index": "F23165",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに、xとyの2つのベクトルがあります。",
    "output": "For example, suppose I got two vectors here x and y."
  },
  {
    "index": "F23166",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xは1から4の連続する数字でyは6から9の連続する数字です。",
    "output": "x is the sequence one through four and y is the sequence six through nine."
  },
  {
    "index": "F23167",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この2つのベクトルを一緒に足したいとします。",
    "output": "And I want to add the two vectors together."
  },
  {
    "index": "F23168",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "足したいというのはxの1つ目の要素をyの1つ目の要素に加えて、xの2つ目の要素にyの2つ目の要素を加えて、3つ目の要素を3つ目の要素に加えるということです。",
    "output": "Now, when I say I want to add them, what I mean is I want to add the first element of x to the first element of y, the second element of x to the second element of y, et cetera, the third element to the third element."
  },
  {
    "index": "F23169",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、こんなことを並列で行いたいのです。",
    "output": "So I want to kind of do things in parallel like that."
  },
  {
    "index": "F23170",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "他の言語だったら、loopを使って、行う必要があるかもしれません。ひとつひとつの要素を繰り返し処理して1つずつ加えていきます。",
    "output": "So, in other languages you might have to use a loop to do that, so you'd loop through each element and kind of add them one by one."
  },
  {
    "index": "F23171",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、Rでは、+(プラス)をこの2つのベクトルに使えば、Rは加えていってくれます。x+yで、期待する結果を計算します。",
    "output": "But in R you can just use the plus to, on the two vectors, and it'll just add them together so x plus y kind of does what you would expect."
  },
  {
    "index": "F23172",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1を6に、2を7に、3を8に、4を9に加えて、7、9、11、13のベクトルを返します。",
    "output": "It adds 1 to 6, 2 to 7, 3 to 8, and 4 to 9, so you get the vector 7, 9, 11, 13."
  },
  {
    "index": "F23173",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "同じように、不等号も使えて論理型ベクトルを返します。",
    "output": "similarly, you can use the greater than, or less than symbols to, give you logical vectors."
  },
  {
    "index": "F23174",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、x>2を行うとxは実際には4つの数のベクトルですが、どの数を2と比較するのでしょうか?",
    "output": "So well x is actually a, a vector of 4 numbers."
  },
  {
    "index": "F23175",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトル操作では、全ての数字を2と比べてベクトルで結果を返します。",
    "output": "So, which one, so, which number are you comparing to 2?"
  },
  {
    "index": "F23176",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "各数字が2を超えたかどうかでTRUEかFALSEを返します。また、以上の表記(>=)も使うことができます。",
    "output": "Well, the, the vectorized operation compares all the numbers to 2, and it gives you a vector of falses and trues depending on which numbers happen to be bigger than 2."
  },
  {
    "index": "F23177",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすると各数字が2以上かどうかを返し、==を使うと等しいかを返します。",
    "output": "So you can also use greater than equal to, and that'll tell you which numbers are greater than and equal to 2, and the double equals sign, tests for equality."
  },
  {
    "index": "F23178",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、yの各数字が8と等しいか判定しています。",
    "output": "So it'll take each element of y and test to see whether it's equal to 8."
  },
  {
    "index": "F23179",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "他にも乗算のような数値計算はアスタリスク(*)で除算はスラッシュ(/)で行いこれらも全てベクトル操作です。",
    "output": "other, and the other kind of, or arithmetic operations like multiplication, by the asterisk, and division, by the solidus, are all vectorized types of operation."
  },
  {
    "index": "F23180",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトルに対して加減乗除計算をしたいときにはこうすることで自然に行えます。",
    "output": "So when you want to multiply or divide, add, subtract, vectors, you just you can do the natural thing, just add them together or multiply them together, and they will be, and they will be the operation will be done in parallel."
  },
  {
    "index": "F23181",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つを足したり2つを掛けたりすることで並列に処理されます。",
    "output": "Similarly you can do, you can do You can add make, you can add and subtract, and multiply and divide matrices together."
  },
  {
    "index": "F23182",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "同じように行列に対しても加減乗除計算を行えます。",
    "output": "So it's useful to know this because there are different types of mult matrix multiplication."
  },
  {
    "index": "F23183",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにxとyの2つの行列を作りました。",
    "output": "So I've created two matrices here, x and y."
  },
  {
    "index": "F23184",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xは1から4でできた2x2の行列です。",
    "output": "X is the matrix 1 through 4, it's a two by two matrix."
  },
  {
    "index": "F23185",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "x*yをすると、行列の掛け算にはなりません。",
    "output": "So if I just do x times y, this is not a mat, matrix multiplication."
  },
  {
    "index": "F23186",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、xのの要素で掛け算しています。",
    "output": "So the first, the kind of the 1, 1 element of x is multiplied by the 1, 1 element of y."
  },
  {
    "index": "F23187",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、それぞれの要素が並列に掛け算されています。",
    "output": "So, each element is multiplied, together in parallel."
  },
  {
    "index": "F23188",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "割り算を実施したときも逆行列などの計算ではなく1つ目の行列の要素を別の行列の要素で割り算するだけです。",
    "output": "This is not a matrix inverse or something like that, this is just dividing one matrix, literally element by element by another."
  },
  {
    "index": "F23189",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "本当の行列の積を計算するときには行列の積の記号%*%を使います。",
    "output": "So if you want to do a true matrix multiplication, you have to use the %*%, that's the symbol for a matrix multiplication."
  },
  {
    "index": "F23190",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "今のところはここまででベクトル操作については終わりです。今後はもっと頻繁に出てきますが考え方を紹介しておきました。",
    "output": "So when you, so, this is just, that's it for vectorized operations for now, You'll see these a lot more often later on, but the idea, but I just wanted to introduce this idea, because it makes code easier to write."
  },
  {
    "index": "F23191",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これまでに他の種類のプログラム言語でプログラムしたことがあってもこのベクトル操作ができない言語だった場合には、forやwhileなどの繰り返し処理を行うことでこの計算を行うことが普通です。",
    "output": "And for those of you who are kind of used to other types of programming languages, if you've programmed in languages where you can't do this kind of thing, it's sometimes, it's common to kind of reflexively go to something like a for loop or a while loop or whatever it is."
  },
  {
    "index": "F23192",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかしR言語のような言語ではベクトル操作を使うだけでコードをかなりシンプルにできます。",
    "output": "But in the but in a language like R, you can just use the vectorized operations to make the code a lot simpler."
  },
  {
    "index": "F23193",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "皆さん、こんにちは。",
    "output": "Hi, everyone."
  },
  {
    "index": "F23194",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このRプログラミングのクラス用に開発した実験的機能についてご紹介しておきます。",
    "output": "I just want to introduce a experimental feature that we've, that we've developed for the R programming class."
  },
  {
    "index": "F23195",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "触ってRを学ぶ統計略してSWIRLと呼びます。",
    "output": "It's called Statistics with Interactive R Learning or SWIRL for short."
  },
  {
    "index": "F23196",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここジョンス・ホプキンスのバイオ・スタティスティックス学部の学生ニック・カルケディが開発しました。",
    "output": "And it's, and it was developed by Nick Carchedi, who's a student here at the Johns Hopkins department of bio-statistics."
  },
  {
    "index": "F23197",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これを使うと、自分のペースで触りながらRが学べます。",
    "output": "This is a system that allows you to kind of interactively learn R at your own pace."
  },
  {
    "index": "F23198",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "R言語の様々な機能をひとつずつ見せてくれて練習することができます。",
    "output": "And it will walk you through a, a bunch of lessons about different aspects of the R language and you can kind of practice as you go."
  },
  {
    "index": "F23199",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "クラスを見てからアサインメントをするのに1つ1つ操作するのではなくRのコンソールで案内されながらRで作業することができます。",
    "output": "So, rather than kind of watching a lecture and then, you know, doing an assignment and kind of doing things piece by piece, you can actually work on R right in the R console in, in a kind of guided way."
  },
  {
    "index": "F23200",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "自分であれこれやりながら正解を見つけるのではありません。",
    "output": "So, I think this, the SWIRL modules are really helpful and I encourage you to try to walk through them."
  },
  {
    "index": "F23201",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、SWIRLを完了していけばプログラムのアサインメントでは少しだけ追加点がもらえます。",
    "output": "If you decide to complete them you'll get you'll get a little extra credit through the programming assignment."
  },
  {
    "index": "F23202",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、モジュールはあくまで必須ではありません。",
    "output": "But the, the modules are absolutely not required."
  },
  {
    "index": "F23203",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "モジュールを行おうと気にする必要はありません。",
    "output": "And so, you don't have to worry about doing them."
  },
  {
    "index": "F23204",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "SWIRLを行わなくてもクラスを完璧に終えることができます。",
    "output": "You can still do perfectly well in the class without doing the SWIRL modules."
  },
  {
    "index": "F23205",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そうではありますが、是非試してください。",
    "output": "Nevertheless, I encourage you to try it out."
  },
  {
    "index": "F23206",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "とても楽しめると思いますよ。",
    "output": "I think it'll be a lot of fun."
  },
  {
    "index": "F23207",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なぜなら、関数はRのどんなプログラムでも非常に決定的な役割を持っていてデータ分析や統計分析を行う際にも多くの関数を書くことになるからです。",
    "output": "In this lecture, I just want to get everyone on board with writing functions, because functions play a critical role in any R programming and you tend to write a lot of them when you're writing doing a lot of data analysis or doing a lot of kind of statistical analysis."
  },
  {
    "index": "F23208",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、特にプログラム言語そのものにあまり慣れていない人が書けるようにしたいと思います。",
    "output": "And so I just want to make sure that everyone can kind of get started writing functions and and particularly for those who are less familiar with programming languages in general."
  },
  {
    "index": "F23209",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、このビデオは関数を初めて書くことを扱っていきます。",
    "output": "So this is just going to be about writing your first function."
  },
  {
    "index": "F23210",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "いわゆるHelloworldのR版のようなものです。",
    "output": "It's kind of like the hello world so to speak of R."
  },
  {
    "index": "F23211",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず、最初にすることはテキスト形式のファイルに関数を書いていくということです。",
    "output": "So the first thing you're going to want to do is you going to want to write the function in a text file, all right."
  },
  {
    "index": "F23212",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rのコマンドラインで関数を書くことも可能ですが通常は、好まれないやり方です。",
    "output": "It's possible to write functions on the command line in R, but it usually no preferrable."
  },
  {
    "index": "F23213",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "通常は、関数を個別のファイルに入れておくものです。コマンドラインで、動的に入力するものとは別にしておきます。",
    "output": "So usually you're going to want to put your functions, in a separate file, separate from any interactive stuff that you're doing in the command line."
  },
  {
    "index": "F23214",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "後々、作った関数をRのパッケージに入れようとするときには文書や他のものを含むようにした構造的環境にしますがここでは説明しないでおきます。",
    "output": "In the future you'll want to put your functions in an R package, which is a kind of a more structured type of kind of, kind of environment with documentation and everything, but we won't talk about that now."
  },
  {
    "index": "F23215",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、まずは関数を入れておくのはテキストファイルだということです。",
    "output": "Right now the first thing you're going to want to do is put your functions in a text file."
  },
  {
    "index": "F23216",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、まず最初にするのはRStudioを起動します。",
    "output": "Okay, so the first thing we're going to want to do is open up our studio."
  },
  {
    "index": "F23217",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "お手元でも、同じことが起こるかもしれませんがだいたいの場合には、閉じたりただ無視しておいて構いません。",
    "output": "So lets do that."
  },
  {
    "index": "F23218",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、ここにRscriptを作りたいと思います。まずは、空のscriptを作ってコードを入れていきましょう。",
    "output": "And so you can see here in R Studio there's some there's some stuff going on here from a previous project that I'm working on."
  },
  {
    "index": "F23219",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで書く最初の関数は本当に単純なものです。2つの数値を使って足すだけのものにします。",
    "output": "So you, that may happen to you, and generally you can either close it or you can just ignore it."
  },
  {
    "index": "F23220",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "現実的には、この関数に意味はありませんが、この例を使って関数の構文の使用方法や、引数の指定方法や戻り値を返す方法を示します。",
    "output": "I wanted to create a new R script here, so let's create a clean script here to put our code into."
  },
  {
    "index": "F23221",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数は、2つの数を足すのでadd2と呼ぶことにします。",
    "output": "So the first function I'm going to write is really simple it's just going to take two numbers and add them together."
  },
  {
    "index": "F23222",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まずは、function構文を使って書きはじめとします。",
    "output": "So this function obviously doesn't have a real point to it but it shows you how to use the function syntax, how to specify the arguments and how to return the value."
  },
  {
    "index": "F23223",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、これは2つの値を足すので2つの引数を取ります。",
    "output": "So the function that adds two values I'm just going to call it add two."
  },
  {
    "index": "F23224",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この2つの引数を、+の演算子を使って、足します。",
    "output": "And and so you get it you use the function directive to start it off."
  },
  {
    "index": "F23225",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "x+yとして、さらに関数を波括弧で閉じます。",
    "output": "Now it's going to take it's going to add two values so it has to take two arguments so I'm just going call the two arguments x and y and then I'm going to take the two arguments and add them together with the plus operator alright x plus y and then I close out the function with the curly brace."
  },
  {
    "index": "F23226",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように2つの要素を合計した値を返すために特に何かをする必要はありません。",
    "output": "So you can see that I didn't have to do anything special to return the value that that's the sum of the two elements because the or any R function, the, the function returns whatever the last expression was."
  },
  {
    "index": "F23227",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここには、1つの文しかありません。",
    "output": "So here there's only really one expression."
  },
  {
    "index": "F23228",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、これが最後の文でこの値は、xとyを足したものになっています。",
    "output": "So therefore its the last expression and, and it equals the sum of x and y."
  },
  {
    "index": "F23229",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "画面右側に関数が来ています。",
    "output": "So here I can, I can highlight this guy and run it in the console, and you can see now I've got my function here."
  },
  {
    "index": "F23230",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでadd2として、3と5を渡すと8が返ってくるといいですよね。",
    "output": "I can say add two, and lets give it say three and five and hopefully I get eight."
  },
  {
    "index": "F23231",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、2つの数を加えてこれはここで終わりです。",
    "output": "So it adds the two numbers together, and that's that."
  },
  {
    "index": "F23232",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "非常に単純な関数でしたがR言語で、最初の関数が書けましたね。",
    "output": "So it's a very simple function, and and, you've now written your first function in R."
  },
  {
    "index": "F23233",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、次の関数は少しだけ複雑になったものを説明します。",
    "output": "S the next function that I want to talk about is a little slightly more complicated."
  },
  {
    "index": "F23234",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "数値ベクトルを引数にしてベクトルのサブセットを返すものですが、10を超えるものを返すようにします。",
    "output": "It's going to take a vector of numbers, it's going to, it's going to return the subset of the vector, that's, that's above the vector value of ten."
  },
  {
    "index": "F23235",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、10を超える数があったらこれらの数を返すようにします。",
    "output": "So any number that's bigger than ten, it's going to return those numbers for you."
  },
  {
    "index": "F23236",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、最初の関数を表示してみましょうか。",
    "output": "so, let's bring back our original function."
  },
  {
    "index": "F23237",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数はabove10と呼びましょう。",
    "output": "We'll call this one, above ten."
  },
  {
    "index": "F23238",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ10を超えた数を返すからというだけの理由です。",
    "output": "Just because it gives you any number that's above ten."
  },
  {
    "index": "F23239",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "引数のベクトルはxをしましょう。かならずxと呼ぶ必要はありませんがxとしました。",
    "output": "snd, it's going to take a vector here, we'll call it x, you don't have to call it x, I'm just calling it that."
  },
  {
    "index": "F23240",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の始まりと終わりが分かりやすくするためです。",
    "output": "And I like to open and close the curly braces right away, just so you know where the beginning and the end of the function is."
  },
  {
    "index": "F23241",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ひとつのファイルに長いコードを書いたときに分かりやすくなります。",
    "output": "If you happen to have a lot of code in, you know, in, in a single file."
  },
  {
    "index": "F23242",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず最初に行うのは論理文を書いてベクトルxのどの要素が10より大きいかを判定します。",
    "output": "So the first thing I'm going to want to do is I want to construct a logical statement that figures out which elements of this vector x are, are greater than ten."
  },
  {
    "index": "F23243",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "余談ですが、このまず、代入先のオブジェクトを指定します。",
    "output": "So I'm going to assign an object."
  },
  {
    "index": "F23244",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "合致した数値を使うのでuseと呼ぶことにします。",
    "output": "I'll call it use because these are, these are the numbers that I'm going to use."
  },
  {
    "index": "F23245",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、xが10より大きいと指定します。",
    "output": "And I'll say x greater than ten."
  },
  {
    "index": "F23246",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "余談ですが、このこれでTRUEとFALSEからなる論理ベクトルが返されてどの要素が10より大きいかを示してくれます。",
    "output": "So this'll return a logical vector, of trues and falses to indicating which element of x is greater than ten."
  },
  {
    "index": "F23247",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、この論理ベクトルでベクトルxをサブセットします。",
    "output": "And then I'm going to subset the vector x with this logical vector."
  },
  {
    "index": "F23248",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで、関数はベクトルx内の10より大きい数をサブセットして返します。",
    "output": "So now this function returns, the subset of the vector x that is bigger than ten."
  },
  {
    "index": "F23249",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、xの要素に10より大きいものがなければ空のベクトルが返されます。",
    "output": "Of course if there are no elements of x that are bigger than ten, that it will return an empty numeric vector."
  },
  {
    "index": "F23250",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、もちろんですが、この10という数に特に意味があったわけではありません。",
    "output": "Now of course, there's really nothing special about the number ten."
  },
  {
    "index": "F23251",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この数は思いつきで決めただけなので任意の数を指定して抽出するような関数を作りたいかもしれませんよね?",
    "output": "I just kind of made that up, and so you may want to created a function that allows people to sub, to kind of extract the elements of a vector."
  },
  {
    "index": "F23252",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ユーザーが数を指定できるようにしたいことでしょう。",
    "output": "So maybe you'll want to allow the user to specify that number."
  },
  {
    "index": "F23253",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに新しい関数を作りましょう。",
    "output": "So I'll just call, I'll create a new function here."
  },
  {
    "index": "F23254",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "コードには、10が指定されていません。",
    "output": "So it doesn't have the ten encoded in it."
  },
  {
    "index": "F23255",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "function構文を使って2つ目の引数として任意の数nを指定できるようにします。では、始めていきます。",
    "output": "I'll use the function directive, and I'll have a second arbitrary called n, which can be any number really."
  },
  {
    "index": "F23256",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "波括弧を入れましてそして、xがnよりも大きいという論理文を作ります。",
    "output": "So let's start it off, we'll get the curly braces in there, and now I'll create a logical statement that x is greater than n."
  },
  {
    "index": "F23257",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、論理文の結果に基づいてベクトルxをサブセットします。",
    "output": "And then I'll subset the vector x based on that logical statement."
  },
  {
    "index": "F23258",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このテキストをRにコードとして入れてここから関数を実行できるようにします。",
    "output": "So now if I can source this into R."
  },
  {
    "index": "F23259",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まずベクトルを作って1から10のベクトルxを作ります。",
    "output": "So I'll just create a vector."
  },
  {
    "index": "F23260",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "above(x)を指定します。",
    "output": "And I'll say above x."
  },
  {
    "index": "F23261",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "数値nを指定しなかったので関数はどの数で切るのかが分かりません。閾値を指定する必要があります。",
    "output": "Oh I, you see, so I didn't specify the number n, so it's not going to know what to cut it off at, so I need to specify the threshold, so let's do ah,12."
  },
  {
    "index": "F23262",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "12より大きい数が全て返されているのが分かります。",
    "output": "And you can see it returned all the numbers that are greater than 12."
  },
  {
    "index": "F23263",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "期待していた動きで関数は正しく動作しているようです。",
    "output": "So that's kind of as we expected, and so the function appears to be working well."
  },
  {
    "index": "F23264",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、ここで仮に数値の10には何か意味があったとしましょう。例えば、頻繁に使う数だとか共通に使われる数だとします。",
    "output": "Now let's suppose that maybe there is something special about the number ten, and maybe it's something that people are going to be kind of be doing very often and it's a very common number."
  },
  {
    "index": "F23265",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "だとするとデフォルトの値を引数に指定しておいてデフォルトとして10とします。",
    "output": "So you might you want to specify a default argument so you might want to the default to be ten, so remember when I ran the function before and I didn't specify the number n."
  },
  {
    "index": "F23266",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "先ほどはnを指定せずにこの関数を実行したらエラーになったのを覚えていまよね。",
    "output": "It gave me an error or maybe you don't want people to have to encounter that error, and so you'll specify a default value n equals ten so people don't specify the cutoff value n, it will just automatically default to ten."
  },
  {
    "index": "F23267",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ユーザーにエラーを見せたくないかもしれません。",
    "output": "So now I can run this in R and now if I do above, which is x, you see I don't get the error anymore."
  },
  {
    "index": "F23268",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合には、デフォルト値としてn=10を指定してユーザーが切り捨て値のnを指定しなかった時でも関数は自動的にデフォルトの10に設定します。",
    "output": "It automatically gives you all the numbers that are bigger than ten."
  },
  {
    "index": "F23269",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これはRでの楽な機能の1つで関数を書いてデフォルト値を指定しておくことができるので引数の値で、特に共通に使われる値がある場合や指定することが重要でない場合にユーザーが楽に使えるようにできます。",
    "output": "So it's kind of nice in R when you're writing functions to be able to specify default values like this that make the life of the user just a little bit easier, specially for very common cases, where it's not important that the user specify an argument."
  },
  {
    "index": "F23270",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここまでに見てきたのはRのとても単純な関数でデータを処理したり、加算のような簡単な計算を行うためのものでした。",
    "output": "So those are some very simple functions, in R that can be used to kind of process data or make do simple calculations, like adding two numbers."
  },
  {
    "index": "F23271",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に説明する関数は行列やデータフレームを使って、各列の平均を計算するものです。",
    "output": "The next function I want to talk about is, is just going to take a matrix or a dataframe and calculate the mean of each column."
  },
  {
    "index": "F23272",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "先ほどまでよりは少し複雑になっています。ここでは、引数を使って各列をループして、各列の平均を計算する必要があります。",
    "output": "Right, so this is slightly more complicated you, you have to take your argument and then you have to loop through each column to calculate the mean of each one, right."
  },
  {
    "index": "F23273",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これには、for-loopを使う必要が出てきます。ここで説明します。",
    "output": "So this is going to involve using a for-loop and, and so we'll talk about it here."
  },
  {
    "index": "F23274",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数を名は体を表すようなcolumnmeanとしましょう。function構文を使って引数を必要とします。",
    "output": "So let's call this function column mean, because that's what it does, and I'll use the function directive here, now it's going to take an argument."
  },
  {
    "index": "F23275",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この引数は、xと名付けようかと思いましたが必ずしもこの名前でなくても構いません。",
    "output": "I like to call my arguments x, you don't have to so why don't we just call it y for fun."
  },
  {
    "index": "F23276",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、yはデータフレームか行列でこのデータフレームか行列のそれぞれ各列を見て各列の平均を計算します。",
    "output": "And so y is going to be a data frame or a matrix, and we're going to go through the columns of this data frame or matrix and calculate the mean of each column."
  },
  {
    "index": "F23277",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでまず最初にする必要があるのは入ってくる引数に列が何列あるかを知ることです。",
    "output": "So the first thing I need to figure out is how many columns does this thing have, and that can be easily done."
  },
  {
    "index": "F23278",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず列数という意味でncという変数にncol関数を使って判定し代入します。",
    "output": "I'll call it n c for number of columns and we can use the n call function for that."
  },
  {
    "index": "F23279",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで、列数が計算できるので次にベクトルを初期化して各列の平均を格納するようにします。",
    "output": "That will calculate the number of columns, and, and then I need to initialize a vector that's going to that's going to store the means for each column."
  },
  {
    "index": "F23280",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このベクトルの長さは列数と同じになります。",
    "output": "The length of this vector has to equal the number of columns, right."
  },
  {
    "index": "F23281",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトルはmeansと呼び数値ベクトルにしてこの長さは、列数(nc)と同じになります。",
    "output": "So I'll just call it means, and it'll be a numeric vector equal to the length of the number, equal to the number of columns."
  },
  {
    "index": "F23282",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "現時点では、ただの空のベクトルです。",
    "output": "So this is just an empty vector."
  },
  {
    "index": "F23283",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここではこのベクトルにはゼロ値で初期化されていますが列の処理を進めながら値を埋めていきます。",
    "output": "It doesn't, it's going to have, it's going to be initialized to, to be all zeros. But we're going to fill it as we go through the column."
  },
  {
    "index": "F23284",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "forloopで各列に対して処理を実行していきます。",
    "output": "So now we want to for-loop through the columns."
  },
  {
    "index": "F23285",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "iin、そして1からncまでと書きます。",
    "output": "And I'll say i is in and then I'll say one through nc."
  },
  {
    "index": "F23286",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、forloopをしていくなかで値をmeansベクトルに代入していきます。",
    "output": "So this creates a, an integer vector starts a one and ends at the number of columns, and then I'm going to for-loop through and for each I, I'm just going to assign to my means vector."
  },
  {
    "index": "F23287",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これだけで完了ですが次に何の値も返していないのでこの関数は、特に何かの役に立つものではありません。",
    "output": "And that's it, and then so for I, I haven't returned anything yet, so right now this function doesn't do anything particularly useful."
  },
  {
    "index": "F23288",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なので、ここでは平均のベクトルを返すようにしたいのでこれを返します。",
    "output": "But what I want to do is return the vector of means and so I'm just going to return that."
  },
  {
    "index": "F23289",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここがこの関数での最終文なのでこれが返されます。",
    "output": "And that's, since that's the last expression in the function that what will get returned."
  },
  {
    "index": "F23290",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、これをRに入れて使えるようにして任意のデータセットを考えます。",
    "output": "So I can source this into R, and I'll just find some arbitrary dataset."
  },
  {
    "index": "F23291",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これに対して、columnmeanを使用して、どうなるか見てみます。",
    "output": "I'll just take the column means of that, and see how it works."
  },
  {
    "index": "F23292",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、このデータセットには6つの列があるから6つの平均が返ってきました。",
    "output": "Okay, so I, there are six, I think there are six columns in this dataset, so it gave me six means."
  },
  {
    "index": "F23293",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、最初の2列がNAになっているのが分かります。",
    "output": "Now you can see that the first two columns have NAs."
  },
  {
    "index": "F23294",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なぜこうなるかを説明するとベクトルにNAがあると平均を計算することができません。",
    "output": "And that's because it, if the, if the vector has an na in it, then you can't calculate the mean."
  },
  {
    "index": "F23295",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この挙動があるのでデフォルトで実施しておくべきなのは欠損値を、まずは全て排除してその後で観測値のみから平均を計算することです。",
    "output": "And so the one thing you might want to do, is, by default, is throw out all of the missing values and just calculate the mean amongst the observed values."
  },
  {
    "index": "F23296",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように、欠損値を削除するかどうかを指定できる関数を頻繁に見かけることでしょう。",
    "output": "And so, you'll notice that a lot of functions have a feature where it's like, where they, you can, you can choose whether you want to remove the nas or not."
  },
  {
    "index": "F23297",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、ここに引数を追加してremoveNAと呼びます。",
    "output": "But let me just add up an argument here, it's called na."
  },
  {
    "index": "F23298",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "デフォルトはTRUEとしておきます。",
    "output": "And it will default to true, right."
  },
  {
    "index": "F23299",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この引数をmean関数に引き渡してmean関数にあるna.rm引数へこのremoveNAの値を渡すようにします。",
    "output": "And then I'll pass this argument to the mean function."
  },
  {
    "index": "F23300",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで、columnmeanを計算するときにデフォルトでNAを消去するようにできます。",
    "output": "So the mean has an na.rm argument, and I'll pass at this value."
  },
  {
    "index": "F23301",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rにソースを貼りつけてコンソールでcolumnmeanを実行すると列に対する平均が返ってきました。",
    "output": "And so now I can default or remove the na's when I, calculate my column mean."
  },
  {
    "index": "F23302",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "デフォルトで欠損値は消去されたからです。引数にFALSEを指定することもできてそうするとNAがまた表示されます。",
    "output": "So sources send to R and with the run in the console column mean, and so now the default will be now I get my means for those columns because the default was to remove the na's."
  },
  {
    "index": "F23303",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし必要なときには、古い挙動に再び戻すこともできます。",
    "output": "I could say false here, and then my na's will come back."
  },
  {
    "index": "F23304",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最後にしておきたいのは関数を書いたときにはファイルに保存しておくことがもちろん最も重要です。",
    "output": "So I can always choose to kind of go back to the old behavior if I wanted to."
  },
  {
    "index": "F23305",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "現在は、ファイルは未保存の状態です。保存しないでいるとRがクラッシュしたりすると作業した内容が失われていしまいます。",
    "output": "So the last thing you want to do any time you're writing a function the most important thing of course is to save your file."
  },
  {
    "index": "F23306",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これを避けるためにメニューからSaveasを選んでfunctionsだったり、好きな名前で保存します。",
    "output": "If you don't save it and R Studio crashes or something happens you'll lose all your work and so you want to go to the save I meant save as menu, and just save your file as, you know, functions or whatever you want to call it."
  },
  {
    "index": "F23307",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": ".Rの拡張子を付けます。これでコードがファイルに保存されました。",
    "output": "And give it the .r extension, and now you're code is saved to a file."
  },
  {
    "index": "F23308",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、このビデオでまずは始められるようになりRで簡単な関数は書けるようになりました。",
    "output": "So that should get you started, just writing some simple functions in R, for your programming assignment you'll have to write a few functions that kind of go through and look at data."
  },
  {
    "index": "F23309",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このビデオでの目的はまずは関数を書けるようになることでfunction構文をどう使うのかや引数をどう使うのかを理解してさらに少し複雑な考えのものでも課題に取り組むうちに色々と試せるようにすることです。",
    "output": "But I just wanted to get you started writing your first functions so that you know kind of how the directive, the function directive works, how the arguments work, and you can play around a little bit with with more complicated ideas as you work through the assignments."
  },
  {
    "index": "F23310",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数はR言語の最も強力な側面です。",
    "output": "Functions represent some of the most powerful aspects of the R language."
  },
  {
    "index": "F23311",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数が分かればRのユーザーからRのプログラマーらしくなってきたと言えます。",
    "output": "And they really represent the transition of the user of R into the kind of programmer of R."
  },
  {
    "index": "F23312",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "というのは、コマンドラインで入力してデータを探索してコードも書けるかもしれません。",
    "output": "And the basic idea is that you can type the command line and kind of explore some data, and run some code."
  },
  {
    "index": "F23313",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、いずれはもう少し複雑なことをするのが必要な状況になるでしょう。",
    "output": "But eventually you'll probably get to the point where you need to do something a little bit more complex."
  },
  {
    "index": "F23314",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1行だったり2行のコードでできることよりも複雑なものです。",
    "output": "A little bit more than, than can be expressed in a single line or maybe in two lines."
  },
  {
    "index": "F23315",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、そんなコードを何度も書く必要があるとその機能を関数としてコードにしたいと思うようになります。",
    "output": "And if you have to do this over and over again, then you're usually going to want to encode this kind of functionality in a function."
  },
  {
    "index": "F23316",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数について、3つに分けて説明したいと思います。",
    "output": "I'm going to talk about functions in three parts here."
  },
  {
    "index": "F23317",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目はRでの関数の書き方の基本を説明します。",
    "output": "First I'll talk just about the basics of how to write functions and how they are written, in R."
  },
  {
    "index": "F23318",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、R言語でのレキシカル・スコープとスコープの規則について説明します。",
    "output": "Then I'm going to talk a little bit about lexical scoping and the scoping rules, in, for the R language."
  },
  {
    "index": "F23319",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして最後に簡単な例を出して終わります。",
    "output": "And then last, I'm going to end with a little example."
  },
  {
    "index": "F23320",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでの関数はfunctionディレクティブを使って作り他のものと同じようにRのオブジェクトとして保持されます。",
    "output": "So, functions in R are created using the function directive and functions are stored as R objects just like anything else."
  },
  {
    "index": "F23321",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、オブジェクトには整数ベクトルやリストやデータフレームがあったり関数もあります。",
    "output": "So you might have a vector of integers a list of different things, a data frame, and then you have a function."
  },
  {
    "index": "F23322",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rオブジェクトの意味ではR関数はクラス値がfunctionになっているRオブジェクトです。",
    "output": "So, in particular, R objects, R functions are R objects that are of the class function, okay?"
  },
  {
    "index": "F23323",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この画面の命令で行っているのはここではfと呼ぶオブジェクトに代入を行って次に、引数を取るfunctionディレクティブがあり波かっこの中にはRのコードがありこの関数で行うことが書いてあります。",
    "output": "So, the basic instruction here is that you assign to some object, here I call it F, the, the function directive, which will take some arguments, and then inside the curly braces there is R, there is R code, which does something that the function does."
  },
  {
    "index": "F23324",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rの素晴らしいところは関数が第一級オブジェクトとして扱われることです。",
    "output": "So one nice thing about R is that functions are con, considered what are called first class objects."
  },
  {
    "index": "F23325",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これによって、関数が他のRオブジェクトと同じように扱えるようになります。",
    "output": "So you can treat a function just like you can treat pretty much any other R object."
  },
  {
    "index": "F23326",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "とても重要なのはこうできることで関数を他の関数に引き渡すことができます。",
    "output": "So importantly, this means that you can pass functions as arguments to other functions. This is actually ver, a very useful feature in statistics."
  },
  {
    "index": "F23327",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、関数の中で別の関数を定義することができます。",
    "output": "And also functions can be nested."
  },
  {
    "index": "F23328",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このことで何ができるようになるかはレキシカル・スコープで説明します。",
    "output": "So you can define a function inside of another function, and we'll see what the implications of this are we talk about lexical scoping."
  },
  {
    "index": "F23329",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして関数の戻り値は関数内で最後に評価されるRの式になります。",
    "output": "So the return value of a function is simply the very last R expression in the function value to be evaluated."
  },
  {
    "index": "F23330",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数から戻り値を返すための特別な式はありません。",
    "output": "so, there's no special expression for returning something for a function."
  },
  {
    "index": "F23331",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、returnという関数があります。",
    "output": "Although, there is a function called Return."
  },
  {
    "index": "F23332",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数には引数と呼ばれるものを指定することができます。",
    "output": "So functions have what are called named arguments."
  },
  {
    "index": "F23333",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "名前付き引数はデフォルト値を指定することもできます。",
    "output": "And the named arguments can potentially have default values."
  },
  {
    "index": "F23334",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの特徴は関数を設計するときに役立ちます。関数は他の人が使うことになるかもしれません。",
    "output": "So, a lot of these features are useful for when you're designing functions that, that may be used by other people."
  },
  {
    "index": "F23335",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "たとえば、関数に様々な挙動をさせられるように色々な引数がある関数があるかもしれません。",
    "output": "For example, you may have a function that had a lot of different arguments so you can tweak a lot of different things."
  },
  {
    "index": "F23336",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、多くの場合には、この引数全てを指定する必要はありません。",
    "output": "But most of the time, you don't have to change all those different arguments."
  },
  {
    "index": "F23337",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "変えたいのは、1つか2つの引数だけかもしれません。",
    "output": "You may only care about one or two."
  },
  {
    "index": "F23338",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、引数にデフォルト値があると便利なものもあります。",
    "output": "So it's useful for some of the arguments to have default values."
  },
  {
    "index": "F23339",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ前のスライドに戻ると仮引数がここにありこの関数の中で定義されています。",
    "output": "So first of all, there's the formal arguments, which are the arguments that are included in the function definition."
  },
  {
    "index": "F23340",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "formals関数は関数を引数にとりその関数の仮引数をリストで返します。",
    "output": "The formal's function actually will, takes a function as an input and returns a list of all the formal arguments of a function."
  },
  {
    "index": "F23341",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rの全ての関数が仮引数を使うわけではありません。",
    "output": "So not every function call in R makes use of all the formal arguments."
  },
  {
    "index": "F23342",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "たとえば、関数に10個の引数があったとしてこの10個の引数全てに値を指定する必要はないかもしれません。",
    "output": "So for example, if a, if a function has ten different arguments you may not, you may not have to specify a value for all ten of those arguments."
  },
  {
    "index": "F23343",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の引数は指定されなかったりユーザーが指定しない時用のデフォルト値があるかもしれません。",
    "output": "So function arguments can be missing or they may have default values that are used when they are not specified by the users."
  },
  {
    "index": "F23344",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このためRの関数の引数は位置や名前で指定できます。",
    "output": "So R function arguments can be matched positionally or by name."
  },
  {
    "index": "F23345",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このことは関数を書くときにも関数を呼ぶときにも鍵となります。",
    "output": "So when, this is very, this is key when you're writing a function and also when you're calling it."
  },
  {
    "index": "F23346",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、値セットの標準偏差を計算する関数sdを見てください。",
    "output": "So for example, take a look at the function sd, which calculates the standard deviation of, of, of a set of numbers."
  },
  {
    "index": "F23347",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "sdは引数の名前xを引数にとりxはベクトルを取ります。",
    "output": "So sd takes a input x, which is the name of the argument and which is going to be a vector of data."
  },
  {
    "index": "F23348",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "na.rmという2つ目の引数がありこの引数によってデータ中の欠損値を削除すべきかを指定します。",
    "output": "And there's a second argument called na.rm and this controls whether the missing values in the data should be removed or not."
  },
  {
    "index": "F23349",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "na.rmのデフォルト値はFALSEとなっています。",
    "output": "And the default value is for na.rm to be equal to false."
  },
  {
    "index": "F23350",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、標準偏差を計算する値セットに欠損値がある場合には指定しなくても欠損値が除外されます。",
    "output": "So by default if you have missing data in your, in the, in the set of numbers for which you want to calculate the standard deviation the missing values will not be included."
  },
  {
    "index": "F23351",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここではデータをシミュレートして100個の正規分布の乱数を生成していて欠損値はありません。",
    "output": "So, here I'm simulating some data and I'm just simulating a hundred normal random variables, and there's no missing data here."
  },
  {
    "index": "F23352",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このベクトルのsd値を計算すると標準偏差の値が返ってきます。",
    "output": "So, if I just calculate sd on the vector it'll give me an estimate of the standard deviation."
  },
  {
    "index": "F23353",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "x=mydataと指定しても同じことです。",
    "output": "If I say X equals my data that's the same thing."
  },
  {
    "index": "F23354",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは引数に名前を付けましたがそれだけで、データは同じなので標準偏差を計算します。",
    "output": "So here I've named the argument but I haven't but otherwise the data are the same so it'll calculate the standard deviation."
  },
  {
    "index": "F23355",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最初の例では引数名を指定してません。",
    "output": "In the first example I didn't name the argument."
  },
  {
    "index": "F23356",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすると、指定なしで関数の1つ目の引数にmydataを渡します。",
    "output": "So it defaulted to passing mydata to be the first argument of the function."
  },
  {
    "index": "F23357",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この次の例では、引数を両方とも名前で指定します。",
    "output": "So in the next example here, I'm going to name both arguments."
  },
  {
    "index": "F23358",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "x=mydataとしna.rm=FALSEとします。",
    "output": "I'm going to say X equals mydata, and na.rm equals false."
  },
  {
    "index": "F23359",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この命令でもこれまでと同じ計算をします。",
    "output": "That calculates the same thing as before."
  },
  {
    "index": "F23360",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "名前付の引数にすると指定された位置に書く必要がありません。",
    "output": "Now when I name the arguments, I don't have to put them in any special order."
  },
  {
    "index": "F23361",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、この引数の位置を入れ替えることもできます。",
    "output": "So for example, I could reverse the order of the argument here."
  },
  {
    "index": "F23362",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "na.rm=FALSEを最初にx=mydataを次に書いても全く同じ結果が返ってきます。名前付で引数を指定したからです。",
    "output": "Say na.rm is equals false first, and then say x equals mydata second, and that will produce exactly the same results because I've named the arguments."
  },
  {
    "index": "F23363",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、1つだけ名前付引数にしてもう一つは名前を付けないとどうなるでしょう。",
    "output": "Now, what happens if I name one argument and don't name the other?"
  },
  {
    "index": "F23364",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "名前付引数は指定値が渡されてその指定した引数は引数順から除外されてるとみなせます。それ以外の渡された引数は渡された順に、関数の引数順で渡されます。",
    "output": "Well what happens is that the named argument is set, and you can figure it as being removed from the argument list, and then any other, any other things that are past will be matched to the function arguments in the order in which they, they come."
  },
  {
    "index": "F23365",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "sdの場合にはna.rm引数を除くと1つしか受け取る引数が残らないのでmydataは、この引数に渡されます。",
    "output": "So for example, SD after you remove the na.rm argument only has one more argument left and so mydata would be assigned to that argument."
  },
  {
    "index": "F23366",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように、ここの式は全て同じ値を返します。",
    "output": "So all these expressions return the same exact value."
  },
  {
    "index": "F23367",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "大まかに言えば、全ての式が同じ結果になりますが全てを同じように勧めるわけではありません。",
    "output": "So although it's generally, all these expressions are equivalent, I don't say recommend all of them equally."
  },
  {
    "index": "F23368",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "名前付で指定できればより適切と言えるので引数順を変えても動作するという理由だけで順番を変えることを勧めるわけではありません。",
    "output": "So for example, I don't necessarily recommend reversing the order of the arguments just because you can even though if you name them, it's appropriate."
  },
  {
    "index": "F23369",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "順を変えてしまうことで混乱を引き起こすだけかもしれないためです。",
    "output": "so, just, just because that can lead to some confusion."
  },
  {
    "index": "F23370",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "位置での指定と名前での指定は同時に使うことができます。これは多くの引数がある関数を使う時にとても役立ちます。",
    "output": "So positional matching and matching by name can be mixed and this is quite useful often for functions that have very long argument lists."
  },
  {
    "index": "F23371",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このlm関数の例では線形モデルをデータに当てはめますがここにある引数群があります。",
    "output": "And so for example the lm function here which fits linear models to data has this argument list here."
  },
  {
    "index": "F23372",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最初の引数はformulaで2つ目はdataでsubset、weights、などと続いています。",
    "output": "So the first is the formula, the second is the data And then subset, the weights et cetera."
  },
  {
    "index": "F23373",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最初の5つの引数はデフォルト値がないのが分かります。",
    "output": "And you see that the first five arguments here don't have any default value."
  },
  {
    "index": "F23374",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ユーザーはこの引数を指定する必要があります。",
    "output": "So, the user has to specify them."
  },
  {
    "index": "F23375",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "その後の、method、model、xにはデフォルト値があり指定しない場合にはこの値をデフォルトに使います。",
    "output": "So the but then the method, the model, the X argument, they all have default values so if you don't specify them they will use those values by default."
  },
  {
    "index": "F23376",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次の2つの関数呼び出しは同じ結果になります。",
    "output": "And so the following two function calls are equivalent."
  },
  {
    "index": "F23377",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1例目では、dataを最初に指定してからformula、modelと指定してそれからsubsetを指定しています。",
    "output": "I could have specified the data first and then the formula and then the model."
  },
  {
    "index": "F23378",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2例目では、formulaを最初に指定してからdata、subset、model=FALSEというように指定しています。",
    "output": "And then, and then, and then the subset arguments or I could specify the formula first, the data second, the subset and then say model is equal to false."
  },
  {
    "index": "F23379",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1例目が問題ないのはdata引数を名前付きで指定したからです。",
    "output": "Now the reason why the first one is okay is because I, so I matched the data argument by name."
  },
  {
    "index": "F23380",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "data引数は引数順から除外されたと考えられます。y~xは名前指定されていません。",
    "output": "You can imagine that that's kind of taken out of the argument list now, then Y till the X doesn't, isn't specified by name."
  },
  {
    "index": "F23381",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、まだ引き渡されていない1つ目の引数に渡されます。",
    "output": "So it's given to the first argument that hasn't already been matched."
  },
  {
    "index": "F23382",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合はformulaが引数です。",
    "output": "And I, in which case that's the formula."
  },
  {
    "index": "F23383",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "model=FALSEは名前付で引き渡されているので引数順からは除外して考えれます。",
    "output": "Model equal to false, so that's been matched by name so I can kind of get rid of that from the argument list."
  },
  {
    "index": "F23384",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に1から100がまだ渡されていない引数に引き渡されます。",
    "output": "And then 1 through 100 has to be assigned to the argument that has not yet already been matched."
  },
  {
    "index": "F23385",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合には、formulaもdataも既に引き渡されているので次の引数はsubsetです。",
    "output": "So in this case formula was already matched, data was already matched."
  },
  {
    "index": "F23386",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1から100がsubset引数に引き渡されます。",
    "output": "So 1 to 100 get's assigned to the subset argument."
  },
  {
    "index": "F23387",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lmを呼び出すには少し混乱する方法でこの方法を使うのはお勧めしませんがこうすることで引数の指定に位置指定と名前指定が混ぜられることをお見せするのが目的でした。",
    "output": "So this is somewhat a confusing way to call lm, and I don't recommend that you do it this way. But, I, I wrote it this way just to demonstrate how positional matching, and matching by name can work together."
  },
  {
    "index": "F23388",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lmの通常の使い方は2例目の方法です。",
    "output": "A common usage for lm though is the second version here."
  },
  {
    "index": "F23389",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次の引数はmydataとして計算に使うデータのデータセットです。",
    "output": "And then the next one is mydata, which the data set which you're going to grab the data from."
  },
  {
    "index": "F23390",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次にsubset引数です。この最初の3つの引数はlmを呼ぶときには通常指定するものです。",
    "output": "The subset argument and then, so the first three arguments, you know, are commonly specified, every time you call lm."
  },
  {
    "index": "F23391",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それ以外の引数は指定するかしないか分かりません。",
    "output": "But then, the rest you may or may not specify and so you may, if you just want to specify one of the following arguments."
  },
  {
    "index": "F23392",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それ以外の引数を指定したい場合には名前付き引数で呼ぶ方が簡単です。",
    "output": "It's easier just to call it out by name."
  },
  {
    "index": "F23393",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "多くの場合には、コマンドラインで名前付き引数が役立ちます。",
    "output": "so, most of the time, the named arguments are useful in the command line."
  },
  {
    "index": "F23394",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、多くの引数がある関数で途中や終わりの方にある引数だけを指定して残りはデフォルト値を使いたい場合には引数が引数順の4個目か6個目か10個目かどこだったかが正確には覚えていられません。",
    "output": "When you have a long argument list and you want to use the defaults for everything except for one of the arguments, which may be in the middle or near the end of the list, and you can't usually, you know, you can't remember exactly which argument it is, whether it's the fourth, or the sixth, or the tenth argument on the argument list."
  },
  {
    "index": "F23395",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすれば、引数順のどこに引数があるのかを覚えておく必要はありません。",
    "output": "And so you just call it by name, and that way you don't have to remember the order of the arguments on the argument list."
  },
  {
    "index": "F23396",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この使い方はプロットするときに便利です。plot機能の多くに多くの引数があります。",
    "output": "Another example where this comes in handy is for plotting, because mo, many of the plot functions have very long argument lists."
  },
  {
    "index": "F23397",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらにもデフォルト値があるのである特定の引数のみを操作すれば良いかもしれません。",
    "output": "All of which have default values and you may only want to tweak one specific argument."
  },
  {
    "index": "F23398",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように、引数順のどこに引数があるのか覚えておく必要がないと便利です。関数の引数は、部分一致でも名前指定ができます。",
    "output": "And so it's useful not to have to remember, you know, what the order of that argument is on the arg, on the argument list."
  },
  {
    "index": "F23399",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "探索的に作業するときに非常に役立ちます。でも、プログラム時にはそうでもありません。",
    "output": "So function arguments can, can also be partially matched which is used, mostly useful primarily for interactive work, not so much for programming."
  },
  {
    "index": "F23400",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数を呼び出すときに引数の名前が長いと引数名の一部分だけを入力して一致させることができます。",
    "output": "But when you call a function, if the argument has a very long name you can match it partially so you can type part of the argument name and as long as there's a unique match there then it will, the R system will match the argument and assign the value to, to, to the correct one."
  },
  {
    "index": "F23401",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この一部分に合致する引数が1つしかない場合にはRシステムが引数を一致させて正しい引数に値を引き渡します。",
    "output": "So the, the, the order of the operations that R uses, first it'll check for an exact match."
  },
  {
    "index": "F23402",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、名前付き引数を使うとRはその引数の名前が完全一致する引数を調べます。",
    "output": "So if you name an argument it'll check, check to see if there's an argument that, that exactly matches that name."
  },
  {
    "index": "F23403",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "完全一致がなければ部分一致を探します。",
    "output": "If there's no exact match it'll look for a partial match."
  },
  {
    "index": "F23404",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで見つからなければ次に位置での一致を探します。",
    "output": "And then if that doesn't work, it'll look for a positional match."
  },
  {
    "index": "F23405",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに4つの引数a、b、c、dを使う関数があります。",
    "output": "A, B, C and D."
  },
  {
    "index": "F23406",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "aにはデフォルト値がなくb、c、dは全てデフォルト値があります。",
    "output": "B, C, and D, all have default values."
  },
  {
    "index": "F23407",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数を定義するときには引数の名前の指定とデフォルト値の有無の指定の両方を行う必要があります。",
    "output": "You want it if both specify the names of the arguments."
  },
  {
    "index": "F23408",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "NULL値は頻繁に引数に指定される値です。",
    "output": "So null is a common argument."
  },
  {
    "index": "F23409",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このNULL値は様々なことを表現し得ますが何もないということを意味しています。",
    "output": "Sorry, common value to assign to an argument. Which mean, which can mean a variety of things, but usually means that, you know, there's nothing there."
  },
  {
    "index": "F23410",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "R言語の主な特徴として遅延評価と呼ばれるものがあります。",
    "output": "So, one of the key features of the, our language is what's called Lazy Evaluation."
  },
  {
    "index": "F23411",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "遅延評価は数々のプログラム言語でよく見られるモデルです。",
    "output": "So Lazy Evaluation is a common model in a variety of programming languages."
  },
  {
    "index": "F23412",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "どのようなものかというと関数の引数の評価を、その引数が必要になった時に初めて行う方法です。",
    "output": "And the way that it works is all of the arguments to a function are only evaluated as they're needed."
  },
  {
    "index": "F23413",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、この関数を例にとるとaとbの2つの引数を使っています。",
    "output": "And so for example, if you take a look at this function over here."
  },
  {
    "index": "F23414",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数の中では1つのことしか行っていません。aを使ってaを二乗して値を返すだけです。",
    "output": "But the body of the argument only takes one thing, it takes a and then it squares it and then it returns it."
  },
  {
    "index": "F23415",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ちなみにここでもこれまで学んだように関数の中で最後に評価された命令の値が返ってきています。",
    "output": "And now recall that in a function, the return value whatever the last expression is evaluated."
  },
  {
    "index": "F23416",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "話しを戻すと、この関数には1つの命令しかありません。",
    "output": "So there's only one expression in this function."
  },
  {
    "index": "F23417",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そしてこれが最後の命令でその値が戻り値です。",
    "output": "And so it's the return value."
  },
  {
    "index": "F23418",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "f(2)を実行するとどうなるでしょうか?",
    "output": "So if I say f(2)."
  },
  {
    "index": "F23419",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでは、2の二乗は4なので4が返されます。",
    "output": "Well, in R what happens is you get 4 because 2 squared is 4."
  },
  {
    "index": "F23420",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数fを呼ぶのにbを指定しないと何が起こるか疑問に思うかもしれません。",
    "output": "Now you might be wondering what happens to B when I call (f)."
  },
  {
    "index": "F23421",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "bの値は指定していません。",
    "output": "I never specify what the value of b is."
  },
  {
    "index": "F23422",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さらにbにはデフォルト値がありません。",
    "output": "And furthermore, b doesn't have a default value."
  },
  {
    "index": "F23423",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "何が起こるかといえば何も起こりません。関数fはbを使っていないからです。",
    "output": "And so what happens, what, what happens is nothing happens because the function f doesn't actually use b."
  },
  {
    "index": "F23424",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、この引数は決して評価されません。",
    "output": "And so the argument is never evaluated."
  },
  {
    "index": "F23425",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "評価されないためエラーも起こりません。何も異常にはなりません。",
    "output": "And so, because it's never evaluated, there's really no error."
  },
  {
    "index": "F23426",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数fの定義のされ方は良くないと考えるかもしれません。",
    "output": "There's nothing that's going wrong here. Now now you might say there, of course, well, the, the function F is kind of poorly defined."
  },
  {
    "index": "F23427",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なぜ決して評価されない引数を定義するのか。",
    "output": "So why would you give and argument where that's never actually evaluated?"
  },
  {
    "index": "F23428",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こんな反対意見は理にかなっています。それでも今回の場合は関数は正常に動作します。",
    "output": "And that's a reasonable objection, but in this case, the only, the, the function will operate correctly because because it's Because the value of 2, is positionally matched to the arg, to the argument A."
  },
  {
    "index": "F23429",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "値2が引数の位置順で引数aとして引き渡されるからです。",
    "output": "Which is then squared. Here's another example of a function that's only slightly more complicated than the previous one."
  },
  {
    "index": "F23430",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして二乗されます。次の例ではこの関数は先ほどよりも少しだけ複雑になっています。",
    "output": "So this is another function that takes arguments a and b, but now what the function does is it prints out a and it prints out b."
  },
  {
    "index": "F23431",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは引数a、bを使う関数でこの関数は引数aとbを出力します。",
    "output": "And so, when I call f of 45, look what happens. I get, well I get an error that says in print b, argument b is missing."
  },
  {
    "index": "F23432",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "fに45を渡して呼ぶとどうなるかというとエラーが発生してprint(b)のbが無いと出ます。",
    "output": "So here, what happened is that it printed out 45 because 45 was matched to the argument a, and so there was no error."
  },
  {
    "index": "F23433",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、引数aに45が渡されて出力されたためエラーがありません。",
    "output": "Up until the first line of the function, there was no error occurring."
  },
  {
    "index": "F23434",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の1行目ではエラーがありませんでしたが2行目の実行に移ると引数bを評価する必要が出てきてbにはデフォルト値もなく値も代入されていないためエラーを発生させる必要がありました。",
    "output": "But then when it got to the second line, It had to evaluate the val, the argument b. And because b had no value assigned to it and no default value, then an error had to occur."
  },
  {
    "index": "F23435",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、ここでは45が出力された後で初めてエラーが起こっているのが分かります。",
    "output": "So here, but you notice that the error only occurs after the 45 was printed out."
  },
  {
    "index": "F23436",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "遅延評価が適用されて引数の評価が必要になって初めて評価を行うようになっていてエラーを発生させる箇所までの有効な部分は実行されます。",
    "output": "And so the lazy evaluation applies, but because the argument is only evaluate when it's needed."
  },
  {
    "index": "F23437",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、R関数には特別な引数の形があり...の引数があります。",
    "output": "So there's a special argument, in."
  },
  {
    "index": "F23438",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これを使うことで任意の数の引数を他の関数に渡すことができます。",
    "output": "And it's used to indicate a variable number of arguments that can sometimes be passed on to other functions."
  },
  {
    "index": "F23439",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この3つのドットを使う代表的なケースは他の関数を拡張して、元の関数の引数を網羅的に再度書かないようにするためです。",
    "output": "So the three dots are often used when extending another function and you don't want to copy the entire argument list of the original function."
  },
  {
    "index": "F23440",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えばplot関数を拡張したいとしてちょっとだけいじって変更したりデフォルト値を変更したいとします。",
    "output": "So for example you might want to extend the plot function and just to have a little bit of a tweak or to change some of the defaults, for example."
  },
  {
    "index": "F23441",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例として、myplotという関数を作るとします。",
    "output": "And so for example you might create a function that's called my plot."
  },
  {
    "index": "F23442",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "myplotは元々のplot関数の引数にあるx、yなどの引数はそのまま引き渡すとします。",
    "output": "And the my plot will replicate some of the arguments of the original plot function like x and y."
  },
  {
    "index": "F23443",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、type引数のデフォルト値を変えて丸点でのプロットではなく折れ線グラフでのプロットを行うようにするためにtype=\"l\"を指定しています。",
    "output": "But it's going to change the default type arguments so that instead of creating circles for points."
  },
  {
    "index": "F23444",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろんplot関数にはとても多くの引数が他にもありますがこれらには触れずに同じにしておくつもりです。",
    "output": "So, but of course the default plot function has many, many other arguments."
  },
  {
    "index": "F23445",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、こうするとplot関数の他の引数を吸収する形になりどうなるかというと...の部分をそのままの形で元のplot関数に引き渡すことができます。",
    "output": "And you want to leave them all ultimately the same. And so, what you, what you can do is pass dot dot dot."
  },
  {
    "index": "F23446",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "元のplot関数用の引数はそのまま渡され拡張して作成した関数側ではこれらの引数を再度入力し再構築する必要がありません。他にも...引数にはこんな使い方もあります。",
    "output": "And then though, that can used to, be used to kind of absorb all the other arguments in the plot function and then what happens is I'll take the dot dot dot and then pass it down to the original plot function, and so all those original arguments can be preserved then I don't have to retype or reconstruct all of those arguments in my extended function."
  },
  {
    "index": "F23447",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この使い方は総称的関数(genericfunctions)と呼ばれ余った部分の引数をメソッドに渡すことができます。",
    "output": "And sorry, there's another use of the dot dot dot argument, and it's for what are called generic functions so that extra arguments can be passed to the methods."
  },
  {
    "index": "F23448",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これについてはオブジェクト指向プログラムのところで別途詳しく説明します。",
    "output": "So we'll talk a lot about more of this later when we talk about object oriented programming."
  },
  {
    "index": "F23449",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "簡単に言うとRでは総称的関数と呼ばれる特殊な関数がありこれは何も操作しませんが引き渡すデータの種類に応じて異なるメソッドを呼びデータを引き渡すことができます。",
    "output": "But the basic idea is that in R there, there can be special functions called generic functions which don't do anything, but what they do is they dispatch methods to put, according for different types of data."
  },
  {
    "index": "F23450",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "...引数はこのような仕組で非常に頻繁に使われます。",
    "output": "And so the dot dot dot is used very heavily in this type of setup."
  },
  {
    "index": "F23451",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この代表的な例はpaste関数での使われ方です。",
    "output": "lastly, so the dot dot dot argument is, is necessary when the number of arguments that are passive functions cannot be known in advance."
  },
  {
    "index": "F23452",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "paste関数では指定された文字列を1つに繋いで文字列か文字列ベクトルを作ります。",
    "output": "So one good example of this usage is in the paste function."
  },
  {
    "index": "F23453",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、引数の数は任意に変わります。このため、paste関数には何個の引数が渡されるのかを事前に知ることができません。",
    "output": "So the paste function, what is does it paste, it concatenates a set of strings together to create one string or a vector of strings and it can take a variable number of arguments."
  },
  {
    "index": "F23454",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "だから、paste関数の最初の引数は実は...になっています。",
    "output": "So, there is no way for the function to note advance how many arguments it's going to have to paste together and so the first argument for paste is actually dot dot dot."
  },
  {
    "index": "F23455",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "したがって、複数の文字列ベクトルのRオブジェクトを引き渡してpasteで繋ぐことができます。また、区切り文字も使えてデフォルトはスペースになっています。",
    "output": "And therefore you can take a number of different R objects that are character vectors and then, and then paste something together using a separator and in the, which the case the default is the space."
  },
  {
    "index": "F23456",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "catはpasteと同じように動作して複数の文字列を繋いで1つにして結合された文字列をファイルやコンソールに出力します。",
    "output": "And what cat does similar to paste, it puts together, it pastes together a number of strings then it prints out the, the, the concatenated string either to a file or to a console."
  },
  {
    "index": "F23457",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "catに引数が多くあるのが分かるかと思いますが最初の引数は結合するオブジェクトが渡されます。",
    "output": "So you can see that there are many other arguments to cat but the first argument is going to be the set of our objects that, that are going to be concatenated."
  },
  {
    "index": "F23458",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "...のちょっとした落とし穴は...引数の後の引数には名前を明示的につける必要があることです。",
    "output": "So, one catch with the dot dot dot argument is that any arguments that appear after three dots on the argument list must be named explicitly."
  },
  {
    "index": "F23459",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さらに、引数の部分一致は行えません。",
    "output": "And furthermore, cannot be partially matched."
  },
  {
    "index": "F23460",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、引数の順番での指定も部分一致での指定も...引数の後の引数では使えません。",
    "output": "So you cannot, you can't use positional matching or partial matching for arguments that come after the three dots."
  },
  {
    "index": "F23461",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なんとなく事情が分かりますがR自身では...引数部分に渡そうとしているのか別の引数に渡そうとしているのか分からないためです。",
    "output": "So if I say in the first example here, where I try to paste together A and B, so A and B are going to the dot dot dot argument and then I say sep equals colon and then which means that I want to paste something together by separating them into with a colon."
  },
  {
    "index": "F23462",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えばここの最初の例ではaとbを繋ごうとしていてa、bが...引数部分でsep=\":\"を渡しているのでコロンでpasteしてほしいのが分かります。",
    "output": "However, if I try to do partial matching with set, what happens is that the partial matching gets ignored, and so, when, when I say paste a b and then s e equal to colon, well, the s e is, in another circumstance might be partially matched."
  },
  {
    "index": "F23463",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2例目で、引数seを使って部分一致を試みてますが部分一致は無視される挙動になります。",
    "output": "But in the pace function, it can't use partial batching."
  },
  {
    "index": "F23464",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "paste(\"a\",\"b\",se=\":\")と指定するとseはこの状況でなければ部分一致したかもしれません。",
    "output": "So it gets, it just ignores that and just assumes that colon is just another string to be pieced together."
  },
  {
    "index": "F23465",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかしpaste関数では部分一致が使えないため部分一致としては無視されてコロンは繋ぎたい文字列の1つと判断されました。",
    "output": "And so then you get the, the string ab:. So just be careful when you're using functions that have dot, dot, dot as an argument."
  },
  {
    "index": "F23466",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "...が引数にある関数を使うときには気を付けてください。",
    "output": "That any arguments that appear after the three dots have to be named explicitly and in full."
  },
  {
    "index": "F23467",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数がコード中にシンボルを見た時にRの環境で実行されていたとしてそのシンボルにはどう値が代入されているのかという疑問があります。",
    "output": "One topic that's important to discuss in R is a question of, you know, when a function sees a symbol in its body and it's executing inside the R environment, how does it assign a value to that symbol?"
  },
  {
    "index": "F23468",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、ここに定義した関数のlmを見てください。",
    "output": "So for example, take a look at this, this function here that I've defined called lm."
  },
  {
    "index": "F23469",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このlmにはxという引数がありこの引数に引数自体を掛けるというものです。",
    "output": "So lm here is a function which takes its argument x, and it multiplies it times itself."
  },
  {
    "index": "F23470",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、入力された値を二乗するものと考えてもよいでしょう。",
    "output": "So you can think of it as squaring the, squaring the input."
  },
  {
    "index": "F23471",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにも同名のlmという関数を作りましたので関数の中だったり、Rのどこかでこの関数を呼び出すとシンボルのlmに、どの値を代入するように決定するのでしょうか。",
    "output": "Now, there's already a function in R called lm, so I've created an, a function here also called lm, so when I call lm somewhere else in R, maybe in another function or something like that how does R know what value to assign to the symbol lm?"
  },
  {
    "index": "F23472",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rがシンボルのlmを見た時にどうやって今定義した関数を呼ぶのかstatsパッケージのlm関数を呼ぶのかを決定するのでしょうか。後者は、線形モデルを当てはめるのに使われます。",
    "output": "So it sees the symbol lm, and how does it know whether to call the function that I just defined here or the lm function that's in the stats package that's used to model, you know, to fit linear models."
  },
  {
    "index": "F23473",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでは、値はシンボルに割りつける必要があります。",
    "output": "And so the, the idea that R needs to bind a value to a symbol."
  },
  {
    "index": "F23474",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "先ほどの例ではシンボルはlmでこれに対して値を割り付ける必要があります。",
    "output": "So in this case the, in the previous slide, the symbol was lm, and it needs to bind a value to it."
  },
  {
    "index": "F23475",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この際の値は何らかの関数になります。",
    "output": "And the value is going to be a function of some sort."
  },
  {
    "index": "F23476",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "その先は私の作った関数かstatsパッケージのlm関数のどちらかになるはずです。",
    "output": "It's either going to be my function or it's going to be the function in the stats package."
  },
  {
    "index": "F23477",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rが値をシンボルに割り付けようとするときには一連の環境を順次探して適切な値を探し出します。",
    "output": "And so when r tries to bind a value to a symbol what it does is, it searches through a series of environments to find the appropriate value."
  },
  {
    "index": "F23478",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "環境について説明すると環境というのはオブジェクトと値、そしてシンボルと値がリスト化されたセットと考えてください。",
    "output": "So environments are kind of, you can think of them as lists of objects and values or symbols and values."
  },
  {
    "index": "F23479",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "コマンドラインで操作していてRオブジェクトの値を読み込む必要がるときには次のような処理が起きます。",
    "output": "And so, when you're working on the command line, and you need to retrieve a value of an R object basically, what happens is, the first thing that happens is, you search the global environment for a symbol name matching the one requested."
  },
  {
    "index": "F23480",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず、グローバル環境の中から読み取りたくて入力したシンボル名に合致するシンボルを探します。",
    "output": "And so for the global environment, it's just your workspace, and it consists of all the things that you've defined or loaded into R."
  },
  {
    "index": "F23481",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここの環境の中に入力し指定したシンボル名と合致するものがあればこの合致したシンボルを対象にしてこのシンボルに割り付けられた値を読み取ります。",
    "output": "And so if there's a symbol there that matches the name of the one that you're requesting then it will take that symbol and, and then retrieve the value that's associated with that symbol."
  },
  {
    "index": "F23482",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "今回の場合は、lmをグローバル環境で定義したのでコマンドラインからlmを呼び出すとこの環境に存在しているのでこのオブジェクトをまずは見つけ出します。",
    "output": "And so, because that exists, if I'm working the command line, when I call lm, it's going to find that object first."
  },
  {
    "index": "F23483",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、グローバル環境に合致するものがない場合にはRは、検索対象の環境リストのなかの各パッケージ内の名前空間の検索を続けます。",
    "output": "So if there, if there's no match in the global environment, then what happens is, the, R will search the namespaces of each of the packages on the search list."
  },
  {
    "index": "F23484",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この検索対象リストには現在Rに読み込まれている全てのRパッケージが含まれています。",
    "output": "So the search list consists of all the R packages that are currently loaded into R."
  },
  {
    "index": "F23485",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この検索対象リストには順序が付いているのが分かります。",
    "output": "And so you'll see that there, there's an order to the search list."
  },
  {
    "index": "F23486",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、リストの順序1の要素グローバル環境から検索を始めます。",
    "output": "So, and it goes starts at the first element, which is the global environment."
  },
  {
    "index": "F23487",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "リストの2番目に来ているのはstatsパッケージで、続いてgraphics、grDevicesとなっています。",
    "output": "Now, you can see, second on the search list is the stats package, the graphics package, the GR devices package."
  },
  {
    "index": "F23488",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "続けて最後まで行くと、最後はbaseパッケージです。",
    "output": "All the way down at the very is the base package, okay?"
  },
  {
    "index": "F23489",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このパッケージのリストのどこかにあるlmという関数をRは探しにいきます。",
    "output": "And so, somewhere in this list of packages R is going to look for a function called lm."
  },
  {
    "index": "F23490",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もしlmがグローバル環境にない場合には結果てきには、statsパッケージ内に見つかることになります。",
    "output": "And, of course, if it's not in the global environment, then it will eventually find it in the stats package which is the function that's used to fit linear models."
  },
  {
    "index": "F23491",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さきほどお伝えしたようにグローバル環境というのはワークスペースと同等のもので常に検索対象リストの最初の要素になります。",
    "output": "So, as I said before, the global environment is always, is equivalent to the user's workspace, and it's always the first element on the search list."
  },
  {
    "index": "F23492",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さらに、baseパッケージは常に検索対象リストの最後の要素となります。",
    "output": "And furthermore, the base package is always the last element on the search list."
  },
  {
    "index": "F23493",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "パッケージのリスト順にこの検索処理が行われるため検索対象リスト内でのパッケージの順序が重要になるのは、明らかです。",
    "output": "So, clearly because of the way that the search process works in terms of going down the list of packages, the order of the packages in the search list matters."
  },
  {
    "index": "F23494",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "大切なのは、ユーザーはRを開始する時にどのパッケージを読み込むかを指定することができます。",
    "output": "And so, and furthermore, users can configure which packages get loaded when you start up."
  },
  {
    "index": "F23495",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、さらに言えばユーザーは、任意のタイミングでパッケージを読み込むことができます。",
    "output": "And for, and, and users can also load packages whenever they want."
  },
  {
    "index": "F23496",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの理由から、特定のパッケージが読み込まれていたり、特定の順序で読み込まれたりしていることを前提とすることができません。",
    "output": "So you cannot assume that there's going to be a set list of packages available or that the packages will be in any sort of order."
  },
  {
    "index": "F23497",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ユーザーが各セッションで実施したいと考えていることによってパッケージは、いつもどんな順番にでもなりえます。",
    "output": "So they can be in different orders at any time to give depending on the user has decided to do in a given session."
  },
  {
    "index": "F23498",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数ライブラリ付きのパッケージをユーザーが読み込むとパッケージに存在する名前空間が取り込まれます。名前空間というのは全ての名前、シンボルそしてその値を保持する環境です。",
    "output": "And so, when a user loads a package with a library function, what happens is, the namespace of that package which is the environment that has all the name, all the symbols, and all those, the values for the symbols."
  },
  {
    "index": "F23499",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "検索リストの2つ目の位置に読み込まれます。",
    "output": "The namespace of that package gets put in the second position of the search list."
  },
  {
    "index": "F23500",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "グローバル環境の次に位置することになります。",
    "output": "So right behind the global environment."
  },
  {
    "index": "F23501",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "既にあった他のものは全て1階層下に押しのけられます。",
    "output": "And then everything else just kind of get pushed down one level."
  },
  {
    "index": "F23502",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "検索では、もともとの検索リストにあった全てのパッケージに加えて追加されたパッケージも調べていくことになります。",
    "output": "So so, and then the search will kind of go down, will include that new package, including, in addition to all the other packages that were originally on the search list."
  },
  {
    "index": "F23503",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rで注意が必要なのは関数と非関数で、異なる名前空間を持つことができることです。cという名のオブジェクトと同名の関数が存在することが可能です。",
    "output": "One thing to note is that R has separate namespaces for functions and non-functions, so it is possible to have an object named c somewhere and the function name c."
  },
  {
    "index": "F23504",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、グローバル環境にはcというシンボルは1つしか持てません。",
    "output": "Of course, in your global environment, there can only be one symbol named c."
  },
  {
    "index": "F23505",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、cという名のベクトルを作ることができcという同じ名前で既に存在している関数と必ずしも衝突が起こるわけではありません。",
    "output": "But it's possible to have for example, a vector named c, and that won't necessarily interfere with the function that already exists that's also named c."
  },
  {
    "index": "F23506",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようなことがRのスコープ規則の特徴です。",
    "output": "so, this leads us to the scoping rules for R."
  },
  {
    "index": "F23507",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この部分がもともとのS言語とR言語を異なるものにしている主な特徴です。",
    "output": "which, which is which I think are the, is the main feature that makes it different from the original S language."
  },
  {
    "index": "F23508",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ほどんどの方は、もともとのS言語を使ったことがないでしょうからこれは価値のない点のように聞こえるかもしれませんがスコープ規則こそがもともとの言語とR言語を分ける本質的な点なのです。",
    "output": "Since, since most of you probably did not use the original S language, maybe, this may not, this may be something of a moot point."
  },
  {
    "index": "F23509",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "スコープ規則とは何でしょうか?",
    "output": "So, what are the scoping rules?"
  },
  {
    "index": "F23510",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "スコープ規則によって関数内の利用可能な変数に値の割り付けら方が決まります。",
    "output": "So the scoping rules determine how a value is bound to a free variable in a function."
  },
  {
    "index": "F23511",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、関数内に2種類の変数があるとします。",
    "output": "So if you're in a function there's two types of variables."
  },
  {
    "index": "F23512",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず、関数の引数に定義されていて引数として引き渡されるものがあります。そして、関数の引数に定義されていない他の変数かシンボルがあるとします。",
    "output": "There's the, there's the function arguments that are passed through the definition of the function, and then there may be other variables or other symbols that are found in the function that are not function arguments."
  },
  {
    "index": "F23513",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで問題となるのは、このシンボルに値がどう割り付けられるかです。",
    "output": "And the question is, how do you assign a value to those symbols."
  },
  {
    "index": "F23514",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでは、レキシカル・スコープと呼ばれる方法や静的スコープという方法を使います。",
    "output": "And so R uses what's called lexical scoping or static scoping, and this is a common alternative to something called dynamic scoping."
  },
  {
    "index": "F23515",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "スコープ規則で関連するのはRでは検索リストを使ってシンボルに値を割り付けるということです。",
    "output": "And so this is, related to the scoping rules is how R uses the search list to bind a value to a symbol."
  },
  {
    "index": "F23516",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "レキシカル・スコープで素晴らしいことは特に統計計算のようなものを単純化するのにとても役立つということです。",
    "output": "And, and one thing that's nice about lexical scoping is that it turns out to be particularly useful for simplifying things like specifically statistical calculations."
  },
  {
    "index": "F23517",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数を見てください。",
    "output": "So take a look at the following function."
  },
  {
    "index": "F23518",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数には2つの引数がありxとyです。",
    "output": "So, this function has two formal arguments they're called x and y."
  },
  {
    "index": "F23519",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "コード内では、基本的にxを2乗してyをzで割った比率を加えます。",
    "output": "And the body of the function, basically it squares x and it adds the ratio of y divided by z, okay?"
  },
  {
    "index": "F23520",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xもyも明らかですがzはどこから来ているでしょうか?",
    "output": "So, x is clear, and y is clear, but where did z come from, right?"
  },
  {
    "index": "F23521",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合、xとyは引数ですがシンボルzは自由変数と呼ばれるものです。この変数は関数でも、関数の引数部でも定義されていないためです。",
    "output": "And so, in this case, x and y are formal arguments, but this, the symbol z is what's called a free variable, because it wasn't defined in the function, in the function header."
  },
  {
    "index": "F23522",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで問題になるのはどんな値をzに割り付けるかです。xとyに関しては、関数へ渡されている前提の場合にです。",
    "output": "And so the question is, well, what value do we assign to z, assuming that values were inputted to the function for x and y."
  },
  {
    "index": "F23523",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "各言語のスコープ規則によってzのような自由変数に対してどう値を割り付けるかが決まります。",
    "output": "And so, the scoping rules of a language determine how we assign a value to something like z, which is a free variable."
  },
  {
    "index": "F23524",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まとめるとRのスコープ規則のレキシカル・スコープは次のようになります。",
    "output": "So if I were so this, lexical scoping, the rules in R, can be summarized by the following sentence."
  },
  {
    "index": "F23525",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数が定義されている環境に対して自由変数の値の検索が行われます。",
    "output": "Which is basically, the values of free variables are searched for in the environment in which the function was defined."
  },
  {
    "index": "F23526",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この文を少し考えてみてください。何回か繰り返して言ってみてください。",
    "output": "OK, so, think about that for a second, maybe repeat it a few times."
  },
  {
    "index": "F23527",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "環境とは何でしょうか?",
    "output": "And so, what's an environment?"
  },
  {
    "index": "F23528",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "環境というのは、シンボルと値の組み合わせが集まったものです。",
    "output": "An environment is a collection of symbol-value pairs."
  },
  {
    "index": "F23529",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xはシンボルで3.14のようなものがこれの値になります。",
    "output": "So, x is a symbol. And 3.14 might be its value."
  },
  {
    "index": "F23530",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでは、全てがシンボルと値の組み合わせになっていると考えてもよいでしょう。",
    "output": "And, and you can think of everything in R as being pairs of symbols and values."
  },
  {
    "index": "F23531",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "別のシンボルとしてyを考えると例えば、データフレームがこの値かもしれません。",
    "output": "Right, so, a another symbol might be y, and its value is a data frame, for example."
  },
  {
    "index": "F23532",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようにシンボルと値の組み合わせの集まったものが環境で、環境には、上位のペアレント環境があります。",
    "output": "And so every environment which is a collection of these symbol-value pairs, has a parent environment."
  },
  {
    "index": "F23533",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "上位の環境というのはこの環境の上にあるようなものでここから継承をします。",
    "output": "So it's kind of like the, the environment that sits on top of it would that, that it inherits from and it's possible for an environment to have multiple children."
  },
  {
    "index": "F23534",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、1つの上位環境に対して複数の下位環境を持てます。上位環境がない環境はempty環境です。",
    "output": "So there might be one parent environment and many children environment and so there's only one environment without a parent, and that's the empty environment."
  },
  {
    "index": "F23535",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rではこのような環境を多く使います。",
    "output": "And so, when, so, R uses a lot of these types of environments."
  },
  {
    "index": "F23536",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "グローバル環境をあげて考えてみればワークスペースで、シンボルと値の組み合わせでできていましたよね。",
    "output": "So you think of the global environment, which is your workspace that is a set of symbol-value pairs, right?"
  },
  {
    "index": "F23537",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ワークスペースには作成したものがいっぱい含まれて全てに名前が付いています。",
    "output": "So you have a bunch of things that you've created in your workspace, and they all have names."
  },
  {
    "index": "F23538",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "その全てに名前にオブジェクトが関連付けられています。",
    "output": "And each one of those things has an object associated with it."
  },
  {
    "index": "F23539",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それは、数値ベクトルかもしれませんしデータフレームやリストだったりします。",
    "output": "So they might be a vector of numerics, or it might be a data frame, or it might be a list, or whatever."
  },
  {
    "index": "F23540",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、各パッケージには名前空間があって環境のように働きます。",
    "output": "And so there are all kinds of these envir, each package has a namespace, and that's like an environment."
  },
  {
    "index": "F23541",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "多くのシンボルと値が関連付けられています。",
    "output": "It has a bunch of symbols and values associated with it."
  },
  {
    "index": "F23542",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rで鍵となるのは関数を作って環境と関連付けるとクロージャ、または関数クロージャと呼ぶものが作成されます。",
    "output": "And so what the, the key thing in R is that if you take a function and you associate it with an environment, then that creates what's called a closure or a function closure."
  },
  {
    "index": "F23543",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらのクロージャはRで実行できる多様な興味深い演算の鍵です。",
    "output": "And these closures are, are key to a lot of different types of interesting operations in R."
  },
  {
    "index": "F23544",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の中を実行していて自由関数に出くわすと何が起こるでしょうか?",
    "output": "So, if you, if you're in a function and you encounter a free variable in that function what happens?"
  },
  {
    "index": "F23545",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まずは、関数が定義されている環境の関数を探します。",
    "output": "So, the first thing you look for is the function in which the environment in which the function was defined."
  },
  {
    "index": "F23546",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、関数をグローバル環境に定義したらグローバル環境が関数が定義されている環境です。",
    "output": "So for example if the function was defined, if I define a function in the global environment, then the global environment is the function's, is the environment in which the function was defined."
  },
  {
    "index": "F23547",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、この関数に自由関数を見つけた場合にはこの関数内には値を見つけることができずグローバル環境に探しに行きます。",
    "output": "So if I see a free variable in this function, what's going to happen is that if I can't figure out a value inside the function, then I'm going to look in the global environment, because that's where the function was defined."
  },
  {
    "index": "F23548",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、グローバル環境に関連するものが発見できない場合にはグローバル環境のいわゆる上位環境へと検索が続けられます。",
    "output": "If I can't find something in the global environment, then the search continues in what's called called the parent environment of the global environment."
  },
  {
    "index": "F23549",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "通常よくあるのはグローバル環境で関数を定義すると関数はグローバル環境で定義されていてこの環境の上位環境は検索リストの次の順番のものになります。",
    "output": "And so the, what happens in the usual case, if I define a function in the global environment, then the function is defined in the global environment, and then its parent environment is the next thing down on the search list."
  },
  {
    "index": "F23550",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、検索リストを順番に検索していきこの自由変数の値が見つけられるまで続けます。",
    "output": "So, what happens is that you just go down the search list until you eventually find the value for this free variable."
  },
  {
    "index": "F23551",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、グローバル環境以外でも関数を定義することが可能です。簡単に言えば関数はその関数が定義された環境内に値を探しに行きます。",
    "output": "Now, it's possible to define a function outside of the global environment, and so generally speaking what happens is that a function will look for a value in the environment in which it was defined."
  },
  {
    "index": "F23552",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この環境に見つけられない場合には上位環境に探しにいきます。",
    "output": "And then it's going to look, if it can't find it there, then it's going to look for the parent environment."
  },
  {
    "index": "F23553",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そこに見つけられない場合にはさらに上位環境、その上位と続けて検索していきtop-level(最上位)環境まで検索を行います。",
    "output": "And then if it can't find it there the search, it will keep looking at the parent environment or the parent etc, until we hit what's called the top level environment."
  },
  {
    "index": "F23554",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "top-level環境は通常クローバル環境ですが関数がパッケージで定義されていると、top-level環境はそのパッケージの名前空間です。",
    "output": "The top level environment is usually the global environment, however, if the function is defined in a package, then the top level environment is the namespace of that package."
  },
  {
    "index": "F23555",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "環境がここに見つからずtop-level環境に到達すると今度は検索は下位階層に向けて検索を続けempty環境に達するまで検索を行います。",
    "output": "once, if you can't find a value there, then once you hit the top level environment, the search will continue down the search list until we have hit the empty environment."
  },
  {
    "index": "F23556",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、baseパッケージに続けてempty環境に検索を行います。",
    "output": "So, after the base package, for example, then we hit the empty environment."
  },
  {
    "index": "F23557",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの環境にシンボルが見つからずempty環境にも到達したら、このシンボルに対する値を発見できないというエラーを発生させます。",
    "output": "If you can't find a symbol in all these environments and we've hit the empty environment, then we throw an error saying we can't find a value for this symbol."
  },
  {
    "index": "F23558",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "瞬時に明確にはなりません。",
    "output": "It's not immediately clear."
  },
  {
    "index": "F23559",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "「いいえ」関数はグローバル環境に定義されることが多くこの状態では、ワークスペースに自由変数の値が見つかります。",
    "output": "So typically the function is defined the global environment so that values of the free variables are just found in the user's workspace."
  },
  {
    "index": "F23560",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この挙動は適切なことと言えてほとんどの人が想像する動きです。",
    "output": "The right thing to do is kind of what most people are expecting."
  },
  {
    "index": "F23561",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、関数の中に値が見つけられない場合にはグローバル環境に探しに行きます。",
    "output": "If there's no, if, if there's, you can't find a value inside the function itself, you just look in the global environment."
  },
  {
    "index": "F23562",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは、グローバル変数などを定義できてワークスペースで定義する多くの他の関数でも共通して使えるということです。",
    "output": "So this is the, the idea here is that you can define things like global variables, that will be common to a lot of different functions."
  },
  {
    "index": "F23563",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、Rでの鍵となる違いは他の関数の中に関数を定義できることです。",
    "output": "so, but the key difference in R is that you can define functions inside of other functions."
  },
  {
    "index": "F23564",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、関数が戻り値として関数を返すこともできます。",
    "output": "'n so for example a function can return a function as the return value."
  },
  {
    "index": "F23565",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ほとんどの関数で、リストベクトル、行列、データフレームなどを返すことができますがこれだけではなく関数が別の関数を返すことができます。この場合には関数が返されます。",
    "output": "So, in most functions they'll return a list, or a vector, or a matrix, or a data frame or something like that, but it is possible for a, for a function to return another function and then that, if that's the case then the, then the function that gets returned."
  },
  {
    "index": "F23566",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合、関数は別の関数内で定義されています。",
    "output": "It was defined inside of another function."
  },
  {
    "index": "F23567",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、それが関数が定義された場所でグローバル環境ではありません。",
    "output": "So, it's an, the environment in which it was defined Is not the global environment."
  },
  {
    "index": "F23568",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まさに、他の関数の中です。",
    "output": "It's really the, the, the insides of this other function."
  },
  {
    "index": "F23569",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これが興味深くなるところでスコープ規則によって、何ができるのかに影響を及ぼしているところです。",
    "output": "So this is when things get interesting and this is when the scoping rules really have an impact on what you can do."
  },
  {
    "index": "F23570",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、ここで非常に簡単な関数を定義します。この種類の関数が出くわすことがあります。",
    "output": "So, I am going to define a very simple function here and often these kinds of functions come where you might think of constructive functions."
  },
  {
    "index": "F23571",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数が別の関数を作るということです。",
    "output": "So, the idea that the function is constructing another function."
  },
  {
    "index": "F23572",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この例で作るのはmake.powerという別の関数を定義する関数です。",
    "output": "So, here's what I want to, I want to create a function that that defines another, called make.power."
  },
  {
    "index": "F23573",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "make.powerは数値nを引数に持ちます。",
    "output": "And what make.power takes as input is a number n."
  },
  {
    "index": "F23574",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "make.power関数内にはpowという関数を定義しています。",
    "output": "So, and inside the make.power function I define another function called pow."
  },
  {
    "index": "F23575",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここではpow関数が引数xを使ってn乗しています。",
    "output": "And pow is going to take an argument called x."
  },
  {
    "index": "F23576",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、make.powerは関数のpowを戻り値として返しています。このpow関数の中ではxは関数の引数で問題ありませんがpow関数内ではnは定義されていないのでnは自由変数です。",
    "output": "And and so what's going to happen is that the power function is going to take the, then the, take the argument X and raise to their power N, okay, and so make that power returns, with a function power as its return value and so you see inside the power function X is a, X is a function argument but that's not a problem, but n is a free variable because its not defined inside the power."
  },
  {
    "index": "F23577",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、nはmake.power関数内では定義されています。",
    "output": "Function. However, N is defined inside the make.power function and so since that's the environment in which the pow is defined."
  },
  {
    "index": "F23578",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この中が関数powが定義されている環境なのでnの値を見つけることができます。",
    "output": "It will find the value of N."
  },
  {
    "index": "F23579",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "pow関数はnの値を他の環境の中に見つけることができます。",
    "output": "The pow, the power function will find the value of n inside this, it's other environment."
  },
  {
    "index": "F23580",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "どうなるかというと、make.powerを呼んで3などの数値を渡すと関数を返します。",
    "output": "So what happens is that I can call make.power and pass it a number like 3."
  },
  {
    "index": "F23581",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここではcubeに割り当てられます。",
    "output": "And then, it will return a function, which I'll sign to be called cube."
  },
  {
    "index": "F23582",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ように、make.powerに2を渡して関数を作って、squareと呼ぶことにします。",
    "output": "And, similarly, I can pass 2 to make that power and create a function that I'll call square."
  },
  {
    "index": "F23583",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この後で、cubeに3を渡すと3を3乗して27を返します。",
    "output": "So, now, when I, when I pass cube, the number 3 What is it does is it raises 3 to the 3rd power, so I get 27."
  },
  {
    "index": "F23584",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "squareに3を渡すと3を2乗して9を返します。",
    "output": "If I call square on the number 3, it, it raises three to the 2nd power, so it gives me 9."
  },
  {
    "index": "F23585",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように多様な関数を作ることができる関数を作りました。",
    "output": "And so, so, so now, I've cons, I've got one function that can, that's capable of constructing many different types of functions, and by raising to pow, to various powers."
  },
  {
    "index": "F23586",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の環境はどうすれば分かるでしょうか?",
    "output": "So, how do you know what's in a function's environment?"
  },
  {
    "index": "F23587",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ls関数を呼べば関数が定義されている環境を見ることができます。",
    "output": "You can look in the environment in which the function was defined, by calling the LS function."
  },
  {
    "index": "F23588",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、lsをcubeの環境に対して呼び出せばcube関数の中を見ることができます。",
    "output": "So if I call, if I call LS on On the environment for cube."
  },
  {
    "index": "F23589",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "nというオブジェクトがあるのが分かります。",
    "output": "You can see that inside the cube function, there's, there's something, there's an, there's an object called N."
  },
  {
    "index": "F23590",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "nに対してgetを実行するとnの値が3なのが分かります。",
    "output": "And if I use get on N you'll see that the value of N is equal to 3."
  },
  {
    "index": "F23591",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようにしてcube関数からすると引数として渡されたものを3乗すれば良いことが分かります。",
    "output": "Excuse me, that's how the cube function knows how to, knows to raise the argument to the 3rd power because it's already defined."
  },
  {
    "index": "F23592",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この数が既にクロージャ環境に定義されているためです。",
    "output": "Similarly the environment for square, you can see it has the exact same objects in it."
  },
  {
    "index": "F23593",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "同様にsquareの環境では全く同じオブジェクトが入っていますがsquare関数ではnの値は2となっています。",
    "output": "But now the value of n is equal to 2, in the square function."
  },
  {
    "index": "F23594",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで少しだけRが使っているレキシカル・スコープと動的スコープを比べたいと思います。",
    "output": "So, so, I want to make one brief comparison between lexical scoping, which is what R does, and dynamic scoping, which is what maybe some other function, some other programing languages implement."
  },
  {
    "index": "F23595",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、yに10を代入しています。",
    "output": "So here I've got, I'm assigning the value of Y equal to 10."
  },
  {
    "index": "F23596",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次にxを引数とした関数fを作ります。",
    "output": "Then create a function F, which takes, as an argument, X."
  },
  {
    "index": "F23597",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この中で、yに2を代入しyを2乗して、g(x)を加えます。",
    "output": "And then, it assigns, there it assigns Y equal to 2, it squares Y and then adds G of X."
  },
  {
    "index": "F23598",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "gとは何でしょうか?",
    "output": "So, what's G?"
  },
  {
    "index": "F23599",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "gは、また別の関数で引数xがありxをy回乗算します。",
    "output": "G is another function, which takes as an argument called X, and it multiplies X times Y."
  },
  {
    "index": "F23600",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "f関数では、yは自由変数でgも自由変数です。",
    "output": "So, in the F function, Y is a free variable, and G is also a free variable."
  },
  {
    "index": "F23601",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、g関数はf関数の中や引数では定義されていません。",
    "output": "Inside of F of or, it's, it, of, argument to F."
  },
  {
    "index": "F23602",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、g関数の中ではシンボルyは自由変数です。",
    "output": "Then in the G function, then the var-, the symbol Y is a free variable."
  },
  {
    "index": "F23603",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで問題なのはf(3)を実行すると何が返ってくるでしょうか?",
    "output": "And so the question is if I call f of 3 what gets returned?"
  },
  {
    "index": "F23604",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "レキシカル・スコープではyの値と関数gは関数が定義された環境で探されます。",
    "output": "So with lexical scoping, the value of Y and the function G is looked up in the environment in which the function was defined."
  },
  {
    "index": "F23605",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合は、グローバル環境内から探されます。",
    "output": "Which in this case was the global environment."
  },
  {
    "index": "F23606",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "g関数でのyの値は10になります。",
    "output": "So that the value of Y and the G function is 10."
  },
  {
    "index": "F23607",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "動的スコープではyの値は関数が呼び出された環境から探されます。この環境は、ときに呼び出し環境と呼ばれます。",
    "output": "So with dynamic scoping the value of Y is looked up in the environment from which the function was called; sometimes called the calling environment."
  },
  {
    "index": "F23608",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでは、呼び出し環境はparentframeの名称で通っています。",
    "output": "So in the R the calling environment is known as is what's called the parent frame."
  },
  {
    "index": "F23609",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合には、呼び出し環境で仮にyが2として定義されていればyの値は2になります。",
    "output": "In this case the calling environment Y was defined to be 2 and so the value of Y would be 2."
  },
  {
    "index": "F23610",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの偏微分を計算するにはレキシカル・スコープか動的スコープかによってfを呼んだときの結果は異なります。",
    "output": "So. Calling the function F would produce different answers depending on whether you use lexical scoping or dynamic scoping."
  },
  {
    "index": "F23611",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは、関数がグローバル環境で定義されさらにグローバル環境から呼び出されている時であれば定義環境と呼び出し環境が完全に一致している状態です。この状態だと、実際には実装されていない動的スコープと同じように見える結果を返すことがあります。",
    "output": "So, the one thing that, that, that will make lexical scoping and dynamic scoping look the same is that when a function is defined in the global environment and is subsequently called from the global environment, then the defining environment and the calling environment are exactly the same and so this can sometimes give the appearance of dynamic scoping even when It doesn't exist."
  },
  {
    "index": "F23612",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "その例として、ここに関数gがあります。",
    "output": "So here I've got a function called G. It takes an argument X."
  },
  {
    "index": "F23613",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数は、引数xを持っていてaに3を代入しx+a+yを実行します。",
    "output": "It assigns A to be equal to 3. And then it adds X plus A plus Y."
  },
  {
    "index": "F23614",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合xは、引数に指定されています。",
    "output": "So, in this case, X is a function is a formal argument."
  },
  {
    "index": "F23615",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "aはローカル変数で引数ではありませんが関数の中で定義しています。",
    "output": "A is a local variable so it's not a formal argument, but I defined it inside the function."
  },
  {
    "index": "F23616",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なので、問題ありません。",
    "output": "Then so, that's okay."
  },
  {
    "index": "F23617",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "yは自由変数ですね。",
    "output": "And then Y is a free variable, okay?"
  },
  {
    "index": "F23618",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "g(2)と呼び出すと関数gはグローバル環境にyの値を探します。",
    "output": "So if I call G of 2, the function G is going to look for the value of Y in the global environment."
  },
  {
    "index": "F23619",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "yを定義していなかったのでエラーが起こります。シンボルyにどの値を割り当てればよいか分からないためです。",
    "output": "If I haven't yet defined Y then there has to be an error because it doesn't know what value to assign to the symbol of Y."
  },
  {
    "index": "F23620",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "yを一旦定義すると例えば、3を代入してからg(2)を呼び出すと、8を返します。",
    "output": "So that's what I get in this line here."
  },
  {
    "index": "F23621",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは、yがグローバル環境に見つかったためです。ここでは、まるでyの値が呼び出し環境で探されたかのようですが実際には、定義された環境で行われています。",
    "output": "Now if I define what Y is, say I assign it to be 3, if I call it G of 2, then it returns 8 because now it's able to find Y in the global environment."
  },
  {
    "index": "F23622",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "gは、たまたまグローバル環境で定義されているためです。レキシカル・スコープを使える言語は数多くあります。",
    "output": "So even though it looks like the value of Y was looked up in the calling environment, it's actually the defining environment because G happened to be defined in the global environment so, there are a number of other languages that support lexical scoping."
  },
  {
    "index": "F23623",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例としては、Scheme、PerlPythonやCommonLispがあります。",
    "output": "Some examples are things like Scheme, Perl, Python, and Common Lisp."
  },
  {
    "index": "F23624",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、コンピューターサイエンスでは良く知られた定理としてCommonLispは、様々な言語が最終的にLispになったものです。",
    "output": "And of course there's a, a well known computer science theorem which is that all languages eventually converge to Lisp."
  },
  {
    "index": "F23625",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように、あまり知られていない特徴というわけではありません。",
    "output": "And so it's, it's not a, it's not an obscure type of feature."
  },
  {
    "index": "F23626",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "他のプログラム言語でも実は非常によくあるものです。",
    "output": "It's actually very common in a number of other programming languages."
  },
  {
    "index": "F23627",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rがレキシカル・スコープなことから生じる結果として全てのオブジェクトがメモリーに格納されている必要があります。",
    "output": "So, one of the main consequences of lexical scoping in R is that all the objects have to be stored in memory."
  },
  {
    "index": "F23628",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、非常に少ないオブジェクトしか使用しないプログラム言語なら一般的に言えば、これは大きな問題にはなりません。",
    "output": "So, if you're working with a programming language that has very small objects this generally speaking not a big problem."
  },
  {
    "index": "F23629",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかしスコープ規則の持つ性質や環境と相互の依存性の複雑さから物理メモリの外にこの種のモデルを実装するのは困難です。",
    "output": "but. Because of nature of the scoping rules and because of the complexity of the environment and the, the way they are all linked together, it's difficult to implement this type of model outside of physical memory, and so."
  },
  {
    "index": "F23630",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまりこの結果としてRが当初設計された時に全てがメモリに格納されることになりました。",
    "output": "So the consequence was that, when R was originally designed."
  },
  {
    "index": "F23631",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "事情は、どんどん複雑になり今では巨大なデータセットがありRに読み込むことができるようにするのは課題にもなりえます。",
    "output": "Things are getting complicated now, because of very large types of data sets."
  },
  {
    "index": "F23632",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "全てをメモリーに格納する必要があるからです。",
    "output": "Everything has to be stored in memory."
  },
  {
    "index": "F23633",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つ目に、関数はキャリアポインターが必要で定義環境を示す必要があります。",
    "output": "Second now, so every function has a carrier pointer to its respect, to its defining environment."
  },
  {
    "index": "F23634",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の中の関数であったり別の関数を返す関数を定義したりすると定義環境が格納されているメモリの箇所を指し示すポインターが必要になります。",
    "output": "and, and that defining environment could literally be anywhere because there could be functions within functions and then the, and if you do, if one function returns another function, then there has, there has to be a pointer to that piece of memory where the defining environment is stored."
  },
  {
    "index": "F23635",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これがモデルを少し複雑にしますがゆえに、より使いやすくなっています。",
    "output": "And so this makes the model a little bit more complex but but, but all the more useful."
  },
  {
    "index": "F23636",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これが、S言語元来の実装ともいえるS-PLUSでは自由変数は、常にワークスペースから探されます。",
    "output": "So, the, in S plus, which was kind of the original implementation of the S language, the free variable were always looked up in the workspace."
  },
  {
    "index": "F23637",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "全てをディスクに格納することもできます。全ての関数の定義環境が同じになるためです。",
    "output": "Everything could be stored on the disk, because the defining environment of all the functions was the same."
  },
  {
    "index": "F23638",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここまで、Rでの関数とスコープ規則を話してきましたがこの情報のどこに、それほどに役立つことがあるのかと思うかもしれません。",
    "output": "So far, we've talked about functions and the scoping rules in R, and you might be wondering why any of this information is at all useful."
  },
  {
    "index": "F23639",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "役立つのはただ通常の関数を書いてデータを操作したり計算を行ったりするのではなくスコープ規則と関数を組み合わせて使うと統計で非常に役に立つことがあります。",
    "output": "So, in addition to just writing regular functions for manipulating data or for doing calculations, there's one combination of the scoping rules and functions which can be very useful in statistics, and that's for optimization."
  },
  {
    "index": "F23640",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rでは、最適化に使用するルーチンがありoptim、nlm、optimizeがあります。",
    "output": "So there are a few optimization routines in R called optim and nlm and another one called optimize."
  },
  {
    "index": "F23641",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの使い方ですべてに共通しているのはベクトル引数を使用して関数を引き渡します。",
    "output": "And they all require that you pass a function to those functions, whose argument is vector parameters."
  },
  {
    "index": "F23642",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、例えば極小化か極大化をパラメーターを使って行いたい関数があるとします。",
    "output": "So for example there's going to be some function that you want to minimize or maximize."
  },
  {
    "index": "F23643",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "optim、lm、optimizeなどの関数では目的関数を使って最小値や最大値を求めようとします。",
    "output": "and, over range of parameters, and functions like Optum and lmand take, take that kind of objective function, and try to find the minimum or the maximum."
  },
  {
    "index": "F23644",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "統計では、極大化、極小化を行おうとする目的関数はlog-likelihoodのように極大化しようとしているパラメーターだけでなく他のことにも依存します。",
    "output": "so, the idea is that, but in statistics this objective function that we're trying to minimize or maximize, just like a log likelihood, is going to depend on other things, besides just the parameters that you're maximizing over."
  },
  {
    "index": "F23645",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "とりわけ、データのようなものに依存します。",
    "output": "So, for, in particular, it's going to depend on things like data."
  },
  {
    "index": "F23646",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでの問題は、関数がパラメーターやデータなどの恐らくは多くのものに依存しているときにどう指定するのかです。",
    "output": "And so, the question is, well, how do you specify a function."
  },
  {
    "index": "F23647",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さらに、このような最適化を行うときは特定のパラメーターを固定するのが役に立つことが多くあります。",
    "output": "Depend, depends on parameters and data and perhaps many, many other things."
  },
  {
    "index": "F23648",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、特定の値にパラメーターを固定して他のパラメーターに対して最適化を行います。",
    "output": "In a clean, way and to, to write it in a, in a, in kind of readable programming style and make it easier for the user to kind of use these types of functions."
  },
  {
    "index": "F23649",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最適化問題をRで扱うときには目的関数を生成する生成関数を作るのが基本の考えです。",
    "output": "And further more, when you're doing these kinds of optimizations in many cases it's useful to hold certain parameters fixed and for example, fix a parameter to a certain value then optimize over the other parameters."
  },
  {
    "index": "F23650",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "目的関数の基本的な考えは全てのデータや他の依存するもの全てをその関数を定義した環境に含めるという考えです。",
    "output": "So, the basic idea with any optimization problem in r is you can create a contructor function which constructs the objective function."
  },
  {
    "index": "F23651",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすることでまるでカバンかのように様々なものを一緒に入れておけるようにします。",
    "output": "And then once the ob, and the objective function idea, that idea is that it would have all of the data, and all of the other things that it depends on would be kind of included in the defining environment of that function, so that it would kind of carry along those other things like baggage, you know, in its, in its enclosing environment."
  },
  {
    "index": "F23652",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすることでこの関数を呼ぶたびにこれらのことを指定する必要がなくなります。",
    "output": "And so that way you don't have to specify those things every time you call the function."
  },
  {
    "index": "F23653",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "パラメーターの値を指定する必要しかありません。",
    "output": "The only thing that you need to specify is the value of the parameter."
  },
  {
    "index": "F23654",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに、生成関数を作りました。これで負の対数尤度関数を作ります。",
    "output": "So, for here I've got, I've written a constructor function that creates a negative log-likelihood."
  },
  {
    "index": "F23655",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "少し加えておくとoptim、lm、optimizeなどのRの関数の多くが、デフォルトでは関数の極小化を試みます。",
    "output": "So just as a note, most of the functions in like optim and anolam and optimize and, in R, they all attempt to minimize functions by default."
  },
  {
    "index": "F23656",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、極大化を行おうとすると目的関数を書く場合にはこの関数の負の値を使うことで極小化で使えます。",
    "output": "And so when you write your objective functions if they're designed to be maximized, then you have to kind of take the, the negative of those functions so that you can minimize them."
  },
  {
    "index": "F23657",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この例のコードは全てウェブサイトに載せますのでコードを見たり、自分で実行することもできます。",
    "output": "So another thing is that all the code in this example all, will be on the website so you can take a look at the code and try to run it yourself if you want."
  },
  {
    "index": "F23658",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、負の対数尤度を極小化したいためです。これが、目的関数です。",
    "output": "So here I've got a constructor function that's making a negative log-likelihood because I want to minimize the negative log-likelihood function."
  },
  {
    "index": "F23659",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これにはデータが必要なのでデータが、make.NegLogLik関数の引数の1つ目にきています。",
    "output": "So this is my objective function. It's going to depend on some data and so that's the argument."
  },
  {
    "index": "F23660",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "引数の2つ目は論理ベクトルのfixedです。",
    "output": "So the data is the first argument to this make.makelike function."
  },
  {
    "index": "F23661",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで、パラメータのどれかを固定するかどうかを決定します。",
    "output": "The second argument is a logical vector called fixed and it determines whether or not I want to have, want to fix some of the parameters."
  },
  {
    "index": "F23662",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これが、パラメーターのベクトルでこれに対して最適化を行います。",
    "output": "So, now ins- inside the constructor function I have to find another function which is it takes an argument called p for the parameters."
  },
  {
    "index": "F23663",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この正規分布に対してこのデータを適合させようとしています。",
    "output": "And this is going to be the parameter vector that I want to optimize over."
  },
  {
    "index": "F23664",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ご存知のように正規分布には2つのパラメーターがあります。",
    "output": "So basically what this function's going to do is going to return log-likelihood for a normal distribution and I'm go- I'm going to want to fit my data to this normal distribution."
  },
  {
    "index": "F23665",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "平均はmuで標準偏差はsigmaです。",
    "output": "And so we know that a normal distribution has two parameters, the mean, mu, and a standard deviation, sigma."
  },
  {
    "index": "F23666",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この2つのパラメーターに対して最適化を行います。",
    "output": "So those are going to be the two parameters that I want to optimize over."
  },
  {
    "index": "F23667",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは対数尤度を定義してこれの負を取って極小化できるようにします。",
    "output": "And so here I'm just defining, the law of likelihood, and taking the negative of it, so I can minimize it."
  },
  {
    "index": "F23668",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで生成関数が行っているのは関数を返り値として返しています。",
    "output": "And, what, what the constructor function does is returns the function as the return value."
  },
  {
    "index": "F23669",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、ここでは正規分布乱数を生成しています。平均が1で標準偏差が2のものです。",
    "output": "So, here I'm going to simulate some normal random variables, mean 1 and vari, and sorry, mean 2."
  },
  {
    "index": "F23670",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、ここでは生成した正規分布の変数を使って生成関数を呼んでnLL、または負の対数尤度用の関数を作っています。",
    "output": "And, and then I'm going to make my constructor function, I'm going to call my constructor function with these random variables. And create my NLL or Negative Log Likelihood function."
  },
  {
    "index": "F23671",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このnLL関数をここに出力すると正規分布のための先ほどの生成関数の内部のような関数のコードらしきものが出力されます。しかし、出力された環境を見るとenvironmentと表示されている最終行の小さなタグがありますがこれがこの関数の上位環境です。",
    "output": "So,when I print out this function here,you will see that it, I see the body of the function looks like the code for the normal distribution.Its just like in the construction function before, but if you look at the environment, you will see this little tag that at the bottom that says environment."
  },
  {
    "index": "F23672",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし、関数をグローバル環境で定義すれば特別なenvironmentタグはここには出ません。",
    "output": "And that's the enclosing environment for this function."
  },
  {
    "index": "F23673",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、関数の中で関数を定義すると定義環境へのポインターが必要です。",
    "output": "And so normally because when you define a function in the global environment, that it would just you, there wouldn't be a special environment tag down here."
  },
  {
    "index": "F23674",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすることでRが全ての自由変数の値が何かを記録しておけるようにします。",
    "output": "However, when you define a function inside of another function that and there has to be a pointer to the, to that defining environment so that R can remember kind of what the values of all the free parameters are going to be."
  },
  {
    "index": "F23675",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この0x165b1a4を見ると16進数の番号でメモリー上で定義環境がどこかを示しています。",
    "output": "And so, if you look at, this, this is, 0 x 16 5 b 1 a 4."
  },
  {
    "index": "F23676",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここのnLL関数の中身を見るとここにあるのはローカル変数かパラメーターのベクトルpから来たものだとわかります。",
    "output": "So if you look at the body of the nl function here, you'll see that pretty much everything here is either a local variable or its a param-, it comes with a parameter vector p."
  },
  {
    "index": "F23677",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは関数の引数でもなくローカル変数でもないのでこれは自由変数ですがもともとはdataが渡された先のmake.NegLogLik関数もしくは生成関数からのものです。dataは、関数が定義された環境で見つけることができます。",
    "output": "However, there was one argument, th-, sorry, there's one variable here, the data variable, which is not an argument to the function And it's not a local variable, so it's a free variable but the data come from the make neglog like functions or constructor function which originally pass the data to that."
  },
  {
    "index": "F23678",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "dataがどこにあるのかが分かりdataが何かを指示する必要はありません。",
    "output": "And so the data can be looked up in the environment that the function is defined and it knows what the data are, you don't have to tell what the data are it's already fixed in the function."
  },
  {
    "index": "F23679",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このため、lsを呼び出してnLL関数の環境を調べるとdata変数がこの中にあるのが分かります。",
    "output": "So if you look at the environment for this negative log-likelihood function by calling LS, you'll see that the the data variables there."
  },
  {
    "index": "F23680",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、fixed変数がありどのパラメーターを固定するかを指定します。params変数もここにあります。",
    "output": "The fixed variable there which indicates which parameter should be fixed, and then there's also the params variable there."
  },
  {
    "index": "F23681",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これら3つはこのnLL関数の中では全て自由変数ですが全て定義環境で定義されています。",
    "output": "Inside this negative log likelihood function, but they're defined in the defining environment."
  },
  {
    "index": "F23682",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "実行すると、関数を最適化して推定値は、muが1.2でsigmaは1.78になります。",
    "output": "So now I can call optim on my NLL function and I'm going to pass some initial values for musing to zero and sigma to one, and it'll run and you'll see that when it optimizes the function the estimates turn out to be 1.2 for muand 1.78 for sigma."
  },
  {
    "index": "F23683",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もともと1と2だったので真実にとても近いですね。",
    "output": "So pretty close to the truth, remember, which was one and two."
  },
  {
    "index": "F23684",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし実施したければsigmaを実際の値に固定してmuに対してのみ最適化を実行して平均を計算できます。",
    "output": "Now I could, if I wanted to, I could fix sigma to be equal to its true value and then just optimize over mu to get the mean, and so when I call make."
  },
  {
    "index": "F23685",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで、fixed変数にはmuにFALSEを設定しsigmaに2を設定します。",
    "output": "So I need to reconstruct my optim, my objective function by calling make.neg log like, and here I set the fixed variable to be false from U."
  },
  {
    "index": "F23686",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "sigma=2に設定して、muを変更できるようにします。さてこれでoptimizeを呼べばよいだけです。",
    "output": "So I'm setting Sigma to be equal to two, and I'm letting U be three."
  },
  {
    "index": "F23687",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "optimizeが極小化できるのは単一変数の関数だけです。",
    "output": "Now I can just call, optimize, because optimize will minimize the function of a single variable only."
  },
  {
    "index": "F23688",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この関数には1つの変数しかないのでoptimizeを使うことができます。",
    "output": "And because I only have a single variable in this, function, I can use, I can use optimize."
  },
  {
    "index": "F23689",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで見てわかるようにmuの推定値は1.21となり、先ほどの最適化より少しだけ違うものになりました。",
    "output": "And you can see that it, it, it estimates made to be about 1.21 so slightly different from the previous optimization."
  },
  {
    "index": "F23690",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、muを1に固定して、sigmaを最適化することもできますがこれを実施するには最適化用の関数を再度作ってそれに対してoptimizeを実行する必要があります。",
    "output": "I can also fix mu to be one and try to optimize over over sigma and but in order, in order to do that I have to construct another function for optimization call optimize on that."
  },
  {
    "index": "F23691",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "今度は、sigmaが約1.8となりました。",
    "output": "Here I get my f cent of sigma to be about 1.8."
  },
  {
    "index": "F23692",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし実施したければ、対数尤度をプロットすることも非常に簡単にできます。ただ、多くの他のパラメーターに関数が依存していない場合にはです。",
    "output": "If I want, I can plot the likelihood, or the log likelihood, and this is very easy to do when I have a function that doesn't depend on a lot of other parameters."
  },
  {
    "index": "F23693",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、ここでは負の対数尤度を作ってmu=1にして負の対数尤度をsigmaの関数としてプロットします。",
    "output": "So here I'm going to make the neg, the negative log likelihood."
  },
  {
    "index": "F23694",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで関数nLLを作ります。",
    "output": "I'm going to fix mu to be equal to one and I'm going to plot the negative log likelihood as a function of sigma."
  },
  {
    "index": "F23695",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xの座標を作るのにグリッド値の順列を作ります。",
    "output": "And so I construct my function here, in LL."
  },
  {
    "index": "F23696",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "nLL関数を、そのグリッド値に適用しy変数を作ります。",
    "output": "I I construct a sequence of grid values for the X coordinate, and then I apply my NLL function to all those grid points, and create my Y variable."
  },
  {
    "index": "F23697",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これで、xとyをプロットできます。また、type=\"l\"とすることで点を繋いで線にします。",
    "output": "So, now I can just plot this as a, as a, I can plot the Xs and the Ys and connect the dots using the type equal to L."
  },
  {
    "index": "F23698",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "同様に、負の対数尤度をsigma=2に固定し、muを変化させて平均の関数としてプロットすることができます。",
    "output": "Similarly I can plot the negative likelihood as a function of the mean by fixing sigma to equal to two and letting mu vary."
  },
  {
    "index": "F23699",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでも同様にグリット値を作成してこれらのグリッドに対してnLL関数で評価した後にプロットします。",
    "output": "And similarly, I create another grid of points another set of grid points and I evaluate at the NLL function on those grid points and then make a plot."
  },
  {
    "index": "F23700",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、Rのレキシカル・スコープが素晴らしいのはなんらかの極小化や最適化を実施する場合に関数を評価するのに必要な目的関数を作ってデータや附随するデータを関数の上位環境に含められます。",
    "output": "So, the nice thing about lexical scoping in R is that, if you're doing minimization or optimization of some sort, you can build these objective functions, which contain all the necessary data, and all the other kind of bells and whistles that are required, to evaluate that function."
  },
  {
    "index": "F23701",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすることで目的関数を呼ぶときにデータや附随するものを毎回指定する必要がなくなります。",
    "output": "So that when you call the objective function, you don't need to specify the data, and all those other things every single time."
  },
  {
    "index": "F23702",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "環境に組み込まれていて自動的にしかるべき箇所から探すようにできています。",
    "output": "They're kind of built in to the environment and they'll be automatically looked up in the right place."
  },
  {
    "index": "F23703",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数を評価するために必要な長くなる引数のリストを毎回渡す必要はありません。",
    "output": "That in order to evaluate the function every single time."
  },
  {
    "index": "F23704",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このような関数のコードは非常に単純で、難しくないものにすることができます。",
    "output": "So this can be very useful for interactive work, and for exploratory work like for example making these plots."
  },
  {
    "index": "F23705",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "非常に長い引数のリストを引き渡す必要がないからです。",
    "output": "And this can so the code for these types of functions can be very simple and kind of clean because you don't have to carry on these large argument lists."
  },
  {
    "index": "F23706",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rのレキシカル・スコープの規則のおもな参照先としてはJournalofComputationalandGraphicalStatistics誌の『LexicalScopeandStatisticalComputing』という題のロバート・ジェントルマンとロス・イハカによる論文があります。",
    "output": "So just for reference, the main reference for this type of Lexical Scoping rules of R, is the paper in the journal Computation and Graphical Statistics called Lexical Scope and Statistical Computing, and Robert Gentleman and Ross Ihaka who created R, have some very nice examples in this article."
  },
  {
    "index": "F23707",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "標準によってコードが読みやすくなってコードで何をしているか理解しやすくなります。",
    "output": "Coding standards in R are really important becasue they help you, make your code readable and allow you and other people to understand what's going on in your code."
  },
  {
    "index": "F23708",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、もちろんですが他のどんな様式にも当てはまることですが例えば服装やなんでもがそうであるように何か1つの方針に全員が同意するのは難しいことです。",
    "output": "Now, of course, just like it is with any other, style whether it comes, when you, you know, whether it's your clothing or whatever it is, it's difficult to get everyone to agree on one set of ideas."
  },
  {
    "index": "F23709",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そうであってもRでコーディングする上で重要になってくる本当に基本的な最低限の標準があります。",
    "output": "But I think there are a couple of very basic, kind of minimal standards that are important when you're coding in R."
  },
  {
    "index": "F23710",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、今後Rでコーディングする際に重要なコーディング標準について少しお話しします。この標準に従うことで見やすさや使ってもらう事を目指すならコードを見やすくしたり使ってもらいやすくもできます。",
    "output": "Alright, so I'm just going to talk a little bit about some of the coding standards, that I think are important to, when you're writing R code, and I think will help make your code more readable and more usable by others if that's what you're trying to, to achieve."
  },
  {
    "index": "F23711",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目の標準はRに限らずどのプログラム言語でも非常に重要です。コードを書くときにはテキストエディターを使ってテキスト形式で保存するようにすることです。",
    "output": "So, the first principle that I think is very important in pretty much any programming language, not just R, is that you should always write your code using a text editor and save as a text file."
  },
  {
    "index": "F23712",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そうですテキストファイルが基本的な標準の1つです。",
    "output": "Okay, so, a text file is a kind of basic standard."
  },
  {
    "index": "F23713",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "テキストは通常どんな書式もなく特別な見た目の違いもなくただの文字ですよね。",
    "output": "It usually doesn't have any sort of formatting or any sort of, kind of special, appearance, it's just text, right?"
  },
  {
    "index": "F23714",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして概してアスキー形式のテキストを使いますがアメリカやイギリス以外の所で英語以外を使用する所ではアスキー以外のテキストフォーマットを使用しているかもしれません。",
    "output": "And usually, typically, typically it's going to be ASCII text, but if you're, on, in places outside the US or the UK using non-English languages there may be other standard text formats."
  },
  {
    "index": "F23715",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この根幹の考えは、テキストフォーマットであればどんな基本的な編集プログラムでも扱えるということです。",
    "output": "But the basic idea is that a text format, can be read by pretty much any basic editing program."
  },
  {
    "index": "F23716",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最近では、何かを書くときには様々な編集ツールから選んで使えます。",
    "output": "These days, you know, when you're writing something there's a lot different of tools that you can use to write."
  },
  {
    "index": "F23717",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "本を書いたり、ウェブページやそれに似たようなものを書くときにはこれを書くための様々なツールがあります。",
    "output": "If you're writing a book, or or a webpage or something like that, there's all kinds of different tools that you can use to write, to write those things."
  },
  {
    "index": "F23718",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかしコードを書くときには常にテキストエディタを使う必要があります。",
    "output": "But you're, when you're writing code, you should always try to use a text editor, because that's like kind of like the, the kind of least common denominator, and it makes it so that everyone will be able to access your code and improve upon it."
  },
  {
    "index": "F23719",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "テキストなら、誰もがコードを見れてさらに改善することもできます2つ目の標準は読みやすくするためには非常に重要でコードをインデントすることです。",
    "output": "The second principle is, which is very important for readability, is to indent your code."
  },
  {
    "index": "F23720",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "インデントはメーリングリストや他のディスカッショングループで適切なインデント文字数について頻繁に熱い議論が行われています私自身のお勧めはありますが何が適切かは話しません。",
    "output": "So indenting is something that's often hotly debated in lots of mailing lists and other types of discussion groups in terms of how much indenting is appropriate."
  },
  {
    "index": "F23721",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、ここで最も重要なのはインデントがなぜ大切なのかを理解してもらうことです。",
    "output": "But I think the most important thing is that you understand why indenting is important."
  },
  {
    "index": "F23722",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "インデントというのはコードのそれぞれの塊をコード内の他の塊の箇所よりも右側にずらすべきということです。",
    "output": "So indenting is the idea that different blocks of code should be spaced over to the right a little bit more than other blocks of code so you can see kind of how the control flow how the flow of the program goes based on the indenting alone."
  },
  {
    "index": "F23723",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすることでインデントを見るだけでプログラムの流れの制御フローが分かります。",
    "output": "So coupled with indenting, is the third principle which I think is very simple which is, limit the width of your code."
  },
  {
    "index": "F23724",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "インデントを使っていると右側にテキストを永遠にずらしてこともありえますこのため右側へずらすコードの幅に対して制限を設ける必要があります。",
    "output": "So you have indenting it's possible to kind of indent off to the right forever so you need to limit on the right hand side how wide your code is going to be and usually this is kind of determined by the number of columns of text."
  },
  {
    "index": "F23725",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "テキストの幅を80桁に制限するのも1つの方法です。そうすることでコードの幅がこの幅を越えないようにします。",
    "output": "And so one possibility is you limit your text to about 80 columns of text and then and so that your, the width of your code never exceeds that."
  },
  {
    "index": "F23726",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ではちょっとこの例を見てみましょう。",
    "output": "So, let's take a look for, at a quick example here."
  },
  {
    "index": "F23727",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "RStudioを開いてRコードの書かれた簡単なコードファイルを開いています。",
    "output": "So here you can see I've got R Studio open, here with a simple code file with some R code in it."
  },
  {
    "index": "F23728",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず最初にRStudioのエディターがテキストエディターなのをお伝えしておきます。",
    "output": "And, first of all, let me just mention that the editor in R Studio is a text editor."
  },
  {
    "index": "F23729",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これを使うとコードを書いたRファイルはテキストフォーマットのファイルとして保存されます。",
    "output": "So it will always save the R files that you write as text format files."
  },
  {
    "index": "F23730",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "何もしなくてもテキストに保存してくれます。しかし、インデントの方式は1桁になっています。",
    "output": "But you can see the indenting scheme here is equal to one space."
  },
  {
    "index": "F23731",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "見ての通りコードの行は左側に潰れて寄ってしまっています。",
    "output": "And you can see that all the code is kind of mashed together here on the left hand side."
  },
  {
    "index": "F23732",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ifの塊がどこまでなのか分かりにくくなっています。",
    "output": "It's difficult to tell kind of where the if blocks are."
  },
  {
    "index": "F23733",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "elseの塊もですし関数の開始や終了も分かりにくいです。",
    "output": "Where does the function kind of end and begin?"
  },
  {
    "index": "F23734",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合はインデントの方式のせいで見やすいものにできていません。",
    "output": "And so the indenting scheme kind of makes the code not very readable in this case."
  },
  {
    "index": "F23735",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "RStudioではインデントを変更できます。",
    "output": "So we can change the indenting in R Studio."
  },
  {
    "index": "F23736",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここのPreferencesのメニューを開いてCodeEditingを開きます。",
    "output": "If we just go up to the Preferences menu here."
  },
  {
    "index": "F23737",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "4に変更してみます。",
    "output": "And let me just change it to four."
  },
  {
    "index": "F23738",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それ以外では、列幅のマージンは80桁になっています。80文字目の箇所にマージンを表示してくれます。",
    "output": "And you can see that the column, the margin column is set to 80 characters, so it will show you the margin when you've reached 80 characters."
  },
  {
    "index": "F23739",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Cmd+Aを押して全選択してからCmd+Iを押してインデントします。",
    "output": "And so I'm going to select all here with Cmd+A, and then Cmd+I to indent it."
  },
  {
    "index": "F23740",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "見て分かるようにインデントが少し良くなりました。",
    "output": "So now you can see that the indenting is a little bit nicer now."
  },
  {
    "index": "F23741",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これなら関数の開始と終了やifの塊の開始終了やプログラムの構造がかなり明確になります。",
    "output": "You can see, kind of, where the function begins and ends, you can see where the if blocks start and end, and the, kind of, structure of the program is much more obvious."
  },
  {
    "index": "F23742",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここを8に変更して、Okを押して、全選択の上でCmd+Iを押します。",
    "output": "So, I'm going to change this one more time though and my, because my personal preference for indenting is to use eight spaces, so I'm going to change this to eight."
  },
  {
    "index": "F23743",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "見て分かるように、8桁が好きなのはコードの構造がとても明確になるからです。",
    "output": "And now you can see, I prefer the eight spaces just because it really makes the structure of the code very obvious."
  },
  {
    "index": "F23744",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "全体的に、これでコードが読みやすくなります。",
    "output": "And it makes the code very readable in general."
  },
  {
    "index": "F23745",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようにインデントはとても重要です。",
    "output": "So you can see that indenting is very important."
  },
  {
    "index": "F23746",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "あまりインデントしない場合に起こりうる最も大きな問題は例えば全くインデントしないとか非常に少ないインデントだとコードがつぶされたような状態になるのが問題です。",
    "output": "If you don't indent at all or if you only use a very small amount the code becomes kind of very mashed together."
  },
  {
    "index": "F23747",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "できるなら、8桁のインデントを使ってください。こうするとコードが非常に読みやすくなりかなりきれいに配置することができるからです。",
    "output": "So I recommend at least four spaces for an indent and I'm pref, I prefer, you know, eight spaces for an indent, just because it makes the code much more readable and spaces it out much nice, much more nicely."
  },
  {
    "index": "F23748",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "8桁インデントのような方法での代表的な利点は左側のマージンを80桁としたときには書くコードに対して少し異なる考えかたが必要になるからです。",
    "output": "One of the advantages of having something like an eight space indent, is coupled with an 80 character margin on the right hand side, is that it forces you to think about your code in a slightly different way."
  },
  {
    "index": "F23749",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、8桁インデントにするとfor-loopないのfor-loop、そしてその中のfor-loopのようにfor-loopをネストするたびに例えば8桁インデントさせる必要があるからです。",
    "output": "So for example, if you have eight space indents, if you're going to have a for-loop, nested within another for-loop within another for-loop, every time you nest another for-loop, for example, you have to indent over eight spaces."
  },
  {
    "index": "F23750",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "4レベルのfor-loopをするころにはほぼ確実に右側が80桁マージンの端に到達してしまいますよね?",
    "output": "And by the time you get to maybe your fourth nested for-loop you're pretty much hitting the right hand column at the 80 column margin, right?"
  },
  {
    "index": "F23751",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "8桁インデントのいいところは80桁マージンと一緒に使うとコードを読みやすくする点において本当に基本的で基礎的な失敗をしないようにしてくれるところです。",
    "output": "And so the nice thing about the eight space indent, coupled with the 80 column margin, is that it prevents you from kind of writing very basic, making very kind of fundamental, kind of mistakes with, with code readability."
  },
  {
    "index": "F23752",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、80桁マージンと8桁インデントを使うと3階層以上のloopのネストは現実的ではなくなります。このあたりがコードの点では読みやすさの限界ではないかと思います。",
    "output": "So, for example, with an eight space indent and 80 column margin, you might not be able to do feasibly more than two nested for loops, and, but I think that's really the, kind of, the boundary of what is readable in terms of code."
  },
  {
    "index": "F23753",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "特別な場合を除けば一般的には3~4階層にネストされたloopは読みにくいものです。複数の関数に分けるなどした方がよいでしょう。",
    "output": "Typically except for some special cases, a three, you know, a three nested or four nested four loop is difficult to read, and it's probably better off, you know, splitting off into separate functions or something like that."
  },
  {
    "index": "F23754",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "よいインデント方針を使えばコードがより読みやすくなるだけでなく少し異なる見方でコードを考えるようになります。",
    "output": "So a good indenting policy not only makes the code more readable, but it actually can force you to think about writing your code in a slightly different way."
  },
  {
    "index": "F23755",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "論理的に正当化できるインデント方針とマージンの制約があるのは本当に素晴らしい利点です。それでは。",
    "output": "And so that's a really nice advantage of, of having a logical indenting policy with, coupled with a, you know, a right-hand side restriction."
  },
  {
    "index": "F23756",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最後に関数の大きさを制限することについてです。理論上では、Rの関数は他の言語と同じように非常に長いものも作れます。",
    "output": "So the last thing I want to talk about is to limit the length of your functions."
  },
  {
    "index": "F23757",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数に関して論理的に行うべきことはひとつの基本的な活動に制限することです。",
    "output": "Alright so, functions in R can, can theoretically go on for quite a long time and of course just like in any other language but just like in any other language I think that the, the logical thing to do with a function is limit it to kind of one basic activity."
  },
  {
    "index": "F23758",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、readTheDataという関数があったとしたら関数ではデータを読むだけにすべきです。",
    "output": "So for example, if you're function's named read the data."
  },
  {
    "index": "F23759",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "データを読んで処理してモデルを適用して、結果を出力するというのは避けるべきです。",
    "output": "Then your function should simply read the data, it should not read the data, process it, fit a model, and then print some output, alright?"
  },
  {
    "index": "F23760",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こんな時はおそらく論理的な塊で複数の関数に分けるべきです。",
    "output": "So you should, the logical kind of steps like that, should, should probably be spit, split, into separate functions."
  },
  {
    "index": "F23761",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これをすると利点がいくつかあります。",
    "output": "There are a couple of advantages to doing this."
  },
  {
    "index": "F23762",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず第一に1ページに収まるコードにできることです。こうすれば、画面を永久にスクロールしてこの関数の全てのコードを読む必要がありません。",
    "output": "First of all, it's nice to be able to have a function written on a single page of code, so you don't have to scroll endlessly to see, you know, where all the code for this function goes."
  },
  {
    "index": "F23763",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし関数全体が1画面に入っていれば全体を見て、全体で何かをしようとしているのか確認できます。",
    "output": "If you could put all the function, the entire function on like one screen of the editor, then you can look at the whole function and see what it does all at once."
  },
  {
    "index": "F23764",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "コードを論理的な塊に分けることの利点にはトレースバックやプロァイラーやデバッガーなどの機能を使うときに問題が起こっているのがどの呼び出し部分か分かることです。",
    "output": "Another advantage of splitting up your code into logical sections, to logical functions, is that if you use functions like traceback, or the profiler, or the debugger, these often tell you, you know, where in the function call stack you are when a problem occurs."
  },
  {
    "index": "F23765",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "また、論理的なかたまりで複数に分けられた関数があるとバグが起こった時にどこのどんな種類の関数で起こったのかが分かり、直すのにはどこの部分を見ればよいか分かりますよね?",
    "output": "And if you have multiple functions that are all logically divided in to separate pieces then when a bug occurs and you know that it occurs in a certain type of function or a certain function then you know kind of where to go fix things, right?"
  },
  {
    "index": "F23766",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、長々と続く関数の中でバグが起こった場合にデバッガーやトレースバックやプロファイラーから分かるのはこの関数の中で問題が起こっている事実だけです。",
    "output": "So if you have, but if just have a single function that just goes on forever and a bug occurs then the only thing that the debugger or the traceback or the profiler can tell you is that there's a problem in this one function."
  },
  {
    "index": "F23767",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、実際にその中のどこで問題が起こっているのかは教えてくれません。",
    "output": "But it, it doesn't, it, it's difficult to tell you where exactly the problem occurs."
  },
  {
    "index": "F23768",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように、関数を細かく分けるとデバッグやプロファイリングが行いやすくなる利点があります。",
    "output": "So splitting up your functions has a secondary benefit, which is that it can help you in debugging and profiling."
  },
  {
    "index": "F23769",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の長さを制限することは読みやすさの向上やデバッグ時に非常に役に立ちます。",
    "output": "So limiting the size of your functions is very useful for readability and for, kind of, debugging."
  },
  {
    "index": "F23770",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、やり過ぎてしまうと3行だけの関数を100個作ってしまいかねません。",
    "output": "Of course, it's easy to go overboard and having, you know, a hundred different three-line functions."
  },
  {
    "index": "F23771",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こんな風にはならないようにしましょう。",
    "output": "So that's not really what you want to do."
  },
  {
    "index": "F23772",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "コードが異なる関数にきちんと論理的に分割されてそれぞれの関数が特定の1つのことを行うようにしましょう。",
    "output": "So you just want to make it so that the, the separation of different functions into, is logical, and that each function kind of does, does one thing in particular."
  },
  {
    "index": "F23773",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まとめると、Rでコードを書くときにはこれらのことを標準としています。",
    "output": "So those are my basic guidelines for writing code in R."
  },
  {
    "index": "F23774",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、これ以外にも多くの基準をみなさん思い付くかもしれませんが、これ以上広げると合意に到達できない標準が出てきます。",
    "output": "There are, of course, many other things that you might be able to think about."
  },
  {
    "index": "F23775",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ですから、コーディング標準についてはもう続けませんが基本的な考え方は常にテキストエディターを使い最低4桁でコードをインデントし、コードの幅を制限します。",
    "output": "And so I'm not going to talk about too much more in terms of coding standards, but the basic ideas are always use a text editor, always indent your code, I'd say at least four spaces."
  },
  {
    "index": "F23776",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数の長さを制限してプログラム中の論理的な塊に分けられているようにします。",
    "output": "And and always limit the size of your functions, so that you can, so that they're, kind of grouped into logical pieces of your program."
  },
  {
    "index": "F23777",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この4つを守るとコードがかなり読みやすくなります。",
    "output": "So with those four things, I think you'll, your, your code will be much more readable."
  },
  {
    "index": "F23778",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "自分自身にとって読みやすいだけでなく他の人にも読みやすくなってRコードを書くみんなにとって役に立つものになります。",
    "output": "It'll be readable to you, it'll be readable to others, and it'll make kind of writing R code much more useful to everyone."
  },
  {
    "index": "F23779",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rにおける日付と時刻について説明します。",
    "output": "I want to talk briefly about dates and time in R, which is a very, is a very special topic and could require a lot more time."
  },
  {
    "index": "F23780",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これはとても特別なトピックで本来ならもっと多くの時間が必要ですがまたRでの日付と時刻の表し方や数学やデータ解析の計算でどう用いるかについてはいろいろ知っておいてもらいたいことがあります。",
    "output": "And I have something I need to talk a little bit about how R represents dates and times, and how you can use them in kind of ara, arithmetic and data analysis types of computations."
  },
  {
    "index": "F23781",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rは特別なやり方で日付と時刻を表します。",
    "output": "so R has a special way to represent dates and times."
  },
  {
    "index": "F23782",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それらは特別なデータクラスで表されます。",
    "output": "And they're, they're represented using special data classes."
  },
  {
    "index": "F23783",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これまでにいろいろなデータ型を学びました。",
    "output": "So, in the past, we talked about different data types like lists."
  },
  {
    "index": "F23784",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えばリストとかcharacterのベクトルやnumericのベクトルなどです。",
    "output": "And, numeric vectors, and so."
  },
  {
    "index": "F23785",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付と時刻はこれらと同様、基本的なデータ型です。",
    "output": "This is just another type of data on top of those kinds of classes."
  },
  {
    "index": "F23786",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付はdateクラスで表されます。",
    "output": "So dates are represented by the date class."
  },
  {
    "index": "F23787",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして時刻は2つの異なったクラスで表されPOSIXctクラスとPOSIXltクラスで表されます。",
    "output": "and, times are represented by two separate classes: the POSIXct and the POSIXlt class."
  },
  {
    "index": "F23788",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付は基本的には時刻情報を持たず日付は、年、月、日の値で表されます。",
    "output": "So dates are basically. Don't have times attached to them."
  },
  {
    "index": "F23789",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付を年、月、日の形式で扱います。",
    "output": "They represent a day, in a year in a month."
  },
  {
    "index": "F23790",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、この日付は1970年の1月1日です。内部的には、日付は1970年の1月1日からの経過日数で保持されています。",
    "output": "And the, kind of, you can figure them in a kind of a year, month, day format so for example, this date is 1970, January 1st and so internally the dates are stored as the number of days since 1970 January 1st."
  },
  {
    "index": "F23791",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この詳細な情報はそれほど重要ではありませんが、知っていると実際Rがどのように日付に基づいて計算をするのか不安にならずに済みます。",
    "output": "That particular detail is not very important but in case you're wondering you don't know how they, how the, how R actually does calculations based on dates."
  },
  {
    "index": "F23792",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "時刻は内部的には、1970年1月1日からの経過秒数で保持されています。",
    "output": "Times are stored internally as the number of seconds. Since 1970, January 1st."
  },
  {
    "index": "F23793",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これもまた基本に関する詳細なことで、あまり重要ではありませんが、知っておくと役に立つかも知れません。",
    "output": "That's not very important, but it maybe useful to know, sometimes."
  },
  {
    "index": "F23794",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、実際にRでの日付の扱いを見てみましょう。まずは、文字列を引き渡します。",
    "output": "So, the way dates in R, in R work, is you can take a character screen."
  },
  {
    "index": "F23795",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように1970-01-01を渡しas.Date関数でdateに変換しますおそらくこの方法が日付の処理に慣れ始める時に最もよく使われる方法です。",
    "output": "And convert it into a date, using as.Date function. That's probably the most common way that you'll start your, begin working with dates."
  },
  {
    "index": "F23796",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このオブジェクトをprintoutすると文字列の形で出力されるのに気がつくでしょう。",
    "output": "And, you'll notice that if you print out this object."
  },
  {
    "index": "F23797",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "だがxは実際は文字列ではなく、特別なprintメソッドによって、このように出力されています。",
    "output": "Now it's not actually a character string but it will print out that way because there's a special print method."
  },
  {
    "index": "F23798",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "実際ここでxをunclassすると数値0が出力されます。",
    "output": "Now if I unclass the object here you'll see I get the number 0."
  },
  {
    "index": "F23799",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付は内部的には1970年1月1日からの経過日数で表されていましたよね。",
    "output": "Because the dates are stored internally as the number of days since 1970, January 1st and since."
  },
  {
    "index": "F23800",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "その日から1970年1月1日の経過日数は0日なのでここでは0を返しますもし1970年1月2日を入力すると、その下の行にあるように数値1として表されます。",
    "output": "If I input January 2, 1970, then you'll see that underline is represented as a number 1, because that's 1 day after 1970 January 1st."
  },
  {
    "index": "F23801",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでもし、1970年よりも前の日付を与えると、負の数値として表されます。",
    "output": "If you had a date that was before 1970 Then, they'd be represented as negative numbers."
  },
  {
    "index": "F23802",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まあ、これはちょっとした背景情報です。",
    "output": "so, but that's just for your little background."
  },
  {
    "index": "F23803",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こんな隠れた表現については心配する必要はありません。",
    "output": "You don't, you don't have to worry about the underlying representation."
  },
  {
    "index": "F23804",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "知る必要があるのは、日付がdateクラスのオブジェクトとして保持されるということだけです。",
    "output": "Ultimately, what you need to know, is that dates are stored as objects of the date class."
  },
  {
    "index": "F23805",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "一方、時刻は2つの型で表されます。",
    "output": "Times, on the other hand, are represented as two possible types."
  },
  {
    "index": "F23806",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "一つはPOSIXct、もう一つはPOSIXltです。",
    "output": "One is called POSIXct and the other POSIXlt."
  },
  {
    "index": "F23807",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "POSIXというのは計算機標準のひとつで、あるタイプの計算機で処理がどのように行われるか、データがどのように表現されるかを決めています。",
    "output": "So, POSIX is a family of computing standards for how things should be done on certain types of computers or how data should be represented and so there's a there's a family of standards for how to represent dates and times and pos and so POSIX a that's part of the POSIX standard."
  },
  {
    "index": "F23808",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "で、POSIXctクラスでは、時刻は単に非常に大きな整数で表されます。",
    "output": "Times are represented at just as very large integers."
  },
  {
    "index": "F23809",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このためこのクラスは時刻をデータフレームなどに保持するときに有用です。なぜならそれは基本的にはbiginteger型のベクトルのように扱えるからです。",
    "output": "And so it's a useful type of class if you want to say, store times in a data frame or something like because it's basically it's like a big integer vector."
  },
  {
    "index": "F23810",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "POSIXltは時刻をリストとして保持します。",
    "output": "POSIXlt stores a time as a list."
  },
  {
    "index": "F23811",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さらに、内部的には日付に関する一連の有益な情報が保持されています。",
    "output": "underlying, and so, and it stores a bunch of other useful information about a given time, for example what's the day of the week of that time, what's the the day of the year, the day of the month, or the month itself."
  },
  {
    "index": "F23812",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、曜日、通年で数えた日その月で何日目か、そして何月かなどです。",
    "output": "And there are a number of generic functions that operate on both dates and times."
  },
  {
    "index": "F23813",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "汎用的に使う日付と時刻を処理する多くの関数があります。",
    "output": "That you can use such as the, so the weekdays functions tells you what day of the week a given time is or a given day is."
  },
  {
    "index": "F23814",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そのような関数として、weekdays関数は与えられた時刻または日付が何曜日かを返します。",
    "output": "The month function tells you what month that date or time is."
  },
  {
    "index": "F23815",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そしてquaters関数は4半期を返します。",
    "output": "And the quarters functions gives you the quarter number."
  },
  {
    "index": "F23816",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えばQ1は1月から3月でQ2は4月から6月などです。",
    "output": "So for example, quarter Q1 would be January through March, Q2 would be April through June, etc."
  },
  {
    "index": "F23817",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの汎用的な関数はPOSIXctやPOSIXltやdateのクラスのオブジェクトを扱うことができます。",
    "output": "So, these generic functions operate on, on objects of class."
  },
  {
    "index": "F23818",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それから例えば、POSIXltとPOSIXctはas.POSIXltまたはas.POSIXct関数を使うことで相互に強制型変換が可能です。",
    "output": "If you want, using the as.POSIXlt or the as.POSIXct function."
  },
  {
    "index": "F23819",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、Sys.time関数はシステム内で管理している現在の時を返します。",
    "output": "so, for example the Sys.time function here, just gives you the current time."
  },
  {
    "index": "F23820",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それをprintoutすると年-月-日につづいて時間;分:秒の形式で表示されます。",
    "output": "And you can see that when it prints out, it prints out in a year month day format."
  },
  {
    "index": "F23821",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それからタイムゾーン、ここでは東部標準時間です。",
    "output": "And then the, the timezone, which is Eastern Standard Time right now."
  },
  {
    "index": "F23822",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これはas.POSIXlt関数でPOSIXltに変換することができます。",
    "output": "So you can convert this di to a POSIXlt using pa, as.POSIXlt."
  },
  {
    "index": "F23823",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、POSIXltの基本型はlistということを思い出してください。",
    "output": "And, POSIXlt remember underlying is a list."
  },
  {
    "index": "F23824",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なので、各要素の名前を見ることができます。",
    "output": "So you can look at the names of the elements."
  },
  {
    "index": "F23825",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "pをunclassすれば、sec要素があります。これは秒を表し同様に分(min)、時(hour)mdayは月の何日かを表し、この場合は23です。",
    "output": "In this list if you unclass it and you can see that there's an element called seconds that's the seconds and the minutes the hours the M days the day of the month which in this case would be 23."
  },
  {
    "index": "F23826",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "monは月を表し、ここでは1月です。そして年がきます。",
    "output": "The month is just the month your in so that's a January and then the year."
  },
  {
    "index": "F23827",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そしてwdayは曜日をydayは通年で数えた日を表し、そしてisdstはサマータイムが適用されているかを表します。",
    "output": "The year, day, which is the day of the year. And then are we on daylight savings or not?"
  },
  {
    "index": "F23828",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで秒を表すsec要素をリストからぬきだしてみると、11.86となります。",
    "output": "So, if I extract the sec, seconds element of this list, you'll see it's 11.86."
  },
  {
    "index": "F23829",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは秒を小数点以下を含めて表したもので、11秒と0.86秒ということになります。",
    "output": "And so that, and so this actually gives you the seconds in in fractional seconds."
  },
  {
    "index": "F23830",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは時間のうち、秒数を表しています。",
    "output": "So, that's, that's the number of seconds in the time."
  },
  {
    "index": "F23831",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "POSIXct形式は、Sys.time関数からも得ることができてそのPOSIXctオブジェクトをunclassするととても大きな整数が得られます。",
    "output": "The POSIXct format you can see is you can also get it from the sys.time function and you can see that if I un-class the POSIXct object."
  },
  {
    "index": "F23832",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは1970年1月1日からの経過秒数です。",
    "output": "I get this very large integer, because that's just the number of seconds since January 1, 1970."
  },
  {
    "index": "F23833",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでlistの要素を抜き出す演算子、$を適用してみるとエラーになります。なぜならPOSIXctのオブジェクトはlistではないのと、この指定の要素を持たないからです。",
    "output": "Now if I try to apply the list operator, the dollar sign to this object, you see I get an error because objects of POSIXct don't have these list elements in them."
  },
  {
    "index": "F23834",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このlistの要素を得たければ、xをas.POSIXlt関数を使いPOSIXltに変換しなければなりません。",
    "output": "You want to get those list elements out you have to convert it to POSIXlt using the as.POSIXlt function."
  },
  {
    "index": "F23835",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この場合、11.88秒です。",
    "output": "In this case it's 11.88 seconds."
  },
  {
    "index": "F23836",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最後にstrptime関数について説明します。これは文字列として書かれた日付をdateやtimeのオブジェクトに変換します。",
    "output": "So, finally there's a strptime function which converts dates which are written in character string format into date or time objects."
  },
  {
    "index": "F23837",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは2つのtimeオブジェクトに変換してみます。",
    "output": "Well, in this case it converts into two time objects."
  },
  {
    "index": "F23838",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それらはいわゆるフォーマット指定子を使います。",
    "output": "So and they use what are called format strings."
  },
  {
    "index": "F23839",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの文字列をtimeオブジェクトに変換するために、strptime関数を用います。ここでやることは文字列ベクトルとフォーマット指定子を渡すことです。",
    "output": "So if I want to convert these strings to time objects I can use the strptime function, what I do is I pass the character vector and I pass it a format string."
  },
  {
    "index": "F23840",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "%の後に文字が続いているのが分かりますか?",
    "output": "So in this case I got, and so you'll see how these present signs fall by letters."
  },
  {
    "index": "F23841",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの指定子が何を意味しているか詳しくはstrptimeのヘルプページを見てください。",
    "output": "And then you can, you can look-up what these symbols mean in the help page for strptime."
  },
  {
    "index": "F23842",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "指定子Bは文字列が月を、短縮されていない形で表していることを示し、%dは日を示します。",
    "output": "So present B means the month. In an abbreviate name, %d is the day."
  },
  {
    "index": "F23843",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": ",に続いて%Yは4桁で表した西暦を示します。",
    "output": "Then comma and then %Y is the four-digit year."
  },
  {
    "index": "F23844",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "%Hは時間、コロンに続いて%Mは分を示します。",
    "output": "Then %H is the hour, sort of like colon followed by %M which is the minute."
  },
  {
    "index": "F23845",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これが今回時刻で使ったフォーマットです。",
    "output": "And so that's the format."
  },
  {
    "index": "F23846",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "(訳注:localeが日本だと失敗する)このオブジェクトのクラスを調べると両方ともPOSIXltの型です。",
    "output": "You can see that after I call I print out X, I get these time objects that are formatted, that are printed out in the standard format."
  },
  {
    "index": "F23847",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "裏ではリストになっていてこのように表示されています。ところで、個人的な問題ですが私はこのフォーマット指定子がどうしても覚えられません。",
    "output": "When I look at the class of this object you'll see it's in a POSIXlt format and so that's the so you can look at so that's the underlying kind of list format here."
  },
  {
    "index": "F23848",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なのでいつもこれらの詳細が何だったかを、ヘルプページを見て思い出しています。",
    "output": "Now I personally can never remember what those formatting strings are the %B ,%D, %Y I can never remember what those are and so I always have to look at the help page for to remember what those details are."
  },
  {
    "index": "F23849",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて一旦date型やtime型でデータを得ると、それらをとても扱いやすい方法で処理することができます。例えば、日付を足したり、引いたり、比較、つまり、2つの日付のどちらが先か、同じかの判定などです。",
    "output": "Now, once you've got data in the date or time format, you can, you can do operations on them, which can be very handy for example, you can you can add and subtract dates, you can compare dates, you can see is, is one date less than another date or are these two dates equal to each other?"
  },
  {
    "index": "F23850",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、最後に、注意が必要なのは異なったクラスが混在した操作はできません。",
    "output": "So, but the end you need to be careful that you can't always mix different classes."
  },
  {
    "index": "F23851",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにdateオブジェクトxとPOSIXltオブジェクトyがあります。",
    "output": "So for here, I have X which is a date object, then Y which is a POSIXlt object."
  },
  {
    "index": "F23852",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つの差をとろうとすると、オブジェクト同士が同じ型ではないのでエラーとなります。",
    "output": "If I try to subtract the two, you'll, you'll get an error because they're not the same, type of object."
  },
  {
    "index": "F23853",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そこで、dateをas.POSIXlt関数でPOSIXltオブジェクトに変換します。すると2つの差をとることができて、2つの差は356.3日ということがわかります。",
    "output": "So I can, can, but if I convert the date to a POSIXlt object so I can do as.POSIXlt on it, then if I take the difference it'll say that the, the difference of 356.3 days between the two."
  },
  {
    "index": "F23854",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付と時刻に関する演算は嬉しい事に、うるう年やうるう秒やサマータイムやタイムゾーンのような面倒な事にも対応しています。",
    "output": "The nice thing about the date and time operators is that they keep track of very tricky things like leap years, leap seconds daylight savings and time zones."
  },
  {
    "index": "F23855",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "一つ目の例として、2012年この年はうるう年で2月29日があるのですが、3月1日と2月28日の差をとるとその差は2日となります。",
    "output": "So just, this first example here, you can see that so 2012, it was a leap year and so there was a February 29th."
  },
  {
    "index": "F23856",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "うるう年でない年のように1日とはなりません。",
    "output": "And so the difference between March 1st and February 28th is actually a difference of two days, not a difference of one day like it is every other year."
  },
  {
    "index": "F23857",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "一つ目は、私のタイムゾーンでの現在時刻x、それからGMTつまりグリニッジ標準時でのyを指定することもできます。",
    "output": "Similarly I could take two times one which is in my, X which is in my kind of current time and then Y which is in the time zone of GMT, so Greenwich Mean Time."
  },
  {
    "index": "F23858",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この2つの差をとるとその差は5時間のように思えますがやってみると1時間しかありません。",
    "output": "So even though it looks like it should be a 5-hour difference, it's actually only a 1 hour difference because of the change in the time zones."
  },
  {
    "index": "F23859",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "dateとtimeに関するクラスを使う利点として、これらの例外的な処理を自動的にやってくれることが挙げられます。",
    "output": "So one of the advantages of using the date time classes is that it will automatically take care of these kinds of irregularities."
  },
  {
    "index": "F23860",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "以上、Rにおける日付と時刻についてその概要を説明しました。",
    "output": "So that was just a quick sum, kind of overview of the, the dates and the time classes in R."
  },
  {
    "index": "F23861",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Rには日付と時刻を表す特別なクラスがあり日付はdateクラスで時刻はPOSIXctまたはPOSIXltクラスを使うと数値的、あるいは統計的な計算をすることができます。",
    "output": "So just to summerize there are special classes in R that will, that represents dates and times that'll allow you to do numerical and statistic calculations."
  },
  {
    "index": "F23862",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして文字列はdate、timeクラスに強制型変換できます。",
    "output": "And then character strings can be coerced to either a date or a time class, using the strptime function or as.Date.as.POSIXlt, and POSIX, as.POSIXct."
  },
  {
    "index": "F23863",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "strptime関数や、as.Date関数as.POSIXlt関数、as.POSIXct関数が使えますあと、ここで付け加えておきたいことがあります。",
    "output": "The other thing to note, that I haven't really talked about here is that a lot of the plotting functions, will recognize date time objects."
  },
  {
    "index": "F23864",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それは沢山のplot関数が日付や時刻オブジェクトをそのまま利用できるということです。",
    "output": "So when you try to plot An object that, that's a date time class."
  },
  {
    "index": "F23865",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "日付や時刻のクラスをplotしようとすると、オブジェクトのクラスを認識してX軸をそれにあわせてフォーマットするので、時間を視覚的にみることができます。",
    "output": "It will recognize that object and then format the X axis in a special way so that it will have a time element to it."
  },
  {
    "index": "F23866",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "なので時間があれば日付や時刻クラスを用いることでグラフがどのように変わるのか、試してみるのもいいかもしれません。",
    "output": "So you might want to try to experiment with that a little bit to see how plots change when you use a date time class."
  },
  {
    "index": "F23867",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ループ関数はR言語の最も強力な関数です。このおかげで探索的に色々試したいときにRがとても簡単に使えます。",
    "output": "Loop functions are some of the most powerful functions in the R language and they make it kind of very easy to use, especially in an interactive setting."
  },
  {
    "index": "F23868",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ループ関数の背景にある考えはオブジェクトやひと組のオブジェクトに対して多くの操作を行うものを非常に短い範囲でループ処理を行うということです。",
    "output": "The idea behind a loop function is you want to execute a loop over an object or a set of objects in a way that's kind of that does a lot of work in, in a very small amount of space."
  },
  {
    "index": "F23869",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすれば、コマンドラインで必要な入力量を減らせます。",
    "output": "That way, you don't have to type as much on the command line."
  },
  {
    "index": "F23870",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、ループについて学習してきたのでloopやwhileなどについてはよく理解していて、これらでも十分に使えます。",
    "output": "Of course, we already learned about loops."
  },
  {
    "index": "F23871",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "しかし、ある意味比較すると短く書けません。Rにはいくつかのループ関数があります。",
    "output": "We know about for loops and while loops, things like that, and those are all, work very well; however, they are com, less compact in a certain way."
  },
  {
    "index": "F23872",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数には、applyという文字がどこかに入っています。",
    "output": "So, there are a couple of loop functions in R and they usually have the word apply in them somewhere."
  },
  {
    "index": "F23873",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "今日お話しするのは、中でも強力な馬力を持った関数lapplyです。",
    "output": "So some of the key ones are lapply, sapply, apply, tapply, mapply and the real workhorse function that I, that I'd like to talk about here is lapply."
  },
  {
    "index": "F23874",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyの背景にある考えはオブジェクトのリストがあったら、そのリストをループしてその全要素に関数を適用するというものです。",
    "output": "And the idea behind lapply is that you have a list of objects and you want to loop over the list of objects and apply a function to every element of that list."
  },
  {
    "index": "F23875",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "とても広く適用できる考えです。",
    "output": "And so it's a very general concept."
  },
  {
    "index": "F23876",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "多くの計算を数少ない入力だけで実施できて非常に強力に使えます。",
    "output": "And it can be used very powerfully to do a lot of computations in a few, in just a little bit of typing."
  },
  {
    "index": "F23877",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "sapplyはlapplyの派生関数で結果を単純化します。",
    "output": "Sapply is a variant of lapply that simplifies the results."
  },
  {
    "index": "F23878",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "applyは配列のマージンに対して適用する関数です。",
    "output": "Apply is a function that operates over the margins of an array."
  },
  {
    "index": "F23879",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "行列の集計をしたりさらに次元の多い配列を使う時です。",
    "output": "So, this is very useful if you want to take summaries of matrices or other or, higher dimensional arrays."
  },
  {
    "index": "F23880",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "tapplyはtableapplyを短くしたものです。",
    "output": "Tapply is short for table apply."
  },
  {
    "index": "F23881",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ベクトルの一部分に対して関数を適用します。",
    "output": "And, it applies a function over subsets of a vector."
  },
  {
    "index": "F23882",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "mapplyは、lapplyの複数変数版です。",
    "output": "And mapply is a multivariate version of real of lapply."
  },
  {
    "index": "F23883",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "それぞれの関数について詳しく見ていきますが、splitという関数もありますが、これはオブジェクトには関数を適用しません。",
    "output": "There's also another function called split which doesn't actually apply anything to objects."
  },
  {
    "index": "F23884",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ですが、lapplyやsapplyと一緒に使うと役立つことも多いです。オブジェクトをさらに細かく分けることができるからです。",
    "output": "But it's often useful in conjunction with functions like lapply or sapply because it splits objects into sub-pieces."
  },
  {
    "index": "F23885",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "さて、lapplyには3つの引数があります。",
    "output": "So, lapply. Lapply takes three arguments."
  },
  {
    "index": "F23886",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目はXでリストです。",
    "output": "Basically the first argument is a list which is called X."
  },
  {
    "index": "F23887",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つ目は関数か関数名でこの関数の引数は...の部分へ引数として引き渡せます。",
    "output": "The second argument is a function or the name of a function and then there are other arguments that are, can be passed to the dot dot dot argument."
  },
  {
    "index": "F23888",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "...の引数は、実行する関数に使われてリストの各要素に対して適用されます。",
    "output": "And the dot, dot, dot argument is used to pass arguments that go with the function that you're being, that's being applied to each of the elements in the list."
  },
  {
    "index": "F23889",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "Xがリストでない場合には、可能な場合には、リストに強制型変換されます。",
    "output": "If X is not a list, then you will be coerced to a list if possible."
  },
  {
    "index": "F23890",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "オブジェクトがリストに強制型変換できない場合にはエラーになります。",
    "output": "If it's not possible to coerce the object to a list, then you will get an error."
  },
  {
    "index": "F23891",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapply関数は見てのようにとても単純です。",
    "output": "So the lapply function, you can see, is very simple."
  },
  {
    "index": "F23892",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "内部では基本的には関数を検索し、オブジェクトがリストでなければas.listを使ってリスト化しそして、lapplyの残りの部分は高速化のため、内部的にはC言語で実装されています。",
    "output": "Basically the func we look for the function if it's, if the object is not a list then it's coerced to a list using as.list and then the, the rest of the Lapply function is, is,is implemented internally in C code to make it a little bit faster."
  },
  {
    "index": "F23893",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyの考えはなんらかのリストを使います。",
    "output": "So the idea with Lapply is that you're going to take this list of things."
  },
  {
    "index": "F23894",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "前に出てきたように、リストは異なる種類のオブジェクトを保持できます。",
    "output": "And remember a list can contain any, any number of different types of objects."
  },
  {
    "index": "F23895",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この種類はベクトルでも行列でもデータフレームでもなんでもなり得ます。",
    "output": "So they could be vectors, or matrices, or data frames, or whatever it may be and you want to apply a function to each one of these elements of the list."
  },
  {
    "index": "F23896",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "適用した関数がなにかを返します。",
    "output": "And that function is going to return something."
  },
  {
    "index": "F23897",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この返されるものはもともとはリストでないかもしれません。",
    "output": "It may not be the same thing that it originally was on the list."
  },
  {
    "index": "F23898",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、入力としてベクトルを渡すとスカラーを結果として返すかもしれません。",
    "output": "So, for example, it may take as an input, as a vector, but then it may return a scalar as a result."
  },
  {
    "index": "F23899",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数はこのリストの全てのオブジェクトに対して何かを返しますが、返ってきた値は新しくリストに再度入れられます。",
    "output": "So, the function's going to return something for every single object in that list, and the return values are going to be assembled in a new list."
  },
  {
    "index": "F23900",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、そのリストをlapplyは返します。",
    "output": "And that's what lapply is going to return."
  },
  {
    "index": "F23901",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "つまり、lapplyで覚えておくべき鍵は常にリストを返すということです。",
    "output": "So lapply, it's key to remember, it always returns a list."
  },
  {
    "index": "F23902",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "入力はリストとは限りませんが、リストに強制型変換されて、出力は常にリストになります。",
    "output": "What goes in may or may not a list but it will be coerced to a list. And what comes out will always be a list."
  },
  {
    "index": "F23903",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに簡単な例をあげます。",
    "output": "So here's a simple example."
  },
  {
    "index": "F23904",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目をAと呼び、1から5の続き番号で、2つ目をBと呼び、10以上の乱数値とします。",
    "output": "I'm creating a list of two elements, the first one's called A, and it's a sequence from one to five, the second one is called B, and it's it's ten or more random variables."
  },
  {
    "index": "F23905",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、この2つのリストの要素に対してループを行いmean関数をそれぞれの要素に適用します。",
    "output": "So what I, and then, what I want to do is I want to loop over this lists of two elements and apply the mean function to each of those elements."
  },
  {
    "index": "F23906",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにあるようにlapplyを呼び、mean関数を適用してリストが返ってきます。",
    "output": "So you can see that when I call Lapply on x and I apply the mean function I get another list back, w-, and notice the list has the same names as the original list, a and b."
  },
  {
    "index": "F23907",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目の要素のmeanと2つ目の要素のmeanが返されています。",
    "output": "But now I've got the mean of the first element and the mean of the second element."
  },
  {
    "index": "F23908",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようにlapplyは動きます。",
    "output": "And so that's how lapply works."
  },
  {
    "index": "F23909",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次の例ではやや複雑なリストを使っています。",
    "output": "Here I've got a slightly more complicated list."
  },
  {
    "index": "F23910",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの要素にmeanを返してもらってます。",
    "output": "I've got four elements and I've got, I'm calling lapply to each of those elements and I'm getting the mean of each of those elements."
  },
  {
    "index": "F23911",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、4要素のリストが返ってきています。",
    "output": "So, now I've got a list with four elements."
  },
  {
    "index": "F23912",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "要素の名前は残されています。",
    "output": "The names are preserved and notice, of course, you know, each of the elements of the original list was a vector of some, of a numeric vector of some sort."
  },
  {
    "index": "F23913",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろんお気づきのように、元々のリストは何かの種類の数値のベクトルです。",
    "output": "But what I'm getting back is a vector with just a single number in it, for each element of the list."
  },
  {
    "index": "F23914",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "返されているのは、リストの各要素に対する数値が1つだけ入っているベクトルです。",
    "output": "So, here's another way I way to call, lapply."
  },
  {
    "index": "F23915",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "まず、1から4の連続した数のxを作ってrunif関数を呼び出して一様乱数変数を作っています。",
    "output": "Here I'm creating a sequence one, of x, 1 to 4, and I'm calling runif, so, which generates a uniform random variables, to, using a random number generator."
  },
  {
    "index": "F23916",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "runifの1つ目の引数は生成したい一様乱数変数の個数です。",
    "output": "Now, the first argument to runif, is the number of uniform random variables that you want to generate."
  },
  {
    "index": "F23917",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "runif(1)であれば、乱数値を1つ生成します。",
    "output": "So if I say runif 1 it's going to generate a single random variable."
  },
  {
    "index": "F23918",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "runif(2)であれば、乱数値を2つのベクトルを生成します。",
    "output": "If I say runif 2, it's going to generate a vector of two random variables."
  },
  {
    "index": "F23919",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、runif関数を1,2,3,4の連続した数に適用します。",
    "output": "So, here I'm applying l, the runif function to sequence 1, 2, 3, 4."
  },
  {
    "index": "F23920",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで返されているのはリストで1つ目の要素は一様乱数値が1つです。",
    "output": "So, what I'm going to get is a list where the first element is a single random number random uniform."
  },
  {
    "index": "F23921",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2つ目は一様乱数値が2つのベクトルです。",
    "output": "The second element's going to be a vector of two random uniforms."
  },
  {
    "index": "F23922",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "3つ目は3つのベクトルです。",
    "output": "The third element's going to be a vector of three."
  },
  {
    "index": "F23923",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "4つ目は一様乱数値が4つのベクトルです。",
    "output": "And the fourth element's going to be a vector for random uniforms."
  },
  {
    "index": "F23924",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "runifをご存知なら、生成する乱数値の数以外にも指定できる引数があるのをご存知かと思います。",
    "output": "And so ret, you'll note, if you know the runif function, you'll know that it has other arguments to it beyond the, the number of uniforms to generate."
  },
  {
    "index": "F23925",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、この引数はデフォルト値があるので、指定する必要はありません。",
    "output": "But those other arguments have default values so I don't need to specify them."
  },
  {
    "index": "F23926",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "次に、runif関数をXの各要素に対して呼ぶとして、今度はデフォルト値の0から10までの値の一様乱数値を生成したいとします。",
    "output": "Now, suppose I want to call the runif function on each one of these elements of X but I didn't want to just generate a uniform between zero and one which is default."
  },
  {
    "index": "F23927",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "今度は、runif関数にデフォルト値以外の値を引き渡す必要があります。",
    "output": "Suppose I want to generate a uniform between zero and ten so now I need to pass some arguments to the runif function which are not the default values."
  },
  {
    "index": "F23928",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、max、最大値を変える必要があります。",
    "output": "In particular I need to change the max value."
  },
  {
    "index": "F23929",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyの...の引数部分に対して引数値を引き渡すことで行います。このようにlapplyをXに対して呼び出し、runif関数を指定し、minに0、maxに10を使うことを指定します。",
    "output": "So here I'm calling lapply on X, I'm calling the run, I'm passing the runif function, but that I'm specifying that I want the min to be zero and the max to be ten."
  },
  {
    "index": "F23930",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうすると0から10までの値で作成された一様乱数のリストが返ってきます。",
    "output": "So now when I the, the list that I get out of this has random uniforms that are between zero and ten."
  },
  {
    "index": "F23931",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyとそこに使用する関数では無名関数と呼ぶものが頻繁に使用されています。",
    "output": "So lapply and the associated functions make heavy use of what, of what are called anonymous functions."
  },
  {
    "index": "F23932",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "無名関数というのは、名前が無くなんらかの名前を付けること無く必要な箇所でのみ有効な関数を生成できます。",
    "output": "Anonymous functions are functions that don't have names, so you don't assign them a name of some sort but you can kind of generate them on the fly."
  },
  {
    "index": "F23933",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "簡単な例を挙げると、ここに2つの行列があるリストを作ります。",
    "output": "So here is a just a quick example, I'm going to create a list that contains two matrices in it."
  },
  {
    "index": "F23934",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目の行列は2x2の行列で2つ目の行列は3x2の行列です。",
    "output": "The first is a mat, a two by two matrix and the second is a three by two matrix."
  },
  {
    "index": "F23935",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらの行列からそれぞれ1列目を取り出したいと考えてください。",
    "output": "And suppose I want to, I want to extract the first column from each one of these matrices."
  },
  {
    "index": "F23936",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyを呼べばいいのですが、行列の1列目を抽出する関数は関数が存在していません。",
    "output": "So what I can do is I can call lapply so, there's no function that, out there that already extracts the first column of a matrix but this is easy to do."
  },
  {
    "index": "F23937",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "新しく関数を書いて、行列の最初の列を抽出するようにします。",
    "output": "You can just write a function that just takes the first element, the first column of that matrix."
  },
  {
    "index": "F23938",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyをxに対して呼び出します。",
    "output": "So here I'm going to call lapply on x."
  },
  {
    "index": "F23939",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "関数をここに書きます。",
    "output": "And I'm, I'm going to write, I'm going to write the function right here, so I'm going to say function, and then I'm, I'm going to give it an argument, and then given that argument, I extract the first column."
  },
  {
    "index": "F23940",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここにあるようにlapplyを呼んで、Aの1列目とBの1列目が返ってきました。",
    "output": "So here, when I call Lapply with this function I get the first column from A, and the first column from B."
  },
  {
    "index": "F23941",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "名前が無いのでこれが無名関数です。",
    "output": "So this function doesn't exist except within the context of Lapply, and after the Lapply function is finished, the function basically goes away."
  },
  {
    "index": "F23942",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "lapplyや他の種類の関数でも無名関数を頻繁に使います。",
    "output": "So that's an anonymous function, because it doesn't have a name and lapply and a lot of these other types of functions use anonymous functions very heavily."
  },
  {
    "index": "F23943",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "というのも実施したい操作を行う関数がすでに存在していない場合には必要な箇所でのみ有効な関数を各必要があるからです。",
    "output": "Because unless there already exists a function that does the operation that you want to do, you're going to have to write the function kind of on the spot."
  },
  {
    "index": "F23944",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "可能な限りlapplyの結果をSIMPLIFYして返そうとするだけの関数です。",
    "output": "So sapply is just a variant of lapply and all it does is it tries to simplify the result of lapply if possible."
  },
  {
    "index": "F23945",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "思い出してくださいlapplyは常にリストを返しますがリストは不要で他の形で返して欲しい時があります。",
    "output": "So recall that lapply always returns a list but sometimes you don't want a list, sometimes you just want something different."
  },
  {
    "index": "F23946",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、結果のリストの全部の要素が長さ1のリストでもsapplyは全部の要素のベクトルを返します。",
    "output": "So for example, if the, if the result is a list where every element is a length 1 then what sapply will do is it'll return a vector of all,of all, of all those elements."
  },
  {
    "index": "F23947",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "通常の場合は、全ての要素数が1のリストは欲しくありません。",
    "output": "Usually you don't want an ele, a list where every, where every element is a single number, for example, and so sapply will simplify that into just a vector."
  },
  {
    "index": "F23948",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "sapplyは結果を結果がリストで全要素が同じ長さのベクトルの場合には1つのベクトルに変えてくれます。",
    "output": "if, if the result is a list where every element is a vector of the same length."
  },
  {
    "index": "F23949",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば、リストが返ってきて全要素が5の場合には、sapplyはこの要素をリストの行数かける5の行列にします。",
    "output": "For example, if the, if the list comes back and every element has a length five, for example."
  },
  {
    "index": "F23950",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このように変えたいことが頻繁にあるものです。",
    "output": "Then what sapply will do it'll, it'll put those elements in a matrix that's, that's five by however long the matrix, the, the list is."
  },
  {
    "index": "F23951",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もし返すオブジェクトが単純化できない場合には、そう、例えば、様々な型を返す様な場合には、lapplyは何もせずに、リストを返すだけです。",
    "output": "So that, that's often what you want to happen."
  },
  {
    "index": "F23952",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この例では、lapplyを呼んで全要素にmean関数を適用します。",
    "output": "But if it, if it can't figure out how to simplify the object when it comes back, for example, if the object has many different types of things that comes back then it's just going to then it won't do anything."
  },
  {
    "index": "F23953",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "全ての値が1つしかない長さ4のリストが返ってきます。",
    "output": "So here in this, in this example when I called lapply and I applied the mean to everything what happens is that I got a list back that's of length four and every element of the list is a single number."
  },
  {
    "index": "F23954",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これに対してこれらの値をベクトルに入れて返してくれればかなり良いものになります。",
    "output": "So it would make, it would be a lot nicer if I just got my list back that was just, I'm sorry, if I just got a vector back with all these numbers in it."
  },
  {
    "index": "F23955",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これをsapplyが行ってくれます。",
    "output": "And that's exactly what sapply does."
  },
  {
    "index": "F23956",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "xに対して、mean関数を使うsapplyでは4つの値の入ったベクトルを返します。",
    "output": "So sapply called on x with the mean function gives me a vector with four numbers in it."
  },
  {
    "index": "F23957",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、リストそのものにmeanを使うと動作しません。",
    "output": "Of course, if I called mean on the, on the list by itself, that's not really going to work because mean is not meant to be applied to lists."
  },
  {
    "index": "F23958",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "apply関数は配列のマージンに対して関数を適用するループ関数の一つです。",
    "output": "The apply function is another loop function that's used to evaluate a, a function over the margins of an array."
  },
  {
    "index": "F23959",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで適用する関数はlapplyで出てきたように無名関数であることが多いですが、例えばmeanのように定義された関数でも構いません。",
    "output": "Usu, usually, the function's going to be an anonymous one, like we showed with lapply or it could be a function that already exists like the mean, for example."
  },
  {
    "index": "F23960",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "applyは、関数を行列の行や列に適用するのに使います。",
    "output": "It's usually used to apply a function to the rows or columns of a matrix."
  },
  {
    "index": "F23961",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "もちろん、Rでは2次元の配列の行列が代表的に使われます。",
    "output": "Of course, matrices which are two dimensional arrays, are going to be the most common type of array that we're going to use in R."
  },
  {
    "index": "F23962",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "でも、3次元の配列なども使えます。",
    "output": "But you may have three dimensional arrays and such."
  },
  {
    "index": "F23963",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "applyは一般的な配列に使って行列の配列の平均を計算することができます。",
    "output": "But you, so you can use apply on general arrays such as taking the average of an array of matrices, for example."
  },
  {
    "index": "F23964",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "applyを使うのはforループを使うより良いとかforループを使うより速いと聞くでしょう。",
    "output": "One thing to note, and you may hear this out in the wild, occasionally, that apply, using apply is somehow better than ta, using a for loop or somehow it's faster than using a for loop."
  },
  {
    "index": "F23965",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ただ、一般的に言ってこれは正しくありません。",
    "output": "And that's, generally speaking, not true."
  },
  {
    "index": "F23966",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "随分前のRやS言語の古いバージョンでは正しかったですが今では全く正しくありません。",
    "output": "It was true a long time ago in older versions of the S language in R but right now, it's not true at all."
  },
  {
    "index": "F23967",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "appyのような関数を使うべき主な理由は入力が少なくなるからです。",
    "output": "The main reason you want to use a function like apply is that it involves less typing."
  },
  {
    "index": "F23968",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "入力が少ないのは常に好ましいことです。上手なプログラマは常に手間を省きます。",
    "output": "And less, less typing is always better, because good programmers are always lazy."
  },
  {
    "index": "F23969",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "applyは非常に役立ちコマンドラインでは特に役立ちます。コマンドラインではデータを操作し探索的分析をしていくので入力は最小限にしたいからです。",
    "output": "So, apply is very useful, but in particular on command line, because on the command line, when we're interacting with data, we're doing exploratory analysis, we want to do as little typing as possible because it just makes our fingers tired."
  },
  {
    "index": "F23970",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "では、applyはどう使うのでしょうか?",
    "output": "So, how does apply work?"
  },
  {
    "index": "F23971",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1つ目の引数Xは配列です。",
    "output": "So the first argument acts as an array."
  },
  {
    "index": "F23972",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "配列はベクトルで次元のあるものです。",
    "output": "An array is a vector that has dimensions attached to it."
  },
  {
    "index": "F23973",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "例えば行列は2次元配列のものです。",
    "output": "So a matrix is a two dimensional array, for example."
  },
  {
    "index": "F23974",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これは整数のベクトルでどの部分を残すのか指定します。",
    "output": "This is a vector, an integer vector that indicates which margin should be retained."
  },
  {
    "index": "F23975",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "最後の引数は重要で各マージン部分に適用する関数です。",
    "output": "And the last important argument is the function that you want to apply to each of the margins."
  },
  {
    "index": "F23976",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして...はそれ以外の引き渡す引数群で関数に引き渡したい引数群を含みます。",
    "output": "So, and then the dot dot dot argument are other arguments that you want to pass, include other arguments that you want to pass to the function."
  },
  {
    "index": "F23977",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここに行列を作っています。20行と10行のものです。",
    "output": "So here's a matrix that I'm creating, it has 20 rows and ten columns."
  },
  {
    "index": "F23978",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "この中には、生成した正規分布の乱数値があります。",
    "output": "so, in, in, in the matrix it's just normal random variables that I've generated."
  },
  {
    "index": "F23979",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "applyで行いたいのは行列を使って行列の各列のmeanを計算します。",
    "output": "So when I apply, so what I want to do is, I want to take this matrix and I want to calculate the mean of each column of the matrix."
  },
  {
    "index": "F23980",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "後で意味を説明しますがMARGIN2を使い関数の引数にはmeanを引き渡します。",
    "output": "So the way I can do this is I can apply, use the apply function on x."
  },
  {
    "index": "F23981",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "こうして得た結果は、長さ10のベクトルで行列の各列のmeanが返されています。",
    "output": "I give it the margin, two, and I'll say what that means in a second."
  },
  {
    "index": "F23982",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで実施したいのは、行列には20行と10列がありこの行列を1次元目には20行があり2次元目には10列があります。",
    "output": "And I pass the function, mean."
  },
  {
    "index": "F23983",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そこで関数meanを行列に適用して2次元目を残しておこうとしています。",
    "output": "And so what happens is, I get back a vector of length ten that has the mean of each of the columns of the matrix."
  },
  {
    "index": "F23984",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "2次元目は、列数分ありますが、1次元目の行は圧縮したいのです。",
    "output": "And so the idea is that, so the matrix has ten, sorry, it has 20 rows and ten columns, and so that you can think of the matrix as, as, and so dimension one has 20 rows and dimension two has ten columns."
  },
  {
    "index": "F23985",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、meanを各列の全行に適用して配列の行を制限することで返ってくるときには1次元分が消去されています。",
    "output": "So, when you apply the function, mean, over the matrix, well, the idea is that you want to keep the second dimension, which is the number of columns, and you want to collapse the first dimension, which is the rows."
  },
  {
    "index": "F23986",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、1次元目が消去されています。",
    "output": "It's really the first dimension that's been eliminated."
  },
  {
    "index": "F23987",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "そして、この数値群が返されこのベクトルには各列のmeanが返されています。",
    "output": "And so you get this number which this vector which has each of the means for each of the columns."
  },
  {
    "index": "F23988",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "同じように、配列の行のmeanを返すこともできます。",
    "output": "similarly, you can take the means of all the rows of the array."
  },
  {
    "index": "F23989",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "このようにxに対してapplyを使いますMARGINで次元の1を指定します。",
    "output": "And I can, I can call the apply function on x."
  },
  {
    "index": "F23990",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1は全ての行を残して全ての列を圧縮するという意味です。",
    "output": "I give it the dimens, the margin, one, which means preserve all the rows, but collapse all the columns."
  },
  {
    "index": "F23991",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、平均(mean)ではなく各行の合計(sum)を計算します。",
    "output": "And then I, I, here I'm calculating the sum of each the rows, instead of the mean."
  },
  {
    "index": "F23992",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "1を引き渡していますが、行を残して列を圧縮するためです。",
    "output": "So the, so, I cast the one because it says I want to, I, because of what I mean is I want to preserve the rows and collapse the columns."
  },
  {
    "index": "F23993",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここでは、20のベクトルが返ってきました。20行あるからです。",
    "output": "So here, I got a vector of 20, because there's 20 rows."
  },
  {
    "index": "F23994",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "各行に対して、その行の合計を計算しました。",
    "output": "And each, and inside each and for each row, I calculate the sum of that row."
  },
  {
    "index": "F23995",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ここで行ったような行や列の合計や平均などの単純な計算の場合には特別な関数があります。これらはこの処理を高速に行えるように高度に最適化されています。",
    "output": "Now for, for simple operations, like calculating the sum, or calculating the mean of a column or a ma, or, or, of a row there are special functions that are highly optimized to do this very quickly."
  },
  {
    "index": "F23996",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "行の合計や行の平均を計算するのにはrowSums関数やrowMeans関数があります。",
    "output": "So for calculating the row sums and row means, there's the functions rowSums and rowMeans."
  },
  {
    "index": "F23997",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "同じようにcolSumsやcolMeansがあり列に対して同じことを行います。",
    "output": "And similarly, there's colSums and colMeans, which do the same things for the columns."
  },
  {
    "index": "F23998",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "これらはapply関数を行うのと同等のものですが、applyを使うよりもかなり高速に処理します。",
    "output": "These are equivalent to using the apply function, but they're very much faster than using the apply, because they're optimized to specifically to do those operations."
  },
  {
    "index": "F23999",
    "instruction": "次の日本語を英語に翻訳してください。",
    "input": "ですから、行列の行や列に対して合計や平均を計算するならこの関数を使いましょう。",
    "output": "So if you want to calculate the sum or the mean of a, of a column or row of a matrix, use those functions instead."
  }
]