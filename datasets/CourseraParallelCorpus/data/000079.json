[
  {
    "index": "F25000",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This feature isn't quite so relevant today, where most people generally go to R directly.",
    "output": "セマンティックス(意味論)も表面上はRに似ていますが,実際にはかなり違います。"
  },
  {
    "index": "F25001",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The semantics are superficially similar to S, in that it looks like it's S, but in reality are quite different, but we'll talk more about this in the future lecture.",
    "output": "これについては後ほどの講義でもう少しお話しましょう。"
  },
  {
    "index": "F25002",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One of the main benefits of R is that it runs on any standard computing platform or operating system.",
    "output": "Rの主な利点として,標準的なプラットフォーム,つまりオペレーティングシステム上ならどれでも,動作させられることです。"
  },
  {
    "index": "F25003",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Mac, Windows, Linux whatever you want even on your PlayStation 3 and there are frequent releases, so there are annual major releases and often there are bug fixes releases in between.",
    "output": "Mac,Windows,,Linux,どれでも,何ならプレイステーション3でも使えます。そして頻繁にリリースがあることですね,一年ごとの主要なリリースと,その間にバグフィックスがあります。"
  },
  {
    "index": "F25004",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There is a very active development going on and so things are happening.",
    "output": "非常に活発に開発が進められており,様々なことが実現されています。"
  },
  {
    "index": "F25005",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The software the core software of R is actually quite lean.",
    "output": "Rのコアとなるソフトウェアは実際,非常に簡素なものです。"
  },
  {
    "index": "F25006",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Its functionality is divided into modular packages, so you don't have to download and install a massive piece of software.",
    "output": "その機能はモジュール化されたパッケージに分けられており,巨大なソフトウェアをまるごとダウンロードする必要はありません。"
  },
  {
    "index": "F25007",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Whereas you can download a very small piece of fundamental core, kind of functions, and then add things on as you need them.",
    "output": "そうではなく,非常に小さい基本コアと,付加機能をダウンロードし,必要に応じて足していけばよいのです。"
  },
  {
    "index": "F25008",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's graphics capabilities are very sophisticated and give the user a lot of control over how graphics are, are, are created, and in my opinion are better than most stat packages.",
    "output": "グラフィックスの機能は非常に洗練されており,グラフィックスの作り方に関する多くの管理機能がユーザーに与えられています。私の考えでは,殆どの統計パッケージよりも良くできています。"
  },
  {
    "index": "F25009",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It might even be the best for the mo- kind of a general purpose statistical package.",
    "output": "汎用の統計パッケージとしては,最高のものと言ってもよいでしょう。"
  },
  {
    "index": "F25010",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's very useful for interactive work as I said before, but it contains this powerful programming language.",
    "output": "先ほど言ったようにインタラクティブな作業のために,非常に有用ですが,この強力なプログラミング言語も含んでおり,新しいツールの開発が可能です。"
  },
  {
    "index": "F25011",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And fundamentally, actually, for a language like this, is that there is a very active and vibrant user community.",
    "output": "そして基本的に,実際,このような言語には,非常に活発で活気に満ちたユーザーのコミュニティが存在します。"
  },
  {
    "index": "F25012",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the mailing lists at R-help and R-devel are very active.",
    "output": "R-helpandR-develといったメーリングリストは非常に活発です。"
  },
  {
    "index": "F25013",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's many, posts per day, and there's also a series on stack overflow where questions can be answered.",
    "output": "毎日多くの投稿があり,質問に皆で回答する場であるスタック・オーバーフローにもシリーズがあります。"
  },
  {
    "index": "F25014",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the user community is, is one of the most interesting aspects of R.",
    "output": "ユーザーのコミュニティはRの最も興味深い側面です。"
  },
  {
    "index": "F25015",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's where all the R packages come from and it creates a lot of kind of interesting features.",
    "output": "そこで,全てのRパッケージが生まれ,多くの興味深い機能が創り出されるのです。"
  },
  {
    "index": "F25016",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course one of the, probably the most critical feature of R is that it's free.",
    "output": "もちろん,1つの,というか最も重要なRの特徴は,「フリー」だということです。"
  },
  {
    "index": "F25017",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I mean by that, is that it doesn't cost any money so you can download the entire software from from the web.",
    "output": "「無料」のビール,という意味でも,言論の「自由」,という意味でも,何が言いたいかというと,全くお金が要らず,ウェブからソフトウェアを丸ごとダウンロードできます。"
  },
  {
    "index": "F25018",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And also it's free software, so I'm going to divert for a second to talk a little bit about free software.",
    "output": "そしてそれはフリーソフトウェアということです。ここで,フリーソフトウェアについて少し説明します。"
  },
  {
    "index": "F25019",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, with free software there are four basic principles, right?",
    "output": "フリーソフトウェアには,4つの基本原理があります。"
  },
  {
    "index": "F25020",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You have four basic freedoms that you have.",
    "output": "皆さんには,4つの自由があるということです。"
  },
  {
    "index": "F25021",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The freedom zero is the freedom to run the program for any purpose, so you don't need.",
    "output": "第0の自由というのは,いかなる目的でプログラムを動作させてもよい,ということです。"
  },
  {
    "index": "F25022",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's no restrictions on how you can run the program or when you can run the program or what you can or cannot do with it.",
    "output": "どんな風にプログラムを動作させても,いつ動作させても,それで何をしてもしなくても,制限はありません。"
  },
  {
    "index": "F25023",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Freedom one is the freedom to study how the program works and adapt it to your needs.",
    "output": "第1の自由は,そのプログラムの仕組みを勉強して,皆さんの必要に合わせてもよいということです。"
  },
  {
    "index": "F25024",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this happens almost every day which is that you can look at the source code for R itself.",
    "output": "これは毎日のように起こることですが,R自体のソースコードを見ることができますし,そうしたければ,変更することもできます。"
  },
  {
    "index": "F25025",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can sell changes to it if you want.",
    "output": "それを改良したり,よっと良いバージョンを作ったり,望めば,変更点を売ることもできます。"
  },
  {
    "index": "F25026",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can do, you can modify the program any way you want and adapt it to your needs.",
    "output": "プログラムに望むように変更を加え,皆さんの必要性に合わせられます。"
  },
  {
    "index": "F25027",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, so you can look at the source code for this to get freedom one.",
    "output": "この第1の自由を得るために,ソースコードを見ることができるのです。"
  },
  {
    "index": "F25028",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Freedom two is that you have the freedom to redistribute copies so you can help your neighbor and so the idea is that you can give copies to other people.",
    "output": "第2の自由というのは,隣人を助けるためにコピーを再配布する自由がある,ということです。"
  },
  {
    "index": "F25029",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can do whatever you want with it.",
    "output": "誰かにコピーをあげてもいいですし,コピーを売ってもかまいません。"
  },
  {
    "index": "F25030",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Lastly you have the freedom to improve the program and release your improvements to the public so the whole community benefits, so this is freedom three.",
    "output": "最後に,プログラムを改良したり,改良点を公に公開し,コミュニティ全体の利益とできる,という自由です。"
  },
  {
    "index": "F25031",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The idea is that when people make changes to the program they can release them to the public so that everyone gets those changes.",
    "output": "つまり,誰かがプログラムを変更したら,それを公に公開し,誰でもその変更点を手に入れるようにできる,ということです。"
  },
  {
    "index": "F25032",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so these basic freedoms are outlined by the free software foundation and you can see more about it at their website there.",
    "output": "これらの基本的な自由はフリーソフトウェア財団によって概説されていて,この彼らのウェブサイトで,もっと詳しいことが分ります。"
  },
  {
    "index": "F25033",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, there a couple drawbacks of R.",
    "output": "Rにはいくつか弱点もあります。"
  },
  {
    "index": "F25034",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I won't go through all of them and probably other people have many other complaints.",
    "output": "ここで全てをお話ししようとは思いませんし,またおそらく人の数だけ苦情があることでしょう。"
  },
  {
    "index": "F25035",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But there's some basic drawbacks which are one that it's essentially based on 40 year old technology.",
    "output": "しかしながら,基本的な弱点として,40年も前の技術に基づいたものである,ということがあります。"
  },
  {
    "index": "F25036",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the original S language developed in the 70s was based on a couple of principles, and the basic ideas have not changed too much.",
    "output": "もともとのS言語は70年代に開発されたもので,いくつかの原則に基づいていましたが,基本的な考え方はそれから大きく変わっていません。"
  },
  {
    "index": "F25037",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Since then and so as, one of the results of that for example is that there is little built in support for dynamic or 3D graphics.",
    "output": "その結果,例えば,動的なあるいは3Dのグラフィックスをサポートするための内部に実装された機能は殆どありません。"
  },
  {
    "index": "F25038",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But things have improved, greatly and not on that front since the old days and there's a lot of interesting tools now packages for doing dynamic or 3D graphics.",
    "output": "事情は大きく改善されており,今はそういうことはなく,動的あるいは3Dのグラフィックスを行うための面白いツールのパッケージがたくさんあります。"
  },
  {
    "index": "F25039",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another drawback of R that I, I hear a lot about is that the functionality is based on consumer demand and basically user contributions.",
    "output": "Rのもう一つの弱点として,私がよく聞くのは,機能性が消費者の要求によるもので,基本的にユーザーの提供によるものであることです。"
  },
  {
    "index": "F25040",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if no one feels like implementing your favorite message then that's your job to do.",
    "output": "ですので,誰も皆さんのお気に入りの方法を提供していないのであれば,それはあなたの仕事になります。"
  },
  {
    "index": "F25041",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you can't, there is no corporation, there's no company that you can complain to.",
    "output": "そして,会社がありません,苦情を言いに行く会社がないのです。"
  },
  {
    "index": "F25042",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's no helpline that you can call to say that, to demand a specific implementation or a specific feature.",
    "output": "特定の実装や特定の機能を要求するための相談窓口もありません。"
  },
  {
    "index": "F25043",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If the feature's not there, then you have to build it.",
    "output": "そういう機能が無いのなら,皆さんが作らなければなりません。"
  },
  {
    "index": "F25044",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Or at least you can pay someone to build it.",
    "output": "あるいは,少なくとも誰かにお金を払って作ってもらわなくては。"
  },
  {
    "index": "F25045",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another drawback which is a little bit more technical is that the objects that you manipulate in R have to be stored in the physical memory of the computer.",
    "output": "他に幾分技術的な弱点ですが,Rで扱おうとする対象は,コンピュータの物理メモリに記憶されている必要があります。"
  },
  {
    "index": "F25046",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so if the object is bigger, than the physical memory of the computer, then you can't load it into memory.",
    "output": "つまり,対象がコンピュータの物理メモリより大きければ,メモリに読み込むことができません。"
  },
  {
    "index": "F25047",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then therefore you can't do something in R with that object.",
    "output": "その場合,Rでその対象を使って何かする,ということができません。"
  },
  {
    "index": "F25048",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there have been a lot of advancements to deal with this too.",
    "output": "これを取り扱うための進歩もまた,たくさんありました。"
  },
  {
    "index": "F25049",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Both in the R language and also just in the hardware side there are computers now that you can buy with tremendous amounts of memory.",
    "output": "R言語にもありましたし,単純にハードウェアの方にも。今は大量のメモリを持ったコンピュータが買えますから。"
  },
  {
    "index": "F25050",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so some of those problems had been resolved just by, kind of, improvements in technology.",
    "output": "そういったわけで,これらの問題のいくつかは技術の進歩によって解決されました。"
  },
  {
    "index": "F25051",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But nevertheless, as we enter the, kind of, big data era where you have larger and larger data sets, the model of loading objects into physical memory can be a limitation.",
    "output": "しかしながらそれでも,ビッグデータ時代に突入したため,ますます大きなデータセット,これが学習対象のモデルとなるのですが,を持つこととなり,物理メモリが制限となりえるでしょう。"
  },
  {
    "index": "F25052",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And finally, I'll just say that R is not ideal for all possible situations.",
    "output": "そして最後に,Rは万能ではない,ということを言っておきましょう。"
  },
  {
    "index": "F25053",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so many people, I think, in ways is a good thing they have high expectations for R.",
    "output": "多くの人たちは,私が思うに,Rに高い期待を寄せているでしょう。"
  },
  {
    "index": "F25054",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They expect it to be able to do everything.",
    "output": "それを使えば何でもできると。"
  },
  {
    "index": "F25055",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But it doesn't do everything and so you should go into this knowing that fact.",
    "output": "しかし何もかもができるという訳ではありません。"
  },
  {
    "index": "F25056",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the basic R system is divided into two, what you can think as two conceptual parts.",
    "output": "Rの基本システムは2つの部分に分けられます。"
  },
  {
    "index": "F25057",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There is the base R system that you download from a CRAN which is the comprehensive R archive network.",
    "output": "RのベースシステムはCRAN,つまりComprehensiveRArchiveNetworkからダウンロードできます。"
  },
  {
    "index": "F25058",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's kind of the go to place for all things R.",
    "output": "それはRの全てのもののために訪れるサイトです。"
  },
  {
    "index": "F25059",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then there's kind of everything else.",
    "output": "それから,他のもの全てです。"
  },
  {
    "index": "F25060",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the base system contains what's called the base package which has all the kind of low level fundamental functions that you need to run the R system.",
    "output": "ベースシステムは,全ての種類の低レベルの基本的関数を持つベースパッケージを含みます。"
  },
  {
    "index": "F25061",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then there are other packages contained in the base system which includes for example util stats, data sets, graphics and a bunch of other packages that are kind of fundamental packages that more or less everyone might use.",
    "output": "utils,stats,detasets,graphicsなど誰もが大抵使うであろう基本パッケージである,多くのパッケージが含まれています。"
  },
  {
    "index": "F25062",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then there are a series of recommended packages, so, boot for bootstrap, class for classification, cluster, codetools, foreign, and a variety of other packages.",
    "output": "ブートストラップのためのbootや,クラス分けのためのclass,cluster,codetools,foreignや他の多様なパッケージです。"
  },
  {
    "index": "F25063",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These are the commonly used packages, they may not be critical packages, but they're commonly used by many people.",
    "output": "これらは一般的に使用されるパッケージで,必須ではないかもしれませんが,多くの人々に使用されます。"
  },
  {
    "index": "F25064",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So all of these packages come with this, the base R system that you download from CRAN.",
    "output": "これらの全てのパッケージがこの,CRANからダウンロードしたRのベースシステムに含まれます。"
  },
  {
    "index": "F25065",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, but there's much more than this obviously, and on the, on CRAN, there are, right now there are about 4,000 packages that have been developed by users and programmers all around the world.",
    "output": "それで,これよりもずっと多くのものが,現在,明らかに,CRAN上にあります。4000もの,世界中のユーザーやプログラマによって開発されたパッケージが存在します。"
  },
  {
    "index": "F25066",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These packages are user contributed.",
    "output": "これらのパッケージはユーザーによって提供されたものです。"
  },
  {
    "index": "F25067",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They're not controlled by the R core.",
    "output": "Rコアによって管理されているものではありません。"
  },
  {
    "index": "F25068",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And they are uploaded to CRAN on a everyday on a periodic basis.",
    "output": "CRANは,CRANに採録されるために満たさなくてはならない多くの制限や基準を有しています。"
  },
  {
    "index": "F25069",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the i-, and CRAN has a few, has a number of restrictions and standards that have to be met in order to get a package on to CRAN.",
    "output": "ですので,CRANの良い所の一つとして,そこからダウンロードされるパッケージは,あるレベルの品質が保たれていなくてはならない,ということがあります。"
  },
  {
    "index": "F25070",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, one of the nice things about CRAN is that there, that the packages that you download have to meet a certain level of quality.",
    "output": "例えば,あるパッケージに入っている全ての関数についての文書が必要であるとか,いくらかの数のテストをパスしていなければならないであるとか。"
  },
  {
    "index": "F25071",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so CRAN has, has a lot of different packages written by users and the number is really increasing everyday.",
    "output": "CRANはユーザーによって書かれた多くの異なるパッケージを有しており,数は毎日増えています。"
  },
  {
    "index": "F25072",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's very exciting to see all these packages on CRAN and there, and to see new ones come up everyday.",
    "output": "CRAN上にある全てのパッケージや,毎日新たに登録されるものを見ることは実に刺激的です。"
  },
  {
    "index": "F25073",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are also packages associated with the Bioconductor project, which is a packaged, which is a project designed to implement R software for, kind of, genomic and, kind of, bio, biological data analysis.",
    "output": "パッケージの中にはBioconductorプロジェクト,これはゲノム研究や生物学研究のためのデータ解析用のRソフトウェアを実装するプロジェクトですが,これに登録されているものもあります。"
  },
  {
    "index": "F25074",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, of course, there are also all their packages made that people make available on their personal websites.",
    "output": "もちろんそのほかに,開発者が個人のウェブサイトで利用可能にしているパッケージもあります。"
  },
  {
    "index": "F25075",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there's really no reliable way to keep track of how many packages are available in this fashion.",
    "output": "実際のところ,こういった形で利用可能とされているパッケージの数を知る,信頼できる方法はありません。"
  },
  {
    "index": "F25076",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, there's really thousands of packages out there written by people.",
    "output": "実際,人々によって書かれた数千ものパッケージがありますので,皆さんはそれらを発見し,データ解析に使用できます。"
  },
  {
    "index": "F25077",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are a couple of documents that you can find on the R website.",
    "output": "Rのウェブサイトにはいくらかの文書があります。"
  },
  {
    "index": "F25078",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "As you're learning to use R, you then want to flip through some of these.",
    "output": "Rの使い方を学ぶにつれ,これらのものを読みたくなるでしょう。"
  },
  {
    "index": "F25079",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One is an introduction to R, which is a relatively long PDF document now that kind of goes through the basics of how to use R, how to use the language.",
    "output": "ひとつは「AnintroductiontoR」というもので,今では少々長いPDF文書なのですが,基本的なRの使い方や言語についてひと通り述べたものです。"
  },
  {
    "index": "F25080",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's the Writing R Extensions manual which is really only useful to read if you're thinking of developing R packages.",
    "output": "「WritingRExtensions」という文書がありますが,これはRのメインシステムへの拡張である,Rのパッケージを開発しようとする人にだけ役立ちます。"
  },
  {
    "index": "F25081",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The R data import and export manual, which is useful for getting R's data into R and the various different ways.",
    "output": "「RdataImport/Export」は,色々な方法でRへデータを取り込んだりするために有用です。"
  },
  {
    "index": "F25082",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The R installation administration manual is, is most useful if you want to build R from the source code, and I'll talk about that in another video.",
    "output": "「Rinstallationadministrationmanual」はソースコードからRをビルドしたいときに有用で,これについては別のビデオでお話しします。"
  },
  {
    "index": "F25083",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then the R internals manual. Is is a really technical document for how R is designed.",
    "output": "それから,「Rinternalsmanual」はRがどのように設計されているかについての,非常に技術的な文書です。"
  },
  {
    "index": "F25084",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "How R is implemented at a very low level.",
    "output": "Rが非常に低レベルの部分でどのように実装されているかについての。"
  },
  {
    "index": "F25085",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it's not really for the faint of heart.",
    "output": "実際,臆病者は近づかない方がいいでしょう。"
  },
  {
    "index": "F25086",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But if you're that kind of person, who wants to know how R works at a very, very low level, this is the document for you.",
    "output": "しかし,もし皆さんが,Rの動作を非常に非常に低レベルで理解したい,というのであれば,これは皆さんのための文書です。"
  },
  {
    "index": "F25087",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I'm just going to end over here with a couple of texts that are kind of standard or kind of classic texts in this area.",
    "output": "それでは,この領域での標準的,あるいは古典的な教科書をいくつか紹介して,終わることにしましょう。"
  },
  {
    "index": "F25088",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course the books by John Chambers offers data analysis and programming the data are both published by Springer.",
    "output": "もちろんジョン・チェンバースによる「Sと統計モデル」と「ProgrammingwithData」はSpringer社から出版されています。"
  },
  {
    "index": "F25089",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then there's two books by Bill Venables and Brian Ripley.",
    "output": "それからビル・ヴェナブルズとブライアン・リプリーによる2冊の本。"
  },
  {
    "index": "F25090",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One is called Modern Applied Statistics with S, and another one's called S Programing.",
    "output": "1つは「S-PLUSによる統計解析」,もう1つは,「SPrograming」と呼ばれる本です。"
  },
  {
    "index": "F25091",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Although they have the, the, they talk about S in the title, these books are all, are both very relevant for R programming too.",
    "output": "これらの本のタイトルにはSと書かれていますが,どちらもRプログラミングについても実に妥当なものです。"
  },
  {
    "index": "F25092",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That's also quite useful, for R programmers too.",
    "output": "これもまた,Rのプログラマにも非常に有用です。"
  },
  {
    "index": "F25093",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And finally Paul Murrell who designed the R graphic system has written a book called R Graphics and actually it's currently in its second edition right now.",
    "output": "そして最後に,Rのグラフィックシステムを設計したポール・マレルが書いた「Rグラフィックス」があり,現在第2版がでています。"
  },
  {
    "index": "F25094",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, a couple other resources, one is that Springer, the publisher Springer has a series of books called Use R, which is, which is a, a lot of very, kind of relatively short books.",
    "output": "1つはSpringer社ですが,出版社であるSpringer社は「UseR」と呼ばれるシリーズの本を出版しており,これは比較的短い,多くの本から成り立っています。"
  },
  {
    "index": "F25095",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "How to use R for different types of topics, different application areas.",
    "output": "Rを多様なトピックやアプリケーション分野でどう使うかということについての。"
  },
  {
    "index": "F25096",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is quite a nice series of books that you may be interested in.",
    "output": "これは実によくできたシリーズですので,皆さんも興味をもつ持つかもしれません。"
  },
  {
    "index": "F25097",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there may be a book written for you particular area of application.",
    "output": "そして,皆さんの特定の応用分野のための本が見つかるかもしれません。"
  },
  {
    "index": "F25098",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there's a longer list of books on the R website.",
    "output": "Rのウェブサイトにはもっと多くの本のリストが載っています。"
  },
  {
    "index": "F25099",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, that was a brief overview of R, and the history of how it kind of came to be.",
    "output": "さて,以上がRとその成り立ちの歴史についての簡単な紹介でした。"
  },
  {
    "index": "F25100",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, starting with the next video, I'll start talking about the details of the R programming language, and how we can use it to analyze data.",
    "output": "では,次のビデオから,プログラミング言語Rの詳細と,どうやってデータ分析に使うか,についてお話していきます。"
  },
  {
    "index": "F25101",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So once we start typing things into the R prompt, they we're going to be start, we're going to start coding and doing calculation.",
    "output": "Rのプロンプト画面に入力を始めるとコーディングをして計算を開始することができます。"
  },
  {
    "index": "F25102",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the things that we type into the R prompt are called expressions.",
    "output": "Rプロンプトに入力するのはexpressionと呼ばれます。"
  },
  {
    "index": "F25103",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, the symbol, which looks like a left-hand arrow and is actually the less than symbol, followed by a hyphen this is what's called the assignment operator.",
    "output": "左矢印に似ていますが実際には大なり不等号とハイフンで、代入の演算子です。"
  },
  {
    "index": "F25104",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The assignment operator is what assigns a value to a symbol.",
    "output": "代入演算子はシンボルに値を代入します。"
  },
  {
    "index": "F25105",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, in this first expression here the symbol that I'm creating is called x, and the value that I'm assigning it is call, is 1.",
    "output": "例えば、この最初の例ではxというシンボルを作り値1を代入しています。"
  },
  {
    "index": "F25106",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So x is 1, is a, is an R expression.",
    "output": "これは、xが1というRexpressionの1つです。"
  },
  {
    "index": "F25107",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the next expression I'm going to print that value so print is a function.",
    "output": "printは関数で、この関数にシンボルxを渡してxをprintすることで値1を出力しています。"
  },
  {
    "index": "F25108",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'm passing it the symbol x so that when I print out x I get its value which, in this case is 1.",
    "output": "xについて考えておくべきことはxはRオブジェクトで実数のオブジェクトで要素が1つということです。"
  },
  {
    "index": "F25109",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So another thing to think about x is also considered a, is an R object that is a numeric object that has one element.",
    "output": "そして実数のベクトルです。1つ目の要素は数値1です。"
  },
  {
    "index": "F25110",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's really a numeric vector where the first element is the number one.",
    "output": "そして3つ目のexpressionではただxとだけ入力しているのが分かるでしょう。"
  },
  {
    "index": "F25111",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In the third expression here, you notice, I'm just typing X at the prompt and, and, and when you hit enter what happens is it prints out the value of X.",
    "output": "ここでエンターを押すと、xの値をprintします。"
  },
  {
    "index": "F25112",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is called, this is another way to print out an object without explicitly calling the print function.",
    "output": "これもまたprint関数を直接呼ばずにオブジェクトの値をprintする方法です。"
  },
  {
    "index": "F25113",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in the, in this expression over here, I'm creating a new symbol called message, MS, MSG.",
    "output": "続いてこのexpressionではmsgという新しいシンボルを作り文字列のhelloを代入しています。"
  },
  {
    "index": "F25114",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the first element of this character vector is the string hello.",
    "output": "これは文字のベクトルでこのベクトルの1つ目の要素は文字列helloです。"
  },
  {
    "index": "F25115",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I could add other elements to this vector if I wanted to, but they would all have to be character.",
    "output": "このベクトルに要素を追加することもできますが追加要素は文字である必要があります。"
  },
  {
    "index": "F25116",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the grammar of the language determines whether an expression is syntactically correct or not.",
    "output": "言語の文法によってexpressionが正しいか完結しているかが決まります。"
  },
  {
    "index": "F25117",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example by this type x followed by the assignment operator and I don't have anything else, that's not a, that's not a complete expression and so when I hit Enter nothing will happen because it's waiting for the expression to be completed.",
    "output": "例えば、xと代入演算子だけをタイプしてあとに何も入力しないとこれは完全なexpressionでないのでエンターを押しても何も起こりません。"
  },
  {
    "index": "F25118",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The other thing I've got here is this hash symbol here.",
    "output": "もう1つ、ここにあるのはシャープ(ハッシュ)記号です。"
  },
  {
    "index": "F25119",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this hash symbol here it indicates that everything to the right of that is a comment.",
    "output": "このハッシュ記号はハッシュより右側が全てコメントだと示します。"
  },
  {
    "index": "F25120",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the, the, the, the, the R engine will ignore anything that happens to the right of that symbol.",
    "output": "Rのエンジンはこの記号より右側にあるものはすべて無視します。"
  },
  {
    "index": "F25121",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can put things like comments or notes to yourself in code and R will just ignore those comments.",
    "output": "コード中に、コメントや自分用の注釈を入れておけます。"
  },
  {
    "index": "F25122",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So once you've typed in a syntactically valid and complete expression at the prompt when you hit enter what happens is that the expression is evaluated by the R engine. And the result of that evaluation expression is then returned.",
    "output": "プロンプトに構文的に正しく完結しているようなexpressionを入れてエンターを押すとRエンジンがexpressionを評価処理して処理の結果が返されます。"
  },
  {
    "index": "F25123",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, so sometimes when you evaluate an expression, nothing happens because there's nothing to really show.",
    "output": "expressionを評価しても何も表示するものがないときは何も起こらないこともあります。"
  },
  {
    "index": "F25124",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's a numeric vector and the first element's going to be five.",
    "output": "ここの1つ目のexpressionはxに5を代入し実数ベクトルのオブジェクトxを作り、1つ目の要素を5にします。"
  },
  {
    "index": "F25125",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now when I hit enter nothing happens because there's really nothing to show.",
    "output": "エンターを押しても何も起こりませんが何も表示するものがないからです。"
  },
  {
    "index": "F25126",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so but now when I hit x and I hit enter it prints out the value five, so it prints out the value of x.",
    "output": "ここでxと入力してエンターを押すと値5を出力してxの値をprintしています。"
  },
  {
    "index": "F25127",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I hit x, when, when I type in x and I hit enter, that, and it prints out five, that's called autoprinting, and so when you just type an object's name and hit enter.",
    "output": "xを押して、エンターを押すと5を出力するのはauto-printと呼ばれます。"
  },
  {
    "index": "F25128",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "R will by default autoprint the value of that object.",
    "output": "オブジェクトの名前を入力してエンターを押すとRはデフォルトでオブジェクトの値をautoprintします。"
  },
  {
    "index": "F25129",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is the same as calling the print function on that object which will just print out the value of that object.",
    "output": "これは、print関数をオブジェクトに対して呼ぶのと同じです。オブジェクトの値を出力します。"
  },
  {
    "index": "F25130",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can explicitly print an object or you can auto print an object.",
    "output": "つまり、明示的にオブジェクトをprintすることもautoprintすることもできます。"
  },
  {
    "index": "F25131",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is, this sounds a little complicated but it's really just the natural thing to do and it is what most people would expect.",
    "output": "ちょっと複雑に聞こえるかもしれませんが実は自然なことでほとんどの人が想像する挙動です。"
  },
  {
    "index": "F25132",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You'll notice that when I print out the object x, there's a little one in brackets here.",
    "output": "オブジェクトxを出力したところに角カッコがあるのに気づいてこれは何だろうと思ったかもしれません。"
  },
  {
    "index": "F25133",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you might be wondering what that is.",
    "output": "より長いベクトルを見るともっと分かってもらえると思います。"
  },
  {
    "index": "F25134",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, all that indicates is that, it, it's telling you what element of the vector is being shown.",
    "output": "繰り返しになりますが、ここに見えている数値5はベクトルの1つ目の要素です。"
  },
  {
    "index": "F25135",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And this will make more sense when we have longer vectors to look at.",
    "output": "ここではオブジェクトxを1から20の連番で作っています。"
  },
  {
    "index": "F25136",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for printing you'll see that here I'm creating an x an object called x and it's the sequence one to 20, so the colon operator here that I've used is what's used to create a sequence.",
    "output": "ここでのコロンは連番を作るのに使っています。"
  },
  {
    "index": "F25137",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, when I say one colon 20, that creates a sequence of one, two, three, all the way up to 20.",
    "output": "1:20と指定すると1,2,3に続いて20までの連番を作ります。"
  },
  {
    "index": "F25138",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now when I autoprint x in this case, you'll see I've got a long, much longer vector here. In this case, it's an integer vector.",
    "output": "xをautoprintするとこの場合には、これまでよりも長い整数のベクトルが返されています。"
  },
  {
    "index": "F25139",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you'll see that the first line of the printout it has a one next to it, because that's the first element.",
    "output": "見て分かるように、1行目の出力の左には最初の要素を表すための1が出力されていて2行目の出力には角カッコの中に16と出力されています。"
  },
  {
    "index": "F25140",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then the, the second line has a 16 in brackets because that's, the first element of that line is the 16th element of this vector.",
    "output": "これは2行目の最初の要素がベクトルの16個目の要素だからです。"
  },
  {
    "index": "F25141",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's all kind of straightforward but just that's how the printout works",
    "output": "見ての通り明白かもしれませんがこんな風に出力を使います。"
  },
  {
    "index": "F25142",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In this lecture we're going to start getting into the nitty gritty and the details of R.",
    "output": "今回から、Rの肝心の詳細へ入っていきたいと思います。"
  },
  {
    "index": "F25143",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In particular I'm going to talk about different data types that are used in R and some basic operations on those data types.",
    "output": "特に、Rで使用する様々はデータ型とこれらにまつわる基本的な操作を扱います。"
  },
  {
    "index": "F25144",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So first it's important to kind of get the language right correctly.",
    "output": "まず第一に用語を理解するのが重要です。"
  },
  {
    "index": "F25145",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So all the things that you manipulate in R, all the things that we encounter in R, are what might be called objects objects can be all different kinds, can contain all different kinds of data. But everything in R, is an object.",
    "output": "R言語で操作するものやRで出くわすものは全てオブジェクトと呼ばれてオブジェクトは多様なデータを保持しますがRではすべてのものがオブジェクトです。"
  },
  {
    "index": "F25146",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the R has five basic atomic classes of objects.",
    "output": "Rには、5つの基本のオブジェクトのクラスがあります。"
  },
  {
    "index": "F25147",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the most basic object in R is called a vector.",
    "output": "オブジェクトには非常に下位レベルで基本的なクラスがあります。"
  },
  {
    "index": "F25148",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And a vector conta-, Can contain multiple copies of, for example, of a single type of object.",
    "output": "Rの基本オブジェクトではベクトルが最も基本でひと種類だけのオブジェクトを複数持てます。"
  },
  {
    "index": "F25149",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can have a vector of characters or a vector of integers, one thing you cannot do with a standard vector is have mixed types of objects you cannot have a vector of characters and numerics, or numerics and integers, or integers and logicals.",
    "output": "ただ、標準のベクトルでは同時に複数の型は持てません。つまり、文字と数値が混ざったベクトルや数値と整数や整数と論理値の混ざったベクトルは作れません。"
  },
  {
    "index": "F25150",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It, everything in a vector has to be the same class.",
    "output": "ベクトルは同じクラスで統一されている必要があります。"
  },
  {
    "index": "F25151",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, with any great rule, there's always an exception, and this, this one is no exception.",
    "output": "もちろん、どんなルールにも常に例外がありますがこれがベクトルの例外です。"
  },
  {
    "index": "F25152",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in this, with vectors, there's one type of vector that can have multiple different types of classes, and that's called a list.",
    "output": "これが複数の型を持てるベクトル型でリストと呼ばれています。"
  },
  {
    "index": "F25153",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So a list is represent as a vector, so there's a se, it's a sequence of objects.",
    "output": "リストはベクトルの形になるためオブジェクトの列があります。"
  },
  {
    "index": "F25154",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But each element of that vector can be a different, can be an object of a different class.",
    "output": "ベクトルの各要素は異なるクラスのオブジェクトを持てます。"
  },
  {
    "index": "F25155",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, you can have a list.",
    "output": "例えばまず文字があり、数値があり、論理値が含まれるようなリストもできます。"
  },
  {
    "index": "F25156",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can have a list that's inside the list and one element of the list can be a data frame so, any element of the list can be anything.",
    "output": "また、リスト中にデータフレームも入れられます。どこの要素もどんなクラスになりえます。"
  },
  {
    "index": "F25157",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's an, actually why what makes list so useful.",
    "output": "実際に、このことからリストはとても役に立ちます。"
  },
  {
    "index": "F25158",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the list is the one exception to the ot to the.",
    "output": "ベクトルには同じクラスの要素しかもてない一般ルールの唯一の例外がリストです。"
  },
  {
    "index": "F25159",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "General rule that a vectors can only contain elements of the same class.",
    "output": "次に、空のベクトルをvector関数で作れて、vector関数には2つの基本的な引数があります。"
  },
  {
    "index": "F25160",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The first argument is the class of the object, so the type of object that you want to have in the vector.",
    "output": "1つ目の引数はベクトル内に作りたいオブジェクトのクラスです。"
  },
  {
    "index": "F25161",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the second argument is the length of the vector itself.",
    "output": "2つ目の引数は、作るベクトルの長さです。"
  },
  {
    "index": "F25162",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Perhaps the most important type of object in R of course is the number.",
    "output": "Rで最も重要なオブジェクトの型はもちろん数値です。"
  },
  {
    "index": "F25163",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So numbers in R are generally treated as what are called numeric objectsum, so pretty much all numbers are treated as double number precision real numbers.",
    "output": "Rでの数値は概して数値オブジェクトとして扱われます。ほとんどの数値が倍精度実数として扱われます。"
  },
  {
    "index": "F25164",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, even if you are looking at a number that's like one or two, R thinks of those numbers as numeric objects there is a way to explicitly say you want an integer and you can specify the L subs, the L suf, the capital L suffix there.",
    "output": "これは、1や2などの数値の場合でも、Rでは数値オブジェクトとして扱います。"
  },
  {
    "index": "F25165",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if you just enter the number 1 in R, that gives you a numeric object.",
    "output": "明示的に整数と宣言したい場合には大文字のLの接頭辞を付けます。"
  },
  {
    "index": "F25166",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But entering 1 with a capital L next to it explicitly gives you an integer.",
    "output": "例えば、Rで1を入れると数値オブジェクトを返しますが大文字のL付にすると明示的に整数を返します。"
  },
  {
    "index": "F25167",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This distinction is not very important right now, but, it will become important later.",
    "output": "現時点ではそれほど重要ではありませんが、あとで重要になります。"
  },
  {
    "index": "F25168",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's also a special number called inf, which stands for infinity and, and inf is like a real number it can be used in calculations and you will get the expected result.",
    "output": "Infは実数のようなもので、計算に使うと期待する結果を得られます。"
  },
  {
    "index": "F25169",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, if you take one, divide it by zero, you'll get infinity and if you take 1 and divide it by infinity you'll get zero.",
    "output": "1を無限大で割ると0が返ってきます。"
  },
  {
    "index": "F25170",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, emphasis special number, and you can also have minus infinity, too.",
    "output": "Infは特別な値でマイナスの無限大も作れます。"
  },
  {
    "index": "F25171",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's another special value called NAN or Nan.",
    "output": "他にもNaNという特別な値があります。"
  },
  {
    "index": "F25172",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And this represents an undefined value so you can name it as not a number.",
    "output": "これを数値でないものと考えてもよいです。"
  },
  {
    "index": "F25173",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, if you take zero over zero that's not a number It's not defined so you'll get a Nan back Nan can also be thought of as a missing value but we'll talk a little bit more about missing values a little bit later so another thing that, that comes with each object in R is an attribute.",
    "output": "これは未定義なのでNaNが返ってきます。NaNはまたあるべき値が欠けているときにも起こりますがこの欠損値については後程詳しく見てきます。"
  },
  {
    "index": "F25174",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So not every, object in R necessarily has attributes, but, but they are, but attributes can be part of an object in R.",
    "output": "Rの全てのオブジェクトに必ずしもあるわけではないですが、Rのオブジェクトの一部分です。"
  },
  {
    "index": "F25175",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Some of the most common types of attributes that we'll encounter are namesor dim names, or, or dimension names.",
    "output": "属性の中でも最も頻繁に扱うものは名前や次元名です(nameやdimname)。"
  },
  {
    "index": "F25176",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "A dimension, so a matrix will have dimensions for example it will have a number of rows and a number of columns if you have a multidimensional array you'll have more than two dimensions.",
    "output": "例えば、行列には次元があります。行列にはいくらかの行や列があります。"
  },
  {
    "index": "F25177",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The class of the object, so every object will have a class.",
    "output": "クラス。各オブジェクトにはクラスがあります。"
  },
  {
    "index": "F25178",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, numeric objects their class is numeric and integer objects, their class is integer.",
    "output": "例えば、実数のオブジェクトであればクラスはnumericで、整数のオブジェクトならクラスはintegerです。"
  },
  {
    "index": "F25179",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Every object also has a length.",
    "output": "全てのオブジェクトに長さ(length)があります。"
  },
  {
    "index": "F25180",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for a vector it's quite simple the length of the object is just the number of elements in the vector.",
    "output": "ベクトルについてはとても簡単で、ベクトルの長さはただ単にベクトル内の要素の数です。"
  },
  {
    "index": "F25181",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then there may be other user-defined attributes or metadatas which, so these are things that you can define separately, for an object using various attribute functions.",
    "output": "それ以外にもユーザー定義属性やメタデータが使えます。"
  },
  {
    "index": "F25182",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There is a general function called attributes which allows you to set or modify the attributes for an R object.",
    "output": "オブジェクトに対して属性に対する関数を使って自分で定義できますまた、attributesという関数がありRオブジェクトの属性の設定や変更を可能にします。"
  },
  {
    "index": "F25183",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the c function is another function that can be used to create vectors of objects, and you can think of c as standing for concatenate because it can be used to kind of concatenate things together.",
    "output": "c関数は結合の頭文字と考えてもいいかもしれません。項目を結合するのに使われるためです。"
  },
  {
    "index": "F25184",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, I can create an object called x by concatenating 0.5 and 0.6 and that will give me a numeric vector of lenght 2 for the first element is .5 and the second element is .6.",
    "output": "例えば、xというオブジェクトを0.5と0.6を結合して作って実数ベクトルを返します。このベクトルは長さが2で、1つ目の要素が0.5で2つ目の要素が0.6です。"
  },
  {
    "index": "F25185",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In the second example here, I've got a logical vector, we are concatenating through true and false, so shorthand for true and false, you can use t and f, capital T and capital F, so these 2 lines give you the same objectum, you can create a character vector by concatenating a bunch of characters.",
    "output": "2つ目の例では、TRUEとFALSEを結合して論理値のベクトルが返されます。TRUEとFALSEは略してTやFで表現できます。"
  },
  {
    "index": "F25186",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can create integer vector by creating a sequence with colon operator, and you can also create a vector of complex numbers where the i is a special symbol, which indicates the imaginary part of the complex number.",
    "output": "ここでは複素数の値の1つとしてiシンボルで表して虚数を使うことができます。"
  },
  {
    "index": "F25187",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So using the vector function you can also create, a vector of a certain type and a certain length.",
    "output": "次にvector関数を使うことで指定した種類と長さのベクトルを作ることができます。"
  },
  {
    "index": "F25188",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, I'm going to create a numeric vector of length 10.",
    "output": "ここでは実数型で長さ10のベクトルを作ります。"
  },
  {
    "index": "F25189",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And by default it will initialize the vector, with a default value for numeric vectors the default value is zero.",
    "output": "実数ベクトルのデフォルト値はゼロです。"
  },
  {
    "index": "F25190",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what happens if you take a vect you create a vector and you mix two different types of objects and so the general it that is that r.",
    "output": "では、2種類の異なる型でできているベクトルを作るとどうなるでしょうか?一般的に適用されるルールはRでは最小公倍数的にベクトルを作ります。"
  },
  {
    "index": "F25191",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Will kind of create the least common denominator vector so, will not give you an error but what will happen is that it will coerce the vector to be the, the class that's kind of the least common denominator.",
    "output": "Rはエラーを返すのではなくベクトルを最小公倍数的に共通に成り立つ様にクラスに強制型変換します。"
  },
  {
    "index": "F25192",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, in the first example, I've got in trouble concatenating number 1.7 and letter a, so clearly these are not in the same class one is numeric, and the other is character.",
    "output": "この例では、数値1.7とaを結合しています。"
  },
  {
    "index": "F25193",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the least common denominator here, is going to be character.",
    "output": "明らかですがこの2つは同じクラスではなく、1つは実数で、もう1つは文字です。"
  },
  {
    "index": "F25194",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so we're, so what you're going to get is that y is going to be a character vector, where the first element is going to be the string 1.7 and the second element's going to be the, the letter A so in the second example here, I've got concatenating true, which is a logical, and a two, which is numeric.",
    "output": "ここで共通になりうるのは文字型なのでYは文字のベクトルになり1つ目の要素は1.7の文字列で2つ目はaになります。"
  },
  {
    "index": "F25195",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so what's going to happen here is that you're going to get a numeric vector and the true is going to be converted into a number.",
    "output": "2つ目の例では論理値のTRUEと実数の2を結合します。"
  },
  {
    "index": "F25196",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so how's that happen, so and the, and by the convention in R true is represented as the number one and false is represented as the number zero.",
    "output": "ここでは、実数のベクトルが返されて、TRUEは数値に変換されます。どのように変換されるのでしょうか?"
  },
  {
    "index": "F25197",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so what you're going to get here, is a vector 1,2.",
    "output": "ここでは1と2のベクトルが返ってきます。最後の例では、文字aと論理値のTRUEを結合しています。"
  },
  {
    "index": "F25198",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Lastly this last example here I am calculating the letter A, and the logical true and so here the least common denominator is again going to be character.",
    "output": "ここでは、共通になりうるのは文字です。"
  },
  {
    "index": "F25199",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the vector that you end up with is a vector where the first element is A and the second element is the string true, so T R U E.",
    "output": "ここで作られるベクトルは1つ目の要素がaで2つ目の要素がTRUEでできた文字列です。"
  },
  {
    "index": "F25200",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's not going to be illogical so you need to be a little bit aware, of the types of coercion that can occur in our, when you mix different types of elements in a vector.",
    "output": "Rではベクトルに異なる型を混ぜた時にどんな強制型変換が起こるかを知っておく必要があります。"
  },
  {
    "index": "F25201",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And because you won't get an error, but, but the coercion will happen behind the scenes.",
    "output": "なぜならエラーにはならずに裏側で強制型変換が起こるからです。"
  },
  {
    "index": "F25202",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "that, in the previous slide we talked about kind of a implicit coercion that occurs behind the scenes, but you can explicitly coerce objects from one class to another using functions that usually start with the word as.",
    "output": "1つ前のスライドでは裏側で起こる暗黙的な強制型変換について説明しました。"
  },
  {
    "index": "F25203",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if you want to convert something to a numeric you can use the function called as.numeric.",
    "output": "しかし、オブジェクトを別のクラスへ明示的に強制型変換することができます。asから始まる関数を使います。"
  },
  {
    "index": "F25204",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you want to convert something into character you can use the function as.character now if you apply these functions, so if you apply as.numeric to a numeric vector nothing will happen so, here in this example I'm starting off by creating an object called x which is a sequence of zero to six.",
    "output": "例えば、何かを実数型に変換したいときにはas.numeric関数を使います。"
  },
  {
    "index": "F25205",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is going to, this is an integer sequence as you could see when I call class on the object but I convert it into a numeric sequence.",
    "output": "文字に変換したいときにはas.character関数が使えます。"
  },
  {
    "index": "F25206",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I can call as.numeric on x, and you can see that it prints out 0, 1, through 6, which look like an integer object but it's actually going to be numeric or I can convert it into a logical and so I can say as.logical on it, and what happens?",
    "output": "これを実数の連番に変換するなら、as.numericをxに対して呼びここに0、1から6を出力しているので、実数オブジェクトに見えますが、実際には実数です。"
  },
  {
    "index": "F25207",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, as you can see, the convention is that 0 is false.",
    "output": "as.logicalを使うとどうなるかというと見て分かるように規約として0がFALSEで0を超えるものはTRUEとなります。"
  },
  {
    "index": "F25208",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And any number that's greater than zero is going to be true so here I've got a, when I convert to logical I get false and then everything else is true when I call as.character on X it takes all the numbers and, and converts them into characters.",
    "output": "このため、このように論理値に変換すると、FALSEが1つで残りはTRUEになります。xに対してas.characterを実行すると全ての実数を文字に変換します。"
  },
  {
    "index": "F25209",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I've got the string zero, the string one, two ect and finally when, if I call as.complex this is fairly straightforward because you can all it does is says that you have a complex number where all the imaginary components are zero, now coercion we'll notice always doesn't work.",
    "output": "最後になりますがas.complexを呼ぶと実に明白な結果が出ます。これで行われるのは複素数の値が返されて虚数成分は0になります。"
  },
  {
    "index": "F25210",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And when it doesn't work you get what are called NA values.",
    "output": "次に強制型変換は常に可能なわけではなく、型変換できない場合は、NA値が返ってきます。"
  },
  {
    "index": "F25211",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example if I take the vector ABC.",
    "output": "このため、NA値を持つベクトルと警告が返されます。"
  },
  {
    "index": "F25212",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well there's really no way to convert the letters a, b, and c to numerical variables so what you get is a vector of NAs and plus a warning similarly if you call as.logical on x, you're going to get a vector of NAs The next data type I'm going to talk about is the list.",
    "output": "同じように、xにas.logicalを呼び出しても、NA値のベクトルが返ってきます。次に説明するデータ型はリストです。"
  },
  {
    "index": "F25213",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now I mentioned lists a little bit earlier in this lecture and the idea is that they're, they're like a vector except that every element of a list could be a, an object of a different class and so that makes lists very, very handy for kind of carrying around different types of data.",
    "output": "今回もリストには既に触れましたが基本的な考えはリストはベクトルに似ていますが異なるクラスのオブジェクトを1リスト内の要素として持てます。"
  },
  {
    "index": "F25214",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And they're very useful in R and they become very common especially when in conjunction with other types of functions that we're going to learn about.",
    "output": "このため、異なる種類のデータを入れておくのに非常に使いやすいものです。"
  },
  {
    "index": "F25215",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I'm creating a list called x by using the list function which is a, which can be used to construct the list.",
    "output": "リストを作成するのに使うlist関数を使ってxというリストを作ります。"
  },
  {
    "index": "F25216",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the first element is a numeric value, numeric object of one.",
    "output": "1つ目の要素は実数オブジェクトで、値は1です。"
  },
  {
    "index": "F25217",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second element is a character, letter a.",
    "output": "2つ目の要素は文字で文字aです。"
  },
  {
    "index": "F25218",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Third is illogical and the fourth is a complex number.",
    "output": "3つ目の要素は、論理値で4つ目は複素数です。"
  },
  {
    "index": "F25219",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is not a problem with lists and when I autoprint the list you'll see that it prints out a little bit differently It doesn't print out like a vector because every element is different.",
    "output": "リストをautoprintすると違った形で出力されています。全要素が異なるためベクトルのようには出力されません。"
  },
  {
    "index": "F25220",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can see that in the double brackets here so the, the elements are indexed by double brackets so the first element is the vector 1.",
    "output": "二重角カッコがあるのが分かりますよね。ここでは要素は二重角カッコで囲まれて順番付けされています。"
  },
  {
    "index": "F25221",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second element is a vector with A.",
    "output": "1つ目の要素は値1のベクトルで2つ目は値aのベクトルで3つ目は値TRUEのベクトルで4つ目は複素数の1と4iのベクトルです。"
  },
  {
    "index": "F25222",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The third element is a vector with true and the fourth element is a vector. With the complex number 1 + (4i).",
    "output": "リストには順番が付けられリストの要素には要素数の値に二重角カッコが付き他のベクトルの要素にはただ角カッコが付くだけです。"
  },
  {
    "index": "F25223",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So lists are indexed you'll notice that el, elements of a list will have double brackets around them elements of other vectors just have the single brackets, so that's one way to separate a list from other types of vectors",
    "output": "この違いでも他のベクトルとリストを見分けられます。"
  },
  {
    "index": "F25224",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Matrices are a special type of vector in R.",
    "output": "行列は、Rでの特別な型の1つです。"
  },
  {
    "index": "F25225",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's, they're not a spe, a different, a separate class of objects.",
    "output": "行列用に特別なオブジェクトのクラスはありませんが、ベクトルには次元(dimension)という属性がついています。"
  },
  {
    "index": "F25226",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Where the first number is the number of rows the matrix, and the second number is the number of columns.",
    "output": "次元の属性は、長さ2の整数ベクトルで1つ目の値は行列の行数になり、列数です。"
  },
  {
    "index": "F25227",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, if I can create a matrix empty matrix with the matrix function, and I can explicitly say how many rows and how many columns there are.",
    "output": "matrix関数を使って行列を作ると何列と何行の行列にするのか明示的に指定できます。"
  },
  {
    "index": "F25228",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is not the only way to create a matrix, but it's one way.",
    "output": "これだけが行列を作る方法ではありませんが、1つの方法です。"
  },
  {
    "index": "F25229",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so when I auto print the matrix by typing the, the object m and hitting Enter, you'll see that it'll show me that, first of all the matrix is full, is initialized with NA values.",
    "output": "オブジェクト名のmを入力し、エンターを押してautoprintして、行列を出力します。出力ではまず第一に行列の値がNA値で初期化されているのが分かります。"
  },
  {
    "index": "F25230",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's no values in here.",
    "output": "行列には何も値がないのが分かります。"
  },
  {
    "index": "F25231",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that there's two rows and three columns and they're labeled by the numbers in the brackets.",
    "output": "次に、行列は2行と3列でできていて角カッコの中の数字でラベルが付いています。"
  },
  {
    "index": "F25232",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I call the dim function on m, it'll give me the dimension attribute, which in this case it says there are two rows and three columns, because the first rows are number rows and the second number, sorry excuse me.",
    "output": "mに対してdim関数を呼び出すと次元の属性を返して、この場合には2行と3列だと分かります。"
  },
  {
    "index": "F25233",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The first number is the number of rows and the second number is the number of columns.",
    "output": "最初の数値は行数で2つ目の数値は列数です。"
  },
  {
    "index": "F25234",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I call the attributes function on m, you'll see it returns a list where the first element is the dim element and it has the vector 2,3.",
    "output": "mに対してattribute関数を呼び出すとリストを返して1つ目の要素がdimの要素です。"
  },
  {
    "index": "F25235",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So these are all aspects of a matrix which is a vector that has a dimension attribute to it.",
    "output": "これらが行列の特性で行列は次元属性を持つベクトルなのです。"
  },
  {
    "index": "F25236",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can think of the matrix taking a vector and all the numbers are inserted into the matrix by, by column.",
    "output": "このため行列というのはベクトルに対して、代入する数値がまずその列を埋めるように入っていくと考えます。"
  },
  {
    "index": "F25237",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first column gets filled and then when you hit the number of maximum number of rows, then the second column gets filled and the third column et cetera.",
    "output": "つまり、まず1列目が代入されその列の行の終わりにくると、2つ目の列に代入し、3つ目へと続いていきます。"
  },
  {
    "index": "F25238",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I create a matrix by taking the sequence 1 to 6 and then I say, I specifies that it has two rows and three columns.",
    "output": "例えば、1から6の連続する数値を使って2行と3列でできた行列を作るとしたらどのように行列が構成されるでしょうか?"
  },
  {
    "index": "F25239",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first thing it happens is it takes 1, 2, and now there's only two rows, so it can only go to 2.",
    "output": "列によって構成されるので、まずは1、2が入り2行しかないので、2までしか入りません。"
  },
  {
    "index": "F25240",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then that makes the first column.",
    "output": "これで1列目が作られます。"
  },
  {
    "index": "F25241",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then the third column is made up of 5 and 6.",
    "output": "2列目は、3、4が入って作られて3列目は5,6で作られます。"
  },
  {
    "index": "F25242",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can also create a matrix by creating the dimension attribute on a vector.",
    "output": "ベクトルに次元属性を作ることでも行列が作れます。"
  },
  {
    "index": "F25243",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, I can take, I can create a vector that's a sequence 1 to 10.",
    "output": "例えば、1から10の連続する数値でできたベクトルを作って次元属性を加えます。"
  },
  {
    "index": "F25244",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, I'm using the dim function, but I'm assigning a value to the dim attribute of m.",
    "output": "ここでは、dim関数を使っていますが、mのdim属性に値を代入しています。"
  },
  {
    "index": "F25245",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I'm saying is, I want to take this vector and transform it into a matrix that is two rows and five columns.",
    "output": "ベクトルに2と5を指定することでこのベクトルを変換して2行と5列の行列に変えています。"
  },
  {
    "index": "F25246",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so now after I've done that, I've got a matrix m, which has two rows and five columns and it's filled in the matrix column wise.",
    "output": "これを実行すると行列mは2行と5列で列によって値が入った行列が返ってきます。"
  },
  {
    "index": "F25247",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another way to create a matrix, and this is a common way, is by binding columns or binding rows.",
    "output": "頻繁に使う他の方法では行や列を割り当てることによっても行列を作れます。"
  },
  {
    "index": "F25248",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you, this is column, column binding and row binding can be achieved by the fu, the functions c-bind and r-bind.",
    "output": "これが行と列の割り当てで関数cbindやrbindによって実行できます。"
  },
  {
    "index": "F25249",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, suppose I have the two objects x, which is sequenced from 1 to 3 and y, which is a sequence from 10 to 12.",
    "output": "例えば、1から3の連続数でできたxと10から12の連続数でできたyの2つのオブジェクトがあるとします。"
  },
  {
    "index": "F25250",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I cbind those two objects, then I'll get a, I'll get a matrix where the first column is 1 to 3, and the second column is 10 to 12.",
    "output": "cbindで2つのオブジェクトを割り当てると、1列目が1から3で2列目が10から12の行列が返ってきます。"
  },
  {
    "index": "F25251",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is kind of what you might expect would happen.",
    "output": "想像した通りの結果になっているかと思います。"
  },
  {
    "index": "F25252",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I rbind those two objects, then the first row will be 1 to 3, and the second row will be 10 through 12.",
    "output": "この2つのオブジェクトでrbindすると1行目が1から3で2行目が10から12になります。"
  },
  {
    "index": "F25253",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So cbind-ing and rbind--ing is another way to create a matrix.",
    "output": "このように、cbindとrbindでも行列を作れます。"
  },
  {
    "index": "F25254",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So factor is a special type of vector, which is used to create, to represent categorical data.",
    "output": "因子(factor)もまたベクトルの特別な種類です。カテゴリーに分かれたデータを表現するのに使います。"
  },
  {
    "index": "F25255",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, and there's two types of factor, there is unordered or ordered, so you can think of this as being, as storing data that are.",
    "output": "factorには順序つきと順序なしの2種類があります。"
  },
  {
    "index": "F25256",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So they have an order but they're not numerical for example you know, in many universities you'll have assistant professors, associates professors, and full professors.",
    "output": "例えば、多くの大学には助教授がいて、準教授がいて、教授がいます。"
  },
  {
    "index": "F25257",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Those are categorical but they're ordered.",
    "output": "これらはカテゴリーであり、順序付きです。"
  },
  {
    "index": "F25258",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one, you can think of a factor as an integer vector where each integer has a label.",
    "output": "factorは整数のベクトルでそれぞれの値にラベルが付いたものと考えてもよいです。"
  },
  {
    "index": "F25259",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, you might, you can think of it as a vector as one two three, where one represents you know, high, for example high value and two represents a medium value and three represents a low value.",
    "output": "例えば、ベクトルに1、2、3があるとして1が高い値を意味し2が中間の値を意味して3が低い値を表現していると想像してください。"
  },
  {
    "index": "F25260",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And underlying in R is represented by the numbers one, two, and three.",
    "output": "これと別に高い、中間、低いと呼ぶ変数があってRの中では数値の1、2、3で表現されます。"
  },
  {
    "index": "F25261",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, factors are important because they're treated specially by modeling functions like lm and glm which we'll talk about later.",
    "output": "あとから説明するlmやglmなどのモデル関数では特に多く扱うためfactorは重要です。"
  },
  {
    "index": "F25262",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But these are functions for, for, for fitting linear models.",
    "output": "これらは線形モデルに使う関数です。"
  },
  {
    "index": "F25263",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And factors are with labels generally speaking are better than using simple integer vectors because the factors are, what are called self describing.",
    "output": "概して、ラベル付きのfactorは整数のベクトルを使うよりも好ましいです。factorは自明的だからです。"
  },
  {
    "index": "F25264",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So having a variable that has values male and female is more descriptive than having a variable that just, that just has ones and twos.",
    "output": "ただ単に1や2の値でできた変数よりも男性、女性の値がある変数の方がより記述的です。"
  },
  {
    "index": "F25265",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, in many data sets you'll find that a var, there will be a variable that's coded as one and two and it's, and it's not.",
    "output": "例えば、ほとんどのデータセットでは男性女性は1か2の値で表されているでしょう。変数の値が実数で1か2の値しか使えないかどうかは簡単には分かりません。"
  },
  {
    "index": "F25266",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Easy to know whether that variable is really a numeric variable that only takes values one and two, but the problem is that's not something that's coded in the data set, so it's hard to tell.",
    "output": "データセット内にこの情報が含まれていないのが問題で判断するのは困難です。"
  },
  {
    "index": "F25267",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you use a factor variable then the coding for the labels is all, is kind of built into the variable and it's much easier to understand.",
    "output": "もしfactor変数を使えば変数そのものにラベルが含まれているので非常に簡単に分かります。"
  },
  {
    "index": "F25268",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So factors can be created with the factor function, and the input into the factor function is a character vector.",
    "output": "factorは、factor関数によって作りfactorへの入力は文字のベクトルで行います。"
  },
  {
    "index": "F25269",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, I'm just creating a simple factor with the which has what, two levels, and the levels are yes and no.",
    "output": "ここで、2つのレベルがあるfactorを作ります。レベルにはYesとNoがあります。"
  },
  {
    "index": "F25270",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so x is a factor, you can see what, it prints out a little bit differently from a character vector, in the sense that it prints up the value, yes, yes, no, yes, no.",
    "output": "出力すると、通常の文字ベクトルの出力とは少し違っていて値がyes、yes、no、yes、noと出力されます。"
  },
  {
    "index": "F25271",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then it has a separate attribute which is called the levels.",
    "output": "次に、これとは別にレベルという属性があります。"
  },
  {
    "index": "F25272",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the levels of this factor are no and yes, okay.",
    "output": "このfactorのレベルはnoとyesです。"
  },
  {
    "index": "F25273",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's only two levels.",
    "output": "つまり2つのレベルしかありません。"
  },
  {
    "index": "F25274",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can, I can call table on this factor and it will give me a frequency count of how many of each level there are.",
    "output": "table関数をこのベクトルに対して呼び出すとそれぞれのレベルの発生度数を返します。"
  },
  {
    "index": "F25275",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, it'll tell me there are two nodes.",
    "output": "ここではtable関数で2つのnoと3つのyesがあると分かります。"
  },
  {
    "index": "F25276",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, the un-class function strips out the class for fa, for a vector.",
    "output": "unclass関数を使うとクラスをベクトルで補っていた表現を取り除きます。"
  },
  {
    "index": "F25277",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, I can, if I call un-class on x it'll, it'll kind of bring it down to an integer vector, and you can see that underlying.",
    "output": "例えば、xに対してunclassを呼ぶと整数のベクトルにまでxを戻して2、2、1、2、1と表現の元となった因子を見ることができます。"
  },
  {
    "index": "F25278",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The factors represent as 22121 so, yes, it's coded as two and no, it's coded as one.",
    "output": "割り当てられたコードはyesが2で、noが1です。"
  },
  {
    "index": "F25279",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now it's not really essential for you to know this because you can just treat the factor as being a vector of yeses and nos but it's used sometimes it's it's useful just to know under, underneath kind of how factors are represented by R.",
    "output": "yesとnoのベクトルとして因子を扱えば良いからです。ただ、R内で因子がどう表現されているのかを知っておくと役立つことがあります。"
  },
  {
    "index": "F25280",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you see, it's really an integer vector with the attribute, the levels attribute of no and yes.",
    "output": "実はただの整数のベクトルにnoかyesのlevelsという属性が付いていると分かります。"
  },
  {
    "index": "F25281",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The order of the levels in the factor, can be set using the levels argument in factors.",
    "output": "因子内のlevelsの順番はfactor関数へのlevels引数で設定することができます。"
  },
  {
    "index": "F25282",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for ex, and sometimes this is important because in modeling functions and when you include a factor variable this, this, sometimes it's important to know what the baseline level is.",
    "output": "モデル関数ではこれが重要な時があります。factor変数を含んでいる時にはベースラインレベルを知っておくことが重要です。"
  },
  {
    "index": "F25283",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the baseline level is just the first level in the factor, and the way this is determined by NR is critical.",
    "output": "ベースラインレベルは因子の中の最初のレベルというだけですが、Rでどのように決定しているかは非常に重要です。"
  },
  {
    "index": "F25284",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's determined using alphabetical order, so for example, if I create a factor variable. With the, with the elements yes and no, then the base line level with be the first level that's encountered and because no comes before yes in the alphabet then no will be the base line level and yes will be the second level.",
    "output": "例えば、yesかnoの要素を持つベクトルを作るとしたらベースラインレベルはアルファベットで最初に出てくるレベルになりnoがyesよりも先にくるので、noがベースラインレベルになりyesが第二レベルになります。"
  },
  {
    "index": "F25285",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now this may not be something that you want you might want for example a yes to be the base line level and no to be the second level and then in that case you have explicitly tell r.",
    "output": "ただ、いつもこうしたいとは限りません。yesをベースラインレベルにしてnoを第二レベルにする時にはyesを第一レベルに指定することをRに明示する必要があります。"
  },
  {
    "index": "F25286",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That yes is going to be the first level and you can view that using the levels argument to the factor function.",
    "output": "factor関数のlevels引数を使うことでこれを実施できます。"
  },
  {
    "index": "F25287",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now when I print out the x object you see that the elements are still the same, still yes yes no, yes no.",
    "output": "xを出力すると要素はそのままでyes、yes、no、yes、noとなっていますがlevels属性は入れ替わっています。"
  },
  {
    "index": "F25288",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "because yes is the first level and no is the second level.",
    "output": "これはyesが第一レベルでnoが第二レベルだからです。"
  },
  {
    "index": "F25289",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's a special type of object that we haven't talked too much about yet.",
    "output": "さて、これまでにあまり触れていない特殊なオブジェクトがあります。"
  },
  {
    "index": "F25290",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Missing values in R are denoted by either NA or NAN which we talked about before.",
    "output": "以前出てきたように、Rでは欠損値はNAかNaNで表現します。"
  },
  {
    "index": "F25291",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, there's a function in R called is.na which is used to test objects to see if they are NA.",
    "output": "NaNは未定義の数学的演算を表すのに使われNAはそれ以外の場合に使われます。"
  },
  {
    "index": "F25292",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "To see if they are missing values in that object.",
    "output": "Rにはis.naという関数がありオブジェクトにNAとなる欠損値があるかを判定します。"
  },
  {
    "index": "F25293",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's another function called is.nan which is used to test for NANs.",
    "output": "次にis.nanという関数ではNaNがあるかを判定します。"
  },
  {
    "index": "F25294",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, NA values can have a class, too.",
    "output": "クラス指定のあるNA値もあります。"
  },
  {
    "index": "F25295",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so even though it looks like it's all NAs, the NAs can have different classes potentially.",
    "output": "これらは、同じNAのように見えますがNAは様々なクラスである可能性があります。"
  },
  {
    "index": "F25296",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then it's an NA, an NAN value is considered to be also NA, so for example, an NAN value, a NAN value, is missing.",
    "output": "さらに、NaN値はNAとも判定されます。例えば、NaN値は欠損値として判定されます。"
  },
  {
    "index": "F25297",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, but the reverse is not true.",
    "output": "しかし、逆は成立しません。"
  },
  {
    "index": "F25298",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So an NA value is not necessarily, an NAN value.",
    "output": "NA値は必ずしもNaN値ではありません。"
  },
  {
    "index": "F25299",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I've got a few different types of missing values listed here.",
    "output": "ここに欠損値の種類をいくつか示します。"
  },
  {
    "index": "F25300",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here I created a vector x which is 1,2, NA, 10, and 3.",
    "output": "ベクトルxを1、2、NA、10、3の値で作ります。"
  },
  {
    "index": "F25301",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the NA value in here's going to be a numeric missing value.",
    "output": "これは実数ベクトルでここのNA値は実数の欠損値です。"
  },
  {
    "index": "F25302",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I call is.na on x, what it returns is a, is a logical vector.",
    "output": "ここでxに対してis.naを呼び出すと論理ベクトルを返します。"
  },
  {
    "index": "F25303",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the logical vector indicates whether each element of the vector x is missing or not.",
    "output": "この論理ベクトルにはベクトルxの各要素が欠損しているかどうかが示されます。"
  },
  {
    "index": "F25304",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, there's only one missing element in this vector, and so that's the third element.",
    "output": "このベクトルには1つだけ欠損している要素があります。"
  },
  {
    "index": "F25305",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The first two are false, the third is true, and the fourth and the fifth are false.",
    "output": "ここにあるように論理ベクトルで返されているのは最初の2要素がFALSEで、3つ目がTRUE、そして4つ目5つ目がFALSEです。"
  },
  {
    "index": "F25306",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the, the, the element that's true indicated where the missing value is.",
    "output": "TRUEとなっている要素が欠損値のある場所を示しています。"
  },
  {
    "index": "F25307",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I call is.NaN on this vector, you'll see that vector that's returned is all false.",
    "output": "このベクトルに対してis.nanを呼ぶとNaN値がないため全ての値がFALSEのベクトルが返ってきます。"
  },
  {
    "index": "F25308",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because there aren't any NaN values, or their aren't any MAN values in this vector so everything's false.",
    "output": "言い換えるとベクトルにNaN値がないため全てがFALSEになります。"
  },
  {
    "index": "F25309",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, if I create a vector that has an end, a NAN value and an, and an NA value in it.",
    "output": "もちろん、NaN値とNA値を含んだベクトルを作ればis.naではNaNとNAの両方に対してTRUEが返されます。"
  },
  {
    "index": "F25310",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But is.nan only returns true for the for the value that's actually NAN.",
    "output": "しかし、is.nanはNaN値に対してのみTRUEを返します。"
  },
  {
    "index": "F25311",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The last data type I'm going to talk about here is the data frame.",
    "output": "最後に説明するデータ型はデータフレームです。"
  },
  {
    "index": "F25312",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The data frame is a key data type used in R and it's used to store tabular data.",
    "output": "データフレームはRでは鍵となるデータ型で表形式のデータを格納するのに使います。"
  },
  {
    "index": "F25313",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So of course, tabular data make up a lot of what we use in statistics.",
    "output": "もちろん、統計で使う中で表形式のデータを多く使いますがすべてのデータが表形式ではありません。"
  },
  {
    "index": "F25314",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Data frames are very important in R.",
    "output": "非常に多くのデータが表形式になるためRにとってデータフレームは重要です。"
  },
  {
    "index": "F25315",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So data frames are basically represented as a special type of list, where every element of that list has the same length.",
    "output": "データフレームはリストの特殊な型で表現されリスト内の全ての要素が同じ長さになっています。"
  },
  {
    "index": "F25316",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, so you can think of each column of the data frame as an element of the list, and of course, in order to be a table, every column has to have the same length.",
    "output": "データフレームのそれぞれの列はリストの要素と考えてください。もちろん、表となるように全ての列が同じ長さです。"
  },
  {
    "index": "F25317",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, each column doesn't have to be the same type.",
    "output": "しかし、列同士は必ずしも同じ型でなくても構いません。"
  },
  {
    "index": "F25318",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first column could be numbers, the second column could be factor, the third column could be integers the fourth column could be logicals, it doesn't matter what the different types are.",
    "output": "どんな種類の型が含まれていても構いません。"
  },
  {
    "index": "F25319",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, unlike matrices where, wh, which have to store the same type of object in every single element of the matrix, data frame can store your cla objects of different classes.",
    "output": "行列内の要素が全て同じでないといけない行列とは違っています。データフレームは異なるクラスのオブジェクトを格納できます。"
  },
  {
    "index": "F25320",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, data frames also have some special attributes.",
    "output": "データフレームにも独自の属性があります。"
  },
  {
    "index": "F25321",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "First, the first special attribute is called a row name.",
    "output": "1つ目の独自の属性はrow.namesです。"
  },
  {
    "index": "F25322",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so every row of a data frame has a name.",
    "output": "データフレームでは全ての行に名前が付きます。"
  },
  {
    "index": "F25323",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, each row re, might represent a subject enrolled in a study, and then the row names would be the subject ID for example.",
    "output": "例えば、ある調査に参加した被験者を各行が表している場合にはrow.namesは被験者IDとかもしれません。"
  },
  {
    "index": "F25324",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "however, sometimes the row names are not interesting, and, and, and often you'll just use row names of 1, 2, 3, et cetera.",
    "output": "でも、row.namesは特に重要でない場合もあって1、2、3などのrow.namesを使うこともしばしばあります。"
  },
  {
    "index": "F25325",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Data frames can be created by calling most often calling the read.table, the read.csv function and we'll get into that a little bit when I talk about reading data into R.",
    "output": "Rでのデータの読み込み方を説明するときにさらに詳しくお知らせします。"
  },
  {
    "index": "F25326",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can also create a matrix from a data frame by calling the data.matrix a function.",
    "output": "data.matrix関数を呼ぶことでデータフレームから行列を作ることもできます。"
  },
  {
    "index": "F25327",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, you can't if you have a data frame that has many different types of objects, and then if you coerce that into a matrix, it's going to force so each object to be coerced so that they're all the same.",
    "output": "とはいっても例えば、オブジェクトの種類が異なるデータフレームの時には、行列へ強制型変換することになり各オブジェクトが同じ型となるように必ず強制型変換されます。"
  },
  {
    "index": "F25328",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you may get something that's not exactly expected.",
    "output": "想像と必ずしも一致しない結果が返されることもあります。"
  },
  {
    "index": "F25329",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, data frames can be created besides using read.table or read.csv, you can use the data.frame function and here I've created a very simple data frame where the first the first column is called, is the foo variable, and the second column is the bar variable.",
    "output": "ここにとても単純なデータフレームを作りました。1つ目の列は、foo変数と呼び2つ目はbar変数です。"
  },
  {
    "index": "F25330",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The foo variable is an integer sequence from one to four, and the bar variable is a logical vector with two trues and two falses.",
    "output": "foo変数は1から4の整数の連番でbar変数は、TRUE2つ、FALSE2つの論理ベクトルです。"
  },
  {
    "index": "F25331",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I autoprint the data frame out you'll see the, it prints out the two columns and here the row names since I didn't specify any special row names, just defaults to 1, 2, 3, 4, because there's four rows.",
    "output": "このデータフレームをautoprintすると2つの列が出力されるのが分かります。row.namesは特に指定しなかったのでデフォルト値の1、2、3、4となっています。"
  },
  {
    "index": "F25332",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then when I call the nrow function on x, I see that there's four rows in the ncall function, shows me that there are two rows",
    "output": "xに対してnrow関数を呼び出すと4行と表示されncol関数では2列と表示されます。"
  },
  {
    "index": "F25333",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this not true for just data frames.",
    "output": "Rオブジェクトには名前が付けれてデータフレームに限ったことではありません。"
  },
  {
    "index": "F25334",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's true for all r objects.",
    "output": "全てのRオブジェクトに当てはまります。"
  },
  {
    "index": "F25335",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And this can be very useful for writing readable code and self describing objects.",
    "output": "これは読みやすいコードや自明なオブジェクトを書くのにとても役に立ちます。"
  },
  {
    "index": "F25336",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, I'm creating a vector that's an integer sequence 1, 2, 3 and by default, there's no name.",
    "output": "例えば、ベクトルを整数の連番1、2、3で作ります。"
  },
  {
    "index": "F25337",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I call the names function on x, it gives me a null value.",
    "output": "xに対してnames関数を呼ぶとNULL値が返ってきます。"
  },
  {
    "index": "F25338",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, I can, I can give a name to each element of the vector x.",
    "output": "しかし、ベクトルxの各要素に名前を付けることもできます。"
  },
  {
    "index": "F25339",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if I, I can say the first element's called food, the second element's called bar, and the third element's called norf.",
    "output": "例えば、1つ目の要素をfooと名付けて2つ目の要素にbar、3つ目の要素にnorfと名前を付けます。"
  },
  {
    "index": "F25340",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now when I print out my x vector, I get a vector 1, 2, 3 but then each one has a name over it, which is the name I just specified.",
    "output": "ここでxベクトルを出力すると1、2、3のベクトルが返ってきますが、それぞれの上に指定した名前が表示されています。"
  },
  {
    "index": "F25341",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so when I call the names function I get the, the names that are associated with each element of the vector foo, bar, and norf.",
    "output": "names関数を呼ぶとfoo、bar、norfのようにそれぞれの要素に付けた名前が返ってきます。"
  },
  {
    "index": "F25342",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so for example here I'm creating a list with the list function where the first element is called a, the second element is called b, and the third element is called c.",
    "output": "ここではlist関数でリストを作っていますが1つ目の要素をa2つ目の要素をb3つ目の要素をcと呼んでいます。"
  },
  {
    "index": "F25343",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so when I print out the list, it prints out the names of each element and the values associated with those names.",
    "output": "このリストを出力すると、各要素の名前とその名前の付いた値を出力します。"
  },
  {
    "index": "F25344",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I created a matrix from the sequence 1 to 4. It's a two by two matrix.",
    "output": "1から4の連番で2かける2の行列を作りました。"
  },
  {
    "index": "F25345",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the, when, when I use the dim names function I pass it a list. Excuse me, I assign it a list.",
    "output": "dimnames関数を使うとリストに名前を割り当てることができます。"
  },
  {
    "index": "F25346",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Where the first element of the list is the, is the vector of row names and the second element of the list is a vector of column names.",
    "output": "リストの1つ目の要素には行名のベクトルを指定し2つ目の要素には列名のベクトルを指定します。"
  },
  {
    "index": "F25347",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I want to name the rows a and b, and I want to name the columns c and d.",
    "output": "ここでは、行をa、bと呼び列をc、dと呼びます。"
  },
  {
    "index": "F25348",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's what I passed to the dim names function. And now when I print out my matrix I can see that the row names and the column names are labeled as I wanted.",
    "output": "dimnames関数にこれを渡すと行列を出力した場合には行名と列名が指定した値で出力されます。"
  },
  {
    "index": "F25349",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, that's kind of a whirlwind tour of the different basic data types in R.",
    "output": "さて、Rでの様々な基本的なデータ型を駆け足でお見せしてきました。"
  },
  {
    "index": "F25350",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So far, we've talked about the atomic classes in numeric, logical, character, integer, and complex vectors.",
    "output": "ここまでは5つの原子的なクラスの実数型、論理型、文字型、複素数型などを見てきました。"
  },
  {
    "index": "F25351",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "We talked about how vectors can only have elements of the same class and the main exception to that is lists which can have elements of different classes.",
    "output": "また、ベクトルには同じクラスの要素しか含められないことを説明しました。これの主な例外としてはリストでリストは異なるクラスを要素に含めることができます。"
  },
  {
    "index": "F25352",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are missing values that are represented by NAs, and NANs.",
    "output": "さらに、欠損値がありNAとNaNで表現されます。"
  },
  {
    "index": "F25353",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Data frames are used to store tabular data or each COM can be of a different class.",
    "output": "データフレームは表形式のデータを格納するのに使われて各列を異なるクラスにすることができます。"
  },
  {
    "index": "F25354",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This lectures going to talk about reading and writing data in R.",
    "output": "このビデオではRでのデータの読み書きについて説明します。"
  },
  {
    "index": "F25355",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's a few different types of ways you can do this and I want to talk about some of the primary functions that use an R to read and write data.",
    "output": "何種類か方法がありますが今回はRでの読み書き用の基本的な関数について説明します。"
  },
  {
    "index": "F25356",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are a few principle functions that we're going to talk about for reading into R.",
    "output": "Rへデータを読み込むのに使う原則的な関数のいくつかを紹介します。"
  },
  {
    "index": "F25357",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The first two are read.table and read.csv and these are for reading tabular data.",
    "output": "最初の2つはread.tableとread.csvで表形式のデータを読むのに使います。"
  },
  {
    "index": "F25358",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And they are probably the two most commonly used functions for reading data into R.",
    "output": "これらの関数は、Rへのデータ読込に恐らく最も頻繁に関数です。"
  },
  {
    "index": "F25359",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These functions read text files that, that contain data that are stored in kind of rows and columns type of format and return a data frame in R.",
    "output": "この関数は、行と列でできた書式のテキストファイルを読み込んでRのデータフレームを返します。"
  },
  {
    "index": "F25360",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The function read lines is for reading lines of a text file so this, this can be any type of file really, it just gives you text in a, as a character vector in R.",
    "output": "これだとほぼどんなファイルでも読み込めてRの文字ベクトルとしてテキストを返します。source関数はRのコードを読み込むのに重要です。"
  },
  {
    "index": "F25361",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The source function is important for reading R code, so if you have R code, for example functions or anything written get written to a file the source function will read all that code into R.",
    "output": "Rコードで書かれた関数や別の種類のファイルがあればsource関数はこのコードを読み取りRに取り込みます。"
  },
  {
    "index": "F25362",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The dget function is also for reading R code files but it's for reading R objects that have been dparsed into text files.",
    "output": "dget関数もRのコードのファイルを読み込みます。ただ、deparseと呼ばれる状態にテキスト化されたRオブジェクトを読み込むのに使います。"
  },
  {
    "index": "F25363",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "We'll talk a little more about this later.",
    "output": "これについては後程くわしく説明します。"
  },
  {
    "index": "F25364",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The low and unserialized functions are for reading binary objects into R.",
    "output": "loadとunserialize関数はバイナリオブジェクトをRに読み込むのに使います。"
  },
  {
    "index": "F25365",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the analogous functions for writing data are write.table, writeLines, dump, dput, save and serialize and those kind of pair up with their reading analog.",
    "output": "これに対する類似の書き込み用関数はwrite.table、writeLines、dumpdput、save、serializeで読み取り版の類似機能と一緒に使います。"
  },
  {
    "index": "F25366",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the read.table function is the most commonly used function for reading data into R.",
    "output": "read.table関数はデータをRに読み込むときに最も頻繁に使われる関数です。"
  },
  {
    "index": "F25367",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's important that you know kind of, how the arguments work, what the arguments are and understand what they mean.",
    "output": "この関数で使う引数と引数の意味を知っておくのが重要です。"
  },
  {
    "index": "F25368",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first argument is pretty obvious, it's name of a file or the name of a connection, which we'll get to a little bit later.",
    "output": "1つ目の引数はいかにも当たり前ですがファイル名かconnectionの名前です。connectionについては後で説明します。"
  },
  {
    "index": "F25369",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Usually you're going to give this a file name, it's going to be a string and it's going to be a path to a certain file in your computer.",
    "output": "通常はここでファイル名を渡します。これは文字列でコンピューター内のファイルへのパスを指定します。"
  },
  {
    "index": "F25370",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The header is a logical flag indicating whether the first line is a header line, so if the first line for example it has all the variable names in it, then that's not really a piece of data, that's just a line that has labels on it.",
    "output": "headerは論理フラグで1行目がヘッダー行かを指定します。例えば、1行目にデータではなく変数の名前がある場合でラベルとなる行がある場合です。"
  },
  {
    "index": "F25371",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you want to tell the read.table function whether the first line contains the variable names or not or whether the line just, right away contains data.",
    "output": "この場合にはread.table関数に1行目には変数名が入っているのか最初の行にデータが入っているかどうかを指定します。"
  },
  {
    "index": "F25372",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The sep argument stands for separator. it's, it's a string that indicates how the columns are separated.",
    "output": "sep引数はseparatorの省略版でこれに指定する文字列はどんな文字列で列が区切られているか表します。"
  },
  {
    "index": "F25373",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example if you have a file that's separated by commas then the separator has a comma. You may sometimes files are separated by semicolons or by tabs or by spaces.",
    "output": "例えば、コンマで区切られたファイルの場合はコンマが区切り文字ですファイルがセミコロンやタブやスペースや他の文字で区切られていることがあります。"
  },
  {
    "index": "F25374",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you want to tell read.table what the separator is going to be.",
    "output": "このため、どの区切り文字なのかを指定する必要があります。"
  },
  {
    "index": "F25375",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "ColClasses is a character vector which indi wh, wh, which, whose length is the same length as the number of columns the data set.",
    "output": "colClassesは文字ベクトルでデータセットの列数と同じ長さのベクトルを渡します。"
  },
  {
    "index": "F25376",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the character vector indicates what, what is the class of each column the data set.",
    "output": "文字ベクトルによってデータセットの各列のクラスを指定します。"
  },
  {
    "index": "F25377",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, is the, if the first column is numeric and the second column is logical, and the third column is a factor, et cetera.",
    "output": "例えば、1列目は実数型で2列目が論理型で3列目がfactor型のようになります。"
  },
  {
    "index": "F25378",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the colClass is a vector, which is not required but it, it tells the, it tells read.table what the class of the data is for each column.",
    "output": "colClassesはベクトルで必須ではありませんがread.tableにデータの各列がどんなクラスなのか指定することができます。"
  },
  {
    "index": "F25379",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "End rows is the number of rows in the data set, this is not required but it it can be used.",
    "output": "nrowsはデータセットの列数です。必須ではありませんが指定できます。"
  },
  {
    "index": "F25380",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Comment.char is the character string that indicates what's the comments character So the default, for example, is the pound symbol or the sharp symbol and anything after, anything to the right of that symbol is ignored the comment character.",
    "output": "comment.charは文字列でコメントに使う文字を指定します。"
  },
  {
    "index": "F25381",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can specify other characters to be comment characters, and the lines, lines of the file that begin with that comment character will be ignored.",
    "output": "コメントとして扱う文字を指定して他の文字をコメント文字にすることができます。取り込むファイルの中のコメント文字で始まる行は無視されます。"
  },
  {
    "index": "F25382",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Skip is the number of lines to skip from the beginning.",
    "output": "skipはファイルの最初の行から読み飛ばす行数を指定します。"
  },
  {
    "index": "F25383",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So sometimes there may be some header information or some non-data region at the beginning of the file, and you want to skip right over that.",
    "output": "ファイルの最初にはヘッダー情報やデータでない領域が存在することがありこれ用の行は無視したいことがあります。"
  },
  {
    "index": "F25384",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you can tell the read.table function to skip the say the first ten lines of the first 100 lines and then only start reading data after that.",
    "output": "例えば、最初の10行や100行を読み飛ばすとデータの読み込みはその後の行からしか始まりません。"
  },
  {
    "index": "F25385",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the idea is that it, the question is whether you want to encode character variables as factors.",
    "output": "この引数の背景にあるのは文字変数の列をfactorとして読み取るかどうかです。"
  },
  {
    "index": "F25386",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Anytime our read.table encounters a column of data that looks like it's a character variable, it will call, it will assume that what, what you mean to read in, is a factor variable.",
    "output": "デフォルトではread.tableは文字変数があるような列を見つけた時にはこの列をfactorの変数として読み取ろうとしている前提で動作します。"
  },
  {
    "index": "F25387",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you don't me, mean to read this in as a factor variable, then you can set strings as factors equal to false.",
    "output": "もし、factor変数で読み込みたくない場合にはstringsAsFactorsをFALSEに指定します。"
  },
  {
    "index": "F25388",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for small and kind of moderately sized data sets it has computers are going to get better and better everyday, the definition of small and moderate is kind of growing.",
    "output": "コンピューターは日々どんどん高性能になっているので小規模や中規模のデータセットという点ではこの中小という定義での規模も大きくなっています。"
  },
  {
    "index": "F25389",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you can use read.table usually without specifying any of the other arguments besides the file name.",
    "output": "read.table(\"foo.txt\")とただファイル名だけを入力しても構いません関数が他の部分を自動的に判定します。"
  },
  {
    "index": "F25390",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can say read.table on, say foo dot text so this is just the name of the file, and it will automatically take care of figuring out, you know, what the c, classes of the different columns are, it'll figure out how many rows there are, et cetera.",
    "output": "各列のクラスや何行あるデータかなどを判定します。"
  },
  {
    "index": "F25391",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you don't have to specify any of that information if you don't feel like it.",
    "output": "指定したい場合でなければどの情報も指定する必要はありません。"
  },
  {
    "index": "F25392",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and then, and then, this will return an object here ca, that I call data, and that would be a data frame.",
    "output": "これでオブジェクトを返せるのでdataと呼びます。dataはデータフレームです。"
  },
  {
    "index": "F25393",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It will figure out how many rows there are and, agai, and again it'll figure out what type of variable is in each column of the table.",
    "output": "自動的にコメント文字で始まる不要な行を飛ばして何行あるデータかを判定し表の各列の変数がどの型なのかを判定します。"
  },
  {
    "index": "F25394",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, tell it you can, that you can tell R all these things and if you want to and the reason you might do that is to make it run faster and more efficiently.",
    "output": "でも、必要なら、これらをRに対して指定して読み込みをより速く効率的にするために指定することが必要な時があります。"
  },
  {
    "index": "F25395",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So with small and moderate size datasets its really not much advantage to doing that because because it'll be pretty fast and pretty efficient as it is.",
    "output": "中小規模のデータセットの場合には指定することによってそれほど大きな利点が生まれるわけではありません。Rは既にかなり速く効率的に動作しているからです。"
  },
  {
    "index": "F25396",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The read.csv function is identical to read.table, except for the key differences that the, the default separator for the read.csv function is the comma, whereas the default separator for read.table is the space.",
    "output": "read.csv関数ではデフォルトの区切り文字がカンマということです。"
  },
  {
    "index": "F25397",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So parti, so read.csv is useful for reading csv files, this, this can usually, this stands for comma separated value.",
    "output": "一方、read.tableの区切り文字はデフォルトではスペースです。read.csvはCSVファイルを読むのに便利です。"
  },
  {
    "index": "F25398",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's usually something that you get from a spreadsheet program, like Microsoft Excel or something similar to that.",
    "output": "マイクロソフトエクセルや同様の表計算ソフトウェアで通常扱うことができる書式です。"
  },
  {
    "index": "F25399",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So csv is a very common format that most spreadsheet types of programs will understand.",
    "output": "CSVは非常に一般的な書式でほとんどの表計算ソフトで扱えて利用できます。"
  },
  {
    "index": "F25400",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So with larger data sets of beyond the small to moderate, then there are a couple of things you can do when reading in tabular data.",
    "output": "中小規模のデータセットよりも大きなデータを扱う時はその表形式のデータを読むときに実施した方が楽になることがいつくかあります。"
  },
  {
    "index": "F25401",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That will make your life a lot easier, and more importantly it will prevent R from totally choking.",
    "output": "さらに重要なのは、Rが全く反応しなくなるのを避けるためです。"
  },
  {
    "index": "F25402",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So first you should read the help page for read.table.",
    "output": "まず、read.tableのヘルプページは読んでおくべきです。"
  },
  {
    "index": "F25403",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In fact, you should probably have it memorized.",
    "output": "というよりむしろ暗記してしまうべきでしょう。"
  },
  {
    "index": "F25404",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There is a lot of key hints in that help page.",
    "output": "鍵となるヒントがヘルプページにはあります。"
  },
  {
    "index": "F25405",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Lot of useful information.",
    "output": "多くの役立つ情報があります。"
  },
  {
    "index": "F25406",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And in my opinion not enough people read this help page carefully enough.",
    "output": "これは私の意見ですがこのヘルプページを十分に注意深く読み込んで寝ながらでも暗証できる人はあまりいません。"
  },
  {
    "index": "F25407",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if I, so there's a lot of so once you've read that you'll see there's a lot of important information for kind of how to optimize read.table.",
    "output": "もし、一度読めば重要な情報が多くあるのが分かりread.tableを最適化し特に大きなデータに対応法が分かる重要な情報です。"
  },
  {
    "index": "F25408",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so one of the things you're going to want to do is to make a very rough calculation.",
    "output": "このような時に必要になってくるのはデータ量の計算です。"
  },
  {
    "index": "F25409",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of how much memory you need to store the data set you're about to read.",
    "output": "データセットが必要とするメモリ量を非常におおまかでも計算することです。"
  },
  {
    "index": "F25410",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that way you can get a sense of well, is there enough memory on my computer to store this data set?",
    "output": "こうすることでコンピューターにデータを格納するのに十分なメモリがあるのか把握できます。"
  },
  {
    "index": "F25411",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "R will have to, R is going to store your entire dataset in memory unless you do otherwise.",
    "output": "もし覚えていればですがRは違う方法を指定しない場合にはデータセット全てをメモリに格納します。"
  },
  {
    "index": "F25412",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you call read.table or read.csv, it's reading your entire dataset into the RAM of the computer.",
    "output": "read.tableやread.csvを呼ぶとデータセット全てをコンピューターのRAMに読み込みます。"
  },
  {
    "index": "F25413",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you need to know, roughly speaking, how much RAM this datasets going to require.",
    "output": "大まかに言えばどの程度のRAMを読み込むデータセットが使うかを知っておく必要があります。"
  },
  {
    "index": "F25414",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And we'll talk about how to calculate that in a second.",
    "output": "どうやって計算させるかは少しあとで説明します。"
  },
  {
    "index": "F25415",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So another opti, easy optimization you can say is if there's no comment lines in your file. Then just set the comment char to be the comment.char is meant to be blank.",
    "output": "簡単な最適化の方法として、もしファイルの中にコメントが無い場合にはcomment.char引数にブランクを設定する方法もあります。"
  },
  {
    "index": "F25416",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The call classes argument is actually very important.",
    "output": "colClasses引数は実は非常に重要です。"
  },
  {
    "index": "F25417",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And tries to figure out what type of data it is.",
    "output": "というのも、デフォルトではRはデータセットの全ての列を調べてデータの型判定を試みるためです。"
  },
  {
    "index": "F25418",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, that's all fine, well I'm fine when the dataset is small to moderate.",
    "output": "でも、もしデータセットが中小規模だったら問題にはなりません。"
  },
  {
    "index": "F25419",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But reading each of these columns and trying to figure out what type of data it is takes time, it takes memory, and it can generally slow things down.",
    "output": "でも、各列を読み込んでどの型なのかを判定するのは時間がかかり、メモリも使うので処理を遅する原因になりやすいです。"
  },
  {
    "index": "F25420",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you can tell R, what type of data, is in each column, then R doesn't have to spend the time to figure it out on its own.",
    "output": "もしRに各列のデータ型を指定するとRは自分自身でどの型かを判定して時間を費やさなくてすみます。"
  },
  {
    "index": "F25421",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, it'll, it'll generally make read.table run a lot faster.",
    "output": "型指定をするとread.tableはかなり速くなります。"
  },
  {
    "index": "F25422",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can save yourself a lot of time.",
    "output": "自分自身のためにも時間が省けます。"
  },
  {
    "index": "F25423",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you, if, if you have a few columns in your dataset, then then you can usually just say what, what the classes are.",
    "output": "もし、データセットに何列かある場合にはどのクラスなのかをただ指定すれば良いのです。"
  },
  {
    "index": "F25424",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But if you have, or if they are all the same, so for example if all the columns are numeric.",
    "output": "もし、すべての列が同じ型で例えば、実数型のときにはcolClasses=\"numeric\"と指定すれば良いです。"
  },
  {
    "index": "F25425",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if you only sent, you give it a single value, it will just assume that every column has that same value.",
    "output": "もし、値を1つだけ指定すると全ての列に対して同じ値が指定されたものとして処理します。"
  },
  {
    "index": "F25426",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Otherwise what you can do if you have a huge data set, you can read in maybe the first 100 or first 1,000 rows.",
    "output": "そうでない場合で巨大なデータセットを使う場合には最初の100行か1,000行だけをnrows引数で指定して読み込むようにするのも良いです。"
  },
  {
    "index": "F25427",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then going through each of the looping over each of the columns using sapply and calling the class function.",
    "output": "その後、sapply関数を使って各列をループしてclass関数を呼び出します。"
  },
  {
    "index": "F25428",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the class function will give you, will tell you what class of data is in each column.",
    "output": "class関数を使うと各列のデータのクラスが分かります。"
  },
  {
    "index": "F25429",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then you can use this, and then you can save, store this information.",
    "output": "こうすることでまずはこの情報を格納してからcolClasses引数を指定してデータセットの全体を読み込みます。"
  },
  {
    "index": "F25430",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It doesn't necessarily make R run any faster, but it does help with memory usage.",
    "output": "nrows引数もとても役に立つもので必ずしもRを速くしませんが使用メモリの対策に役立ちます。"
  },
  {
    "index": "F25431",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, if you can tell R how many rows are going to be read in to, to the, in to, in to R.",
    "output": "これを使うとRに何行読むべきか指定できます。"
  },
  {
    "index": "F25432",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So even if you mildly overestimate how many rows there are in the data set, that's okay.",
    "output": "すると、どの程度のメモリが使われるのか計算できて読み込みながら、使用量を把握する必要がなくなります。"
  },
  {
    "index": "F25433",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in general, when you're using R with large data sets, and there's lots of large data sets out there nowadays.",
    "output": "データセットの行数を多少多めに見積もっても構いません。"
  },
  {
    "index": "F25434",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's useful to have a few things, a few bits of information on hand.",
    "output": "結果は同じになり、指定行数が多くてもRは正しい行数を読み込みます。"
  },
  {
    "index": "F25435",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, how much memory does your computer have?",
    "output": "昨今では大きなデータセットがあふれていますから大きなデータセットをRで使うときには一般的には、知っておくと役に立つ情報があります例えば、コンピューターにメモリがどれだけあるか?"
  },
  {
    "index": "F25436",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "How much physical RAM is there?",
    "output": "物理RAMはいくらあるか?"
  },
  {
    "index": "F25437",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These days in most computers will have on the order of a few gigabytes up to many gigabytes of physical RAM.",
    "output": "最近のコンピューターなら物理RAMに数ギガバイト単位で何ギガバイトも備えているでしょう。"
  },
  {
    "index": "F25438",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What other applications are in use?",
    "output": "実行中のアプリケーションには何があるか?"
  },
  {
    "index": "F25439",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So are there other applications that are running on your computer that are eating up some processor time or memory?",
    "output": "コンピューターで実行中のアプリケーションがあってCPUの時間やメモリを大量に使っているかもしれません。"
  },
  {
    "index": "F25440",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you're on a multi-use system, are there other users logged into the system.",
    "output": "複数ユーザーが同時に使えるシステムだと他のユーザーもシステムにログオンしています。"
  },
  {
    "index": "F25441",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Are they using up some of the resources on the computer?",
    "output": "そのユーザーがコンピューターのリソースを使い尽くしていないか?"
  },
  {
    "index": "F25442",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What is the operating system for your computer?",
    "output": "コンピューターのOSは何か?"
  },
  {
    "index": "F25443",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, is it a Mac?",
    "output": "Macなのか?"
  },
  {
    "index": "F25444",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Is it Windows?",
    "output": "Windowsなのか?"
  },
  {
    "index": "F25445",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Is it Unix?",
    "output": "UnixなのかLinuxなのか?"
  },
  {
    "index": "F25446",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Is it something like that?",
    "output": "それに似たものか?"
  },
  {
    "index": "F25447",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then, also it's useful to know whether the O, the operating system that you're running is 32-bit or 64-bit.",
    "output": "また知っておくと役に立つのがOSが32ビットなのか64ビットなのかです。"
  },
  {
    "index": "F25448",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "On a 64-bit system there, there, you'll generally be able to access more memory if the computer has a lot more memory.",
    "output": "64ビットだとより多くのメモリが使えるものです。もし、コンピューターに多くのメモリがあればですが。"
  },
  {
    "index": "F25449",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you want to do a rough calculation before you read in a table into R, using the read.table or the read.csv function.",
    "output": "さて、read.tableやread.csv関数を使って表データを読み込む前に概算をしておきます。"
  },
  {
    "index": "F25450",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can just do a very quick calculation.",
    "output": "本当に簡単な計算を行います。"
  },
  {
    "index": "F25451",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here is, suppose I have a data frame here, with 1.5 million rows and 120 columns.",
    "output": "ここにデータフレームがあり120列で150万行あるデータだとします。"
  },
  {
    "index": "F25452",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is not a particularly big data set but it's reasonable.",
    "output": "特にそれほど大きなデータではありませんが、まあまあのものです。"
  },
  {
    "index": "F25453",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I don't have to worry about different types of data.",
    "output": "仮に、全ての列が実数型でデータに色々な型があるのを気にする必要がないとします。"
  },
  {
    "index": "F25454",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They're all, all the columns are numeric.",
    "output": "全ての列が実数型です。"
  },
  {
    "index": "F25455",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The question is how much memory is required to store this data frame in memory, okay?",
    "output": "ここでの疑問はどれだけのメモリがこのデータフレームを格納するのに必要かです。"
  },
  {
    "index": "F25456",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I can do a simple calculation.",
    "output": "この計算を簡単に行うことができます。"
  },
  {
    "index": "F25457",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the num, the number of elements in this data, in this data frame is going to be 1.5 million times 120, right, because it's a square object.",
    "output": "このデータフレームにある要素の数は150万かける120になります。これは2次元のオブジェクトだからです。"
  },
  {
    "index": "F25458",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that's, so that's the number of elements in the data frame.",
    "output": "この数がデータフレームの要素の数です。"
  },
  {
    "index": "F25459",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because the, because the numbers are stored using 64-bit numbers and there's eight bits per byte.",
    "output": "もしデータが全て実数だとすると各数値を格納するのにそれぞれ8バイトのメモリが必要です。"
  },
  {
    "index": "F25460",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's eight bytes of memory per numeric object.",
    "output": "実数型は64ビットの数値を使って格納されて1バイトは8ビットで実数型オブジェクト毎に8バイトとなるからです。"
  },
  {
    "index": "F25461",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's going to, so here's the number of bytes, now there's two to the 20 bytes per megabyte.",
    "output": "これで計算するとこれが必要なバイト数です。"
  },
  {
    "index": "F25462",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can divide that, the number of bytes by 2 to the 20, and that's how many megabytes I got.",
    "output": "1メガバイトは2の20乗です。ですから、この数を2の20乗で割って何ギガかを計算すると1,373.29メガバイトが返ってきます。"
  },
  {
    "index": "F25463",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I can divide that again by 2 to the 10 to get the number of gigabytes, that's going to be roughly 1.34 gigabytes.",
    "output": "そしてさらにこれを2の10乗で割って何ギガバイトかを計算すると約1.34ギガバイトになります。"
  },
  {
    "index": "F25464",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the, the raw storage for this data frame, is roughly 1.34 gigabytes.",
    "output": "このデータフレームの純粋な格納領域は約1.34ギガバイトになります。"
  },
  {
    "index": "F25465",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "now, you're actually going to need a little bit more memory than that to read the data in.",
    "output": "実際には、データを読み込むにはこの数値よりも少しだけ多くの領域が必要になります。"
  },
  {
    "index": "F25466",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because there's a little bit of, overhead required for reading the data in.",
    "output": "データを読み込むためには少しだけ付帯的な領域が必要なためです。"
  },
  {
    "index": "F25467",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, and so the rule of thumb, is to, is that you're going to need almost twice as much memory to read this dataset into R using read.table.",
    "output": "経験則から言えば、read.tableを使ってデータセットをRに読み込むにはオブジェクトそのものが必要な領域と比べてやや倍のメモリ領域が必要になります。"
  },
  {
    "index": "F25468",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if your computer only has, let's say two gigabytes of RAM eh, and you're trying to read in this 1.34 gigabyte table.",
    "output": "もし、コンピューターに2ギガバイトのRAMしかなくて1.34ギガバイトの表データを読もうとしてたら考え直しましょう。"
  },
  {
    "index": "F25469",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because it, you're going to be pushing the boundaries of of memory that, that is required to read this dataset n.",
    "output": "このデータセットを読み込むのに必要なメモリは既存のメモリ領域を超えてしまうことになるからです。"
  },
  {
    "index": "F25470",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, if your computer has like four or eight or 16 gigabytes of RAM, then you should have no problem in terms of the memory requirements.",
    "output": "もちろん、4ギガ、8ギガや16ギガのRAMがコンピューターにあればメモリの要件としては全く問題がありません。"
  },
  {
    "index": "F25471",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It will still take some time just to read it in just because it takes time to read in all the data, but you won't be running out of memory.",
    "output": "全てのデータを読み込むのに時間がかかるためただ読み込むだけでも時間はかかりますがでも、メモリ不足にはならないでしょう。"
  },
  {
    "index": "F25472",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So doing this kind of calculation is enormously useful when you're reading in large data sets.",
    "output": "この様な計算を行っておくととてつもなく役に立ちます。"
  },
  {
    "index": "F25473",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because it can give you a sense of you know do I have enough memory.",
    "output": "特に大きなデータを読み込む時にはデータを読み込むのに十分なメモリがあるか分かるからです。"
  },
  {
    "index": "F25474",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Is the reason, if you grunt any errors, you'll know whether the error is because of memory, running out of memory or not.",
    "output": "もしエラーが出た時にはエラーがメモリ不足で起こっているかどうかが分かるからです。"
  },
  {
    "index": "F25475",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I encourage you to do this kind of calculation when you're going to be reading in large data sets.",
    "output": "大きなデータセットを読み込むときにはこの様な計算を行うことをお勧めします。"
  },
  {
    "index": "F25476",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you, and you, and you know in advance kind of how big it's going to be",
    "output": "計算しておけば前もってどんな大きさのデータか知ることができます。"
  },
  {
    "index": "F25477",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are other types of formats that you can save data in beyond the tabular format, beyond, or the CSV file or text file.",
    "output": "表形式やcsvやテキストファイル以外にもデータを保存できる形式があります。"
  },
  {
    "index": "F25478",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These are also textual formats, but they are a little bit different for, from the tabular data that we've talked about before.",
    "output": "テキスト形式でもありますがこれまで扱ってきた表形式のデータとは少し異なっています。"
  },
  {
    "index": "F25479",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the two main functions for writing out data and f, are dumping and dputing.",
    "output": "データを書き込むための主要な2つの関数はdumpやdputです。"
  },
  {
    "index": "F25480",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, and, and the idea behind these types of formats is they're text formats, but they're not really, they're not really formatted in a way that's, in the same as like a table because they contain a little bit more meta-data.",
    "output": "これらの形式の背景にあるのはテキスト形式でありながらも表形式と同じような書式にはなっておらずメタデータを含んでいます。"
  },
  {
    "index": "F25481",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So data about, for example, the type of the data in, in each class, object for example.",
    "output": "例えばそれぞれのオブジェクトがどんな型かを示すデータです。"
  },
  {
    "index": "F25482",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you, if you dump or dput a data frame.",
    "output": "データフレームに対してdumpやdputを実行すると出力にはデータフレームの各列のクラスを含むようになります。"
  },
  {
    "index": "F25483",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It will include in the output, that the class of each column, of the data frame, so that you don't have to specify it when you read it in.",
    "output": "こうすることで、データ読み込む時に型を指定する必要がありません。データを読み書きするときに使えるこの種のメカニズムを使う利点は指定が不要だからです。"
  },
  {
    "index": "F25484",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the advantage of, of doing, using this type of mechanism to store data or to read, or to read data, is that you don't have, it's still a textual format, which can be useful, but it also contains metadata, so that you don't have to specify it every single time you read it in.",
    "output": "データを読み込む時に毎回指定する必要がなくなります。"
  },
  {
    "index": "F25485",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because that, if you don't, ca, if the metadata do not get carried with the data set itself, then it, they ca, they can get lost if you, if they get transferred somewhere else and if you don't remember what the metadata are, for example the classes of the different columns, then you kind of have to reconstruct that from scratch.",
    "output": "データセットと一緒にメタデータが含まれないとどこに行ったか分からなくなってしまったりどこかに転送されたりどんなメタデータだったか思い出せないことがあります。例えば、各列のクラスなどです。"
  },
  {
    "index": "F25486",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's one advantage of using, using a function like dump or dput to, to output data from R.",
    "output": "こうなると、いちから再構築する必要がでてきます。"
  },
  {
    "index": "F25487",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And similarly the, the, the, the functions for reading data using, fr, that haven't been outputted from dump or dput are source and, dget.",
    "output": "これがRのデータをdumpやdputなどの関数を使うことの利点の1つです。"
  },
  {
    "index": "F25488",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in general, the textual formats are very nice formats for storing data because, there's a number of different types of, different advantages to them.",
    "output": "概して、データを格納するのにテキスト形式は非常に便利です。ここには多くの種類の利点があります。"
  },
  {
    "index": "F25489",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "First of all, they're editable, so you can, if you want to you can edit them.",
    "output": "1つ目は編集したいときには編集できるからです。"
  },
  {
    "index": "F25490",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I wouldn't say this is something that I would advice, but because of you wanted something that's reproducible.",
    "output": "これは再現して確認するのには有効ではないのであえてお勧めすることではありません。"
  },
  {
    "index": "F25491",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But, for example if something gets corrupted then you can look at the file to see if it's possible to recover it.",
    "output": "でも、例えば、何かが壊れてしまった時にファイルを見て修復可能か見ることができます。"
  },
  {
    "index": "F25492",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So textual formats can be a little longer lived, if you're going to be storing data for a long time, sometimes it's useful to, if it's possible to use a type of textual format so that you can avoid problem, potential problems with corruption.",
    "output": "データを長期間保管しておく時には可能な限りテキスト形式を使うと役に立ちます。起こりうるデータが壊れる問題を避けることができます。"
  },
  {
    "index": "F25493",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Textual formats can also work better if you're using like a version control program, like subversion or git, where you're tracking changes between documents.",
    "output": "テキスト形式であればsubversionやgitなどのバージョン管理プログラムを使う時も比較をより上手くひろえます。"
  },
  {
    "index": "F25494",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, and those types of programs tend to be much more useful with textual data rather than binary data, so that you can track changes meaningfully.",
    "output": "この類のプログラムではバイナリデータよりもテキストデータのほうが関係ある変更を有意義に追跡できます。"
  },
  {
    "index": "F25495",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Textual formats adhere to the general kind of Unix philosophy, which is to store all kinds of data, which generally stores all kinds of data in text.",
    "output": "様々な種類のデータをテキストで保持するという哲学です。"
  },
  {
    "index": "F25496",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the one downside of textual formats is that they tend not to be space efficient, so they tend to, they tend to take up a lot of space, and so, it often need to be compressed.",
    "output": "テキストに書式を加えると領域を高効率では利用しにくいということです。つまり、多くの領域を占めてしまいがちです。"
  },
  {
    "index": "F25497",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, d, the dput function takes an arbitrary R object, and it will, use, it will take most types of R objects except for some more exotic ones, and it will create some R code that will essentially reconstruct the object in R.",
    "output": "さて、dput関数では任意のRオブジェクトを渡しますがかなり例外的なもの以外はほとんどの型のRオブジェクトを使えます。"
  },
  {
    "index": "F25498",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here's I'm creating a small data frame, it's got two columns, the first column is called A the second column is called B, and then I'm going to dput this data frame.",
    "output": "1列目をaと2列目をbと呼びます。では、データフレームをdputします。"
  },
  {
    "index": "F25499",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you'll see the out, if you discall dput it'll just output the results to the console.",
    "output": "dputをここで呼ぶとコンソールに結果を出力します。"
  },
  {
    "index": "F25500",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that what I've done is that.",
    "output": "ここで行われているのはRのコードが生成されています。"
  },
  {
    "index": "F25501",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, it's creating this list that has these two elements in it.",
    "output": "例えば、2つ要素のあるリストを作っています。"
  },
  {
    "index": "F25502",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that each element has has the data that's in it.",
    "output": "それぞれの要素にデータも入っているのが分かります。"
  },
  {
    "index": "F25503",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it has the names embedded here, it's got the row names here.",
    "output": "名前も埋め込まれていてrow.namesもあります。"
  },
  {
    "index": "F25504",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it has the class of the object which, in this case, is the data frame.",
    "output": "また、オブジェクトのクラスもありここではデータフレームになっています。"
  },
  {
    "index": "F25505",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, all the metadata here like the row names and the names and the class are all included in the output.",
    "output": "このように、rownamesやnamesやクラスのようなメタデータが全て出力に含まれています。"
  },
  {
    "index": "F25506",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, of course, you generally don't want to print this to the console, that's not particularly useful, you probably want to save it to a file.",
    "output": "このようにdputを使ってオブジェクトをファイルに出力しのちに、dgetを使って読み込むことができます。"
  },
  {
    "index": "F25507",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can dput the file to a file and then later on, you can read it into R using dget, and when you dget the object, you will get this object and you will see that it's, you have kind of reconstructed the object from before.",
    "output": "dgetした時にはこのオブジェクトが返されます。"
  },
  {
    "index": "F25508",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the dput function, essentially writes R code, which can be used to reconstruct an R object.",
    "output": "dput関数はRオブジェクトを再構築するのに使えるRのコードを書き出します。"
  },
  {
    "index": "F25509",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The dump function is a lot like dget however, the difference is that dget can only be used on a single R object.",
    "output": "dump関数はdputのようですがdputは1つのオブジェクトにしか使えません。"
  },
  {
    "index": "F25510",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Whereas dump can be used on multiple R objects and so what you do is what you pass a dump is the character vector which contains the names of the objects.",
    "output": "dumpに対して文字ベクトルでオブジェクトの名前を渡せばよいのです。"
  },
  {
    "index": "F25511",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I created two objects one called x, the other called y and when I pass the dump.",
    "output": "ここでは、2つのオブジェクトを作り1つはxで、もう1つはyです。"
  },
  {
    "index": "F25512",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I give it a file, that I want to store the da, the objects in.",
    "output": "dumpに渡しているのはオブジェクトの名前でxとyです。"
  },
  {
    "index": "F25513",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I can remove them if I want to, but to read those objects back into R, I can call the source function on that file and you'll see that the Y object and the X object have been reconstructed.",
    "output": "そして、これを削除することもできますがRオブジェクトを再度読み込みたいときにはこのファイルでsource関数を呼びます。"
  },
  {
    "index": "F25514",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are a variety of ways that you can interface between R, R, wi, with the outside world.",
    "output": "Rと外部の世界を繋ぐには何種類かの方法があります。"
  },
  {
    "index": "F25515",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And generally speaking there are functions that, that are used to kind of open up the what are called connections to the outside world.",
    "output": "おおまかに言えば関数があり外部の世界へのconnectionというものを開いて使うことができます。"
  },
  {
    "index": "F25516",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Usually you want to, the most common type of connection is to me, is to a file, so for example if you want to read a file then you can, you can create a file connection, you might want to for example o, or read a compressed file, or that's a slight variation on that.",
    "output": "例えば、ファイルを読みたいときにはfileconnectionを作ります。"
  },
  {
    "index": "F25517",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And most functions will do this in the background without you having to know what's going on.",
    "output": "例えば圧縮ファイルを読むときには少し変えたものを使えます。"
  },
  {
    "index": "F25518",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, when you call read.table with it and you pass it the name of a file, what it does behind the scenes is it opens up a file connection to that file, and then reads from that file connection.",
    "output": "例えば、read.tableにファイル名を渡して呼ぶと、裏ではこのファイルへのfileconnectionを開いてfileconnectionから読み込みます。"
  },
  {
    "index": "F25519",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The connection can be made to other types of objects too.",
    "output": "connectionは、他の型のオブジェクトに対しても使えます。"
  },
  {
    "index": "F25520",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, you can open a connection to a webpage using the URL function.",
    "output": "例えば、url関数を使ってウェブページへのconnectionを開くことができます。"
  },
  {
    "index": "F25521",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, when you open a connection to a webpage, you can read data from that webpage using the URL connection.",
    "output": "urlconnectionを使ってウェブページからデータを読めます。"
  },
  {
    "index": "F25522",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The mechanism for connecting to different types of objects that are external to R, whether they be files, or webpages, or whatever.",
    "output": "connectionインターフェースを使う狙いはRの外にある様々な型のオブジェクトへ接続する仕組みを抽象的に提供することですオブジェクトはファイルでもウェブページでも何でも構いません。"
  },
  {
    "index": "F25523",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the file function is the function that opens a connection to a standard uncompressed file.",
    "output": "file関数は、標準的な非圧縮ファイルへのconnectionを開く関数です。"
  },
  {
    "index": "F25524",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this, this can be useful for text files, for, for reading in other types of text files.",
    "output": "他の種類のテキストファイルを読むためには、gzfileやbzfileを使って、圧縮データファイルへのconnectionを開きます。"
  },
  {
    "index": "F25525",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Gzfile and bzfile, are used for opening connections to compressed data files.",
    "output": "gzfileはgzipアルゴリズムで圧縮されたファイルに対して使います。"
  },
  {
    "index": "F25526",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So gz file i, are, is used for files that are compressed with the gzip algorithm and bz files used for, is for opening connections to files compressed with the bzip2 algorithm.",
    "output": "bzfileは圧縮するのにbzip2アルゴリズムを使ったファイルへのconnectionを開くのに使います。gzipで圧縮されたファイルにはgzの拡張子が付いています。"
  },
  {
    "index": "F25527",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Files that are compressed with gzip usually have a gz extension and files compressed with bzip2 usually have a bz2 extension.",
    "output": "bzip2で圧縮されたファイルにはbz2の拡張子が付いています。このようにfile関数には複数の引数があります。"
  },
  {
    "index": "F25528",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the file function here has a few arguments, the description argument is the name of the file and there's a flag that's called, that goes to the open argument and you have to know what the codes are, but basically r is for reading, w is for writing, a is for appending, and then rb, wb and ab are for reading, writing, and appending on binary files.",
    "output": "次は、open引数でここで使う値は知らないと使えません。rが読み込み用、wが書き込み用aは追加書き込み用でrb、wb、abはバイナリファイルの読み込み、書き込み、追加用です。"
  },
  {
    "index": "F25529",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The other options for file are not particularly important at this time.",
    "output": "他の引数は、ここでは特に重要ではありません。"
  },
  {
    "index": "F25530",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, connections can be very powerful and they can let you navigate files and other external objects in a more sophisticated way than just, like, reading the whole thing, for example.",
    "output": "connectionは非常に強力で、ファイルや他の外部オブジェクトをより洗練された方法で扱えます。"
  },
  {
    "index": "F25531",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And generally you don't have to deal with the connect interface in many cases, but sometimes it's useful.",
    "output": "例えば、ただ全体を読み込むような方法ではありません。"
  },
  {
    "index": "F25532",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, so here I've got a simple example or opening a fi, a file connection to some file called foo.text, I'm going to open it for reading.",
    "output": "多くの場合、connectionインターフェースで直接扱う必要はありませんが時に役に立ちます。"
  },
  {
    "index": "F25533",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can call read.csv on the connection, and that by default will just read the entire file then I can close the connection.",
    "output": "例えば、この単純な例ではfoo.txtというファイルへのfileconnectionを読み取り用に開いています。"
  },
  {
    "index": "F25534",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that three line process is the same as just calling read.csv on the file.",
    "output": "このconnectionに対してread.csvを呼び出してデフォルトではファイル全体を読み込みます。"
  },
  {
    "index": "F25535",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in this case there was no need to use the connection to read the file.",
    "output": "その後、このconnectionを閉じます。この3行で行っている処理はread.csvをファイルに対して呼ぶのと同じです。"
  },
  {
    "index": "F25536",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, sometimes a connection can be useful if you want to read parts of a file.",
    "output": "この場合には、ファイルを読むのにconnectionを直接使う必要はありませんが時としてconnectionはファイルを読み込むのに非常に便利です。"
  },
  {
    "index": "F25537",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, here I've got the readLines function which just reads lines from a text file.",
    "output": "例えばここではreadLines関数を使ってテキストファイルから行を読み込んでいるだけです。"
  },
  {
    "index": "F25538",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'm going to open up this words.gz file.",
    "output": "words.gzファイルを開きます。"
  },
  {
    "index": "F25539",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, this is a file that has words in it for it's like a dictionary file.",
    "output": "このファイルには多くの単語が入っています。これは辞書ファイルのようなものです。"
  },
  {
    "index": "F25540",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it's compressed using the gz, the gzip algorithm.",
    "output": "gzipアルゴリズムのgzを使って圧縮されています。"
  },
  {
    "index": "F25541",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'm going to be using the gz file function to open a connection to that.",
    "output": "圧縮方法に合うgzfile関数を使ってファイルへのconnectionを開きます。"
  },
  {
    "index": "F25542",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'm just going to read the first ten lines.",
    "output": "そして、最初の10行を読み込みます。"
  },
  {
    "index": "F25543",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I'm going to re, use this connection, and to read the first ten lines.",
    "output": "ここではこのconnectionを使って最初の10行を読み込んでいます。"
  },
  {
    "index": "F25544",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And here, the first ten lines are printed out here as you can see these are the first top ten words in the file.",
    "output": "この最初の10行をここに出力しました。ファイルの最初に出てきそうな単語が見られるかと思います。"
  },
  {
    "index": "F25545",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And similarly, write lines is a, is a function that can be used to write out lines of text to a file.",
    "output": "writeLinesも同じようにテキストの行をファイルに出力するのに使う関数です。"
  },
  {
    "index": "F25546",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And each, and what you do is pass write lines of character vector and each element of the character vector becomes a line in the text file.",
    "output": "これの使い方は、writeLinesに文字ベクトルを渡すと文字ベクトルの各要素がテキストファイルの各行になります。"
  },
  {
    "index": "F25547",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can also use readLines to read elements from a web page, so for example, you can use the URL function to create a connection to a website, so this website here is the Johns Hopkins School of Public Health website.",
    "output": "例えば、url関数を使ってウェブサイトへのconnectionを作ります。これはJohnsHopkinsSchoolofHealthのウェブサイトで、このサイトの読み込み用にconnectionを開きます。"
  },
  {
    "index": "F25548",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'm going to open the connection there for reading, and then I'm going to read lines from this connection.",
    "output": "そして、このconnectionから行を読み込みます。"
  },
  {
    "index": "F25549",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so and I'm, and then and so the lines of text that come from the connection are going to be stored in this character vector x.",
    "output": "そして、connectionから取得したテキストの行は文字ベクトルxに格納されます。"
  },
  {
    "index": "F25550",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I look at the first couple of lines from x you can see that it looks like HTML which is kind of what you would expect.",
    "output": "ここで、xの最初の数行を見ると想像したのと同じようなHTMLが見えます。"
  },
  {
    "index": "F25551",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the URL function is useful for creating a connection to a kind of a non file object.",
    "output": "url関数はファイルでないオブジェクトへconnectionを作るのに便利でreadLinesはconnectionからテキストを読むのに便利です。"
  },
  {
    "index": "F25552",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is another way to read data beyond using functions like read.table or read.csv",
    "output": "これがread.tableやread.csvなどの関数を使っても読めないデータを読む方法の1つです。"
  },
  {
    "index": "F25553",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm going to continue to talk about data types, and basic operations in R.",
    "output": "引き続き、Rのデータ型と基本的な操作について説明します。"
  },
  {
    "index": "F25554",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In particular in this video I'm going to talk about subsetting objects in R.",
    "output": "特に、このビデオではRオブジェクトの一部分を取り出しサブセットにすることを説明します。"
  },
  {
    "index": "F25555",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are a couple of different operators that you can use, to extract subsets of diff, of R objects.",
    "output": "何種類かの演算子によってRオブジェクトからサブセットが抽出できます。"
  },
  {
    "index": "F25556",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the sing, the basic kind of principles to remember here is that the single square bracket always returns an object of the same class as the original.",
    "output": "ここで一つ覚えておいていただきたい基本的な原則は常に角カッコは参照しているオブジェクトを同じクラスのままで返すということです。"
  },
  {
    "index": "F25557",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the subset a vector, you're going to get back a vector.",
    "output": "このためベクトルのサブセットを作るとベクトルが返ってきます。"
  },
  {
    "index": "F25558",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you subset a list, you're going to get back a list.",
    "output": "リストのサブセットを作るとリストが返ってきます。"
  },
  {
    "index": "F25559",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Any time you used the single bracket operator to subset an object, you'll get the same, an object of the same class back.",
    "output": "オブジェクトをサブセットするために角カッコ演算子を使うと参照しているオブジェクトと同じクラスが常に返されます。"
  },
  {
    "index": "F25560",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "si, furthermore the single bracket operator can be used to select more than one element of an object.",
    "output": "さらに、角カッコ演算子はオブジェクトから2要素以上を選択するのに使えます。"
  },
  {
    "index": "F25561",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "With one ex, exception that we'll get to later.",
    "output": "1つ例外がありますがのちほど説明します。"
  },
  {
    "index": "F25562",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But double bracket operator is used to extract elements of a list or a data frame.",
    "output": "二重角カッコはデータフレームやリストの要素を抽出するのに使います。"
  },
  {
    "index": "F25563",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It can only be used to exa, extract a single element and.",
    "output": "ただ、1つの要素しか抽出できません。"
  },
  {
    "index": "F25564",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the class of the returned object will not necessarily be a list or a data frame.",
    "output": "また、そこで使ったリストやデータフレームオブジェクトから返されたオブジェクトのクラスは必ずしもリストやデータフレームとは限りません。"
  },
  {
    "index": "F25565",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the idea with the double bracket operator is that, remember that lists can, can, can hold things that are of many different classes.",
    "output": "リストは異なるクラスを格納しておけるため全要素のクラスが同一になっている必要がありません。"
  },
  {
    "index": "F25566",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the first element might be a vec a numeric vector, the second element might be a data frame, the third element might be a complex vector, et cetera.",
    "output": "例えば、1つ目の要素は実数ベクトルで2つ目の要素はデータフレームで3つ目の要素は複素数ベクトルとなっているかもしれません。"
  },
  {
    "index": "F25567",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so when you use the double bracket operator to extract an element of a list, the oh, the object that comes back maybe, may not be a list, it may be an object of a totally different class.",
    "output": "このため、リスト内の要素を抽出するには二重角カッコを使いますが返されるオブジェクトはリストでないかもしれません。"
  },
  {
    "index": "F25568",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The dollar sign is used to extract elements of a list, again of a list or data frame that have a name.",
    "output": "$演算子ではリストの要素を抽出します。リストやデータフレームには名前があります。"
  },
  {
    "index": "F25569",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Very similar objects can have names and the reason, one of the reasons you've used names in an object is so that you can reference elements of the object by the different names.",
    "output": "オブジェクトの名前を使う理由には個別の名前を指定することでオブジェクトの要素を参照できるようにするという点があります。"
  },
  {
    "index": "F25570",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Otherwise the, the semantics of the dollar sign are similar to the double bracket in the sense that when you use the dollar sign to extract an element of an object it may or may not be of the same class as the original object.",
    "output": "$演算子の意味は二重角カッコと似ていて$演算子を使ってオブジェクトの要素を抽出します。"
  },
  {
    "index": "F25571",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here is the first, the first example, a very simple vector, a character vector called x.",
    "output": "最初の例として、ここに単純な文字ベクトルxがあります。"
  },
  {
    "index": "F25572",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and I'm going to use the single bracket operator to extract the first element.",
    "output": "そして角カッコを使って、最初の要素を抽出します。"
  },
  {
    "index": "F25573",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, what I get back is a, is another character vector with the single element a in it.",
    "output": "返ってきたのはaで、aがある1つ要素の文字ベクトルです。"
  },
  {
    "index": "F25574",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I, if I use, if I try to extract the second element of x, what I would get returned back to me is a character vector with the element b in it.",
    "output": "xの2つ目の要素を抽出するならbがある1要素の文字ベクトルが返ってきています。"
  },
  {
    "index": "F25575",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I could also extract a sequence of elements so if I say, If I, If I want to get the first four elements of x I can cre, construct the sequence one through four and then I get a, b, c, c.",
    "output": "xの最初の4要素を抽出したいときは連番の1から4を作ればabccが返ってきます。"
  },
  {
    "index": "F25576",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in these three examples here what I've done is I, I, is I subset the vector x using a numeric index so the numeric index is one, two or the sequence one through four.",
    "output": "ここでお見せした3つの例ではベクトルxを数値インデックスでサブセットしました。"
  },
  {
    "index": "F25577",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The oth, another type of index that you can use is the, is a logical index.",
    "output": "違う種類のインデックスも使えて論理値のインデックスがあります。次の例ではベクトルxをサブセットしますが文字aよりも大きい全要素を抽出します。"
  },
  {
    "index": "F25578",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in this next example here, I'm going to subset the vector x and I want, I only want all the elements were, that are greater than or equ, sorry, that are greater than the letter a, right?",
    "output": "これは少し奇妙に感じるかもしれませんが数字ではなく大なりの演算子を文字に対して使っています。"
  },
  {
    "index": "F25579",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, you might, it might seem strange to you that I'm using the greater than sign with letters instead of numbers but there is a lexicographical ordering to the letters, and all the letters that are greater than a are letters like b, c, d, e, et cetera.",
    "output": "しかし、文字にも辞書式順序があります。a以外の文字がaよりも大きくb、c、d、eなどがあります。"
  },
  {
    "index": "F25580",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I get returned to me is a character vector that only contains the letters that are greater than a.",
    "output": "ここで返ってきているのは文字ベクトルでaよりも大きい文字のみが含まれています。"
  },
  {
    "index": "F25581",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here I've got b, c, c, and d.",
    "output": "このように、b、c、c、dが返ってきています。"
  },
  {
    "index": "F25582",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The other thing I can do, is I can create a logical vector, which here I call u, which is just the it's a, it's, it tells it's a true or false vector, which tells me, which tells me which elements of the vector x are greater than a.",
    "output": "他にも、論理ベクトルを作ってuと名付けます。uはTRUEかFALSEを返すベクトルでこれによってベクトルxのどの要素がaよりも大きいかを返します。"
  },
  {
    "index": "F25583",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if I print out u here I can see that the, the first element is equal to a, so it's not greater than a.",
    "output": "uを出力すると最初の要素はaと同一値です。"
  },
  {
    "index": "F25584",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then, the next four are greater than a, but then the last element is equal to a, so again, that's false.",
    "output": "よって、aより大きくものではありません。"
  },
  {
    "index": "F25585",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, I can subset the vector x with this u vector, and then I get out all the elements that are greater than a.",
    "output": "続く4つの要素はaよりも大きいですが最後の要素はaと同一値なのでこれもFALSEです。"
  },
  {
    "index": "F25586",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are two types of indices that I use here, one, the first type with the numeric index.",
    "output": "ベクトルuでベクトルxのサブセットを作れます。そして、aよりも大きい要素を返させています。"
  },
  {
    "index": "F25587",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the second type was the logical index.",
    "output": "1つ目は数値のインデックスで2つ目は論理値のインデックスです。"
  },
  {
    "index": "F25588",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So subsetting a list is a little bit different.",
    "output": "リストをサブセットする場合には少し挙動が違います。"
  },
  {
    "index": "F25589",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because you can use the double bracket or the dollar sign operator.",
    "output": "二重角カッコか$を使えるからです。"
  },
  {
    "index": "F25590",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can also use the single bracket operator.",
    "output": "また、角カッコも使えます。"
  },
  {
    "index": "F25591",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That's an ind, and it's a sequence 1 through 4.",
    "output": "1つ目の要素fooはインデックスで1から4の連番です。"
  },
  {
    "index": "F25592",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the second element is named bar, and it's the number 0.6.",
    "output": "2つ目の要素はbarで数値の0.6です。"
  },
  {
    "index": "F25593",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is a list of two elements in it.",
    "output": "これらの2つの要素を含んだリストです。"
  },
  {
    "index": "F25594",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I get, when I, remember the single square bracket always returns the element that's the same class as the original.",
    "output": "角カッコを使って最初の要素を抽出できますが角カッコは常に参照元のクラスと同じクラスを返すのでしたね。"
  },
  {
    "index": "F25595",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if x is a list, than x bracket 1 is going to be a list too.",
    "output": "xがリストならxもリストになります。"
  },
  {
    "index": "F25596",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I get back is a list that has element call foo, which is a sequence 1 through 4.",
    "output": "返されたのはリストでfooという要素がありリストには1から4の連番です。"
  },
  {
    "index": "F25597",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now if I use, so if I use the double bracket then if I said x double bracket 1, what I get back is just a sequence, 1 through 4.",
    "output": "ここで、二重角カッコを使うと例えばxだと1から4の連番だけが返ってきます。"
  },
  {
    "index": "F25598",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so the difference here is that in the first example, I got a list that contained the sequence 1 through 4, and in the second example, I got just the sequence.",
    "output": "この例での違いは最初の例ではリストが返されて1から4の連番を含んでいました。"
  },
  {
    "index": "F25599",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That's the difference between the single bracket and the double bracket operator.",
    "output": "これが角カッコ演算子と二重角カッコ演算子の違いです。"
  },
  {
    "index": "F25600",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In the next example here I'm using a dollar sign.",
    "output": "次の例では、$を使います。"
  },
  {
    "index": "F25601",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I'm saying, x dollar bar.",
    "output": "例えば、x$barと書けばbarという名前と関係のある要素を返します。"
  },
  {
    "index": "F25602",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in that case it's the, it's a single number 0.6.",
    "output": "この場合には、ただ0.6が返ってきます。"
  },
  {
    "index": "F25603",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can also use the double bracket operator and pass in a string.",
    "output": "二重角カッコ演算子を使って文字列を渡すこともできます。"
  },
  {
    "index": "F25604",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So x double bracket quote bar is the same as doing as x dollar bar and it just gives me 0.6.",
    "output": "xとすればx$barと同じことで0.6が返ってきます。"
  },
  {
    "index": "F25605",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I use the single bracket with the name, I can say x bracket quote bar, that gives me a list with the element bar in it.",
    "output": "xのように角カッコで名前を指定すれば要素barが入ったリストを返します。"
  },
  {
    "index": "F25606",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So remember, because the single bracket always returns a list if I'm going to subset a list.",
    "output": "リストをサブセットすると角カッコでは常にリストを返すためです。"
  },
  {
    "index": "F25607",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the nice thing about being able to subset an element using its name, is that you don't have to remember where it is in the list.",
    "output": "要素を名前を使ってサブセットすることで良いのはその要素のリスト内での場所を覚えておく必要がないからです。"
  },
  {
    "index": "F25608",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I couldn't remember whether bar was the first element or was the second element, I don't have to remember whether, what, where it is in order to use the numeric index.",
    "output": "bar要素が1つ目か2つ目なのか思い出せない時には数値インデックスでどの位置だったのかを覚えている必要はありません。"
  },
  {
    "index": "F25609",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can just use its name, and then I don't have to, then it will automatically extract that, extract that element from the list.",
    "output": "思い出す必要はなくリストからその要素を自動的に抽出してくれます。"
  },
  {
    "index": "F25610",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you want to extract multiple elements of a list then you need to use the single bracket operator.",
    "output": "もしリストから複数の要素を抽出したい場合には角カッコ演算子を使う必要があります。"
  },
  {
    "index": "F25611",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if I want the third, the first and the third element here, in which case, which is the foo and the baz element, I can pass a, a vector, a 1, 3, the numeric vector 1, 3 to x using the single bracket operator.",
    "output": "例えば、1つ目と3つ目の要素この場合、fooとbazを抽出したい場合にはxに対して角カッコ演算子で1,3の実数ベクトルを渡すとリストが返ってきて要素fooと要素bazが含まれています。"
  },
  {
    "index": "F25612",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's how I extract multiple elements of a list.",
    "output": "こうやって複数の要素をリストから抽出しました。"
  },
  {
    "index": "F25613",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's, you cannot use the double bracket or the dollar sign operators when you only extract multiple elements of a list.",
    "output": "複数の要素を抽出したいときには二重角カッコや$演算子は使えません。"
  },
  {
    "index": "F25614",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The nice thing about the double bracket operator, which is different from the dollar sign, is that you can use the double bracket operator to, to, to index it a list, where the index itself was computed.",
    "output": "$演算子とは異なっていて二重角カッコが良いのは二重角カッコ演算子を使ってインデックス自体が計算で作られたものをリストのインデックスにできるからです。"
  },
  {
    "index": "F25615",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, notice that when I used the dollar sign before, I had to, I actually typed out the word bar.",
    "output": "$を前に使った時にはbarという単語を入力する必要がありオブジェクトの名前を入力する必要がありました。"
  },
  {
    "index": "F25616",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But sometimes the name of the element is actually the result of some computation.",
    "output": "ただ、要素の名前が計算結果で作られていることがあります。"
  },
  {
    "index": "F25617",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example here I've got a list with three elements, foo, bar, and baz.",
    "output": "例えば、foo、bar、bazの3つの要素があるリストがあります。"
  },
  {
    "index": "F25618",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I create a variable called name which is actually the string foo.",
    "output": "fooの文字列が入ったnameという変数を作ります。"
  },
  {
    "index": "F25619",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Notice that the there's no element in the list that has the name, name in it.",
    "output": "この変数に対して二重角カッコ演算子を使うとリストの中にはnameという要素はありませんね。"
  },
  {
    "index": "F25620",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But there is an element in the list that has the name foo in it.",
    "output": "でも、リスト中にfooという名前の要素はあります。"
  },
  {
    "index": "F25621",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now when I, when I pass this variable called name into the double bracket operator, it returns me the, the element that was associated with foo.",
    "output": "二重角カッコ演算子に変数nameを入れるとfooと関連した要素が返されます。"
  },
  {
    "index": "F25622",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "because that's what the value of the name variable is.",
    "output": "変数nameの値がfooだからです。"
  },
  {
    "index": "F25623",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I can, if I compute the index that I want to use, then I have to use the double bracket operator.",
    "output": "使いたいインデックスの値を計算した時は二重角カッコ演算子を使う必要があります。"
  },
  {
    "index": "F25624",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I use the dollar sign, then it's going to literally look for an element of the list that's, that has the word name associated with it, and that of course doesn't exist in this list.",
    "output": "$演算子をnameと使うとリストの中からnameと関連する要素を探そうとします。もちろん、この要素はリストにありません。"
  },
  {
    "index": "F25625",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So to use the dollar sign I need to use a literal symbol.",
    "output": "なので、$を使うときには実際のリテラルのシンボルを使う必要があります。"
  },
  {
    "index": "F25626",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, the double bracket operator can take an integer sequence in as, rather than a single number, and the way you can think of this is that it kind of recurses into the list.",
    "output": "二重角カッコ演算子では1つの数ではなく整数の位置の数を使えます。これはリストに再帰していると考えることもできます。"
  },
  {
    "index": "F25627",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you look at this current list I've got here, with the first element a is another list which has elements 10, 12 and 14.",
    "output": "ここにあるリストを見ると1つ目の要素のaは10、12、14の要素がある別のリストです。"
  },
  {
    "index": "F25628",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So suppose I wanted to extract the number 14.",
    "output": "ここで14を抽出したいとします。"
  },
  {
    "index": "F25629",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, that's really the third element of the first element, right?",
    "output": "1つ目の要素の中の3つ目の要素です。"
  },
  {
    "index": "F25630",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's the third element of the list, which happens to be the first element of the other list.",
    "output": "これはリストa内の3つ目の要素ですがリストの1つ目の要素でもあります。"
  },
  {
    "index": "F25631",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I can extract the 1, 3 element term by passing the vector 1, 3 to it to the x list using the double bracket operator.",
    "output": "1、3の要素を取り出すには二重角カッコを使ってベクトル1、3をxに対して渡します。"
  },
  {
    "index": "F25632",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's equivalent to kind of doing this double sub-setting of one and three.",
    "output": "これは1と3をサブセットするのと同じです。"
  },
  {
    "index": "F25633",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can also extract the first element of the second element by use, by passing the integer vector 2,1 to get 3.14",
    "output": "2つ目の要素の1つ目の要素も整数ベクトル2,1を渡して抽出できて3.14が返ってきます。"
  },
  {
    "index": "F25634",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So partial matching is a handy tool which it, which it often saves you a lot of typing at the command line.",
    "output": "次に、部分一致はとても便利です。コマンドラインへの入力をかなり減らすことができます。"
  },
  {
    "index": "F25635",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's not particularly useful when you're pro, when you're writing out programs and functions but it's very useful when you're kind of working at the command like typing things as fast as you can.",
    "output": "プログラムや関数を書く場合にはそれほど役に立つというわけではないですがコマンドラインで作業している時にはできるだけ素早く入力したいのでとても役に立ちます。"
  },
  {
    "index": "F25636",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the idea with partial matching is that it works with the double bracket and the single, and the dollar sign operator.",
    "output": "部分一致というのは角カッコ、二重角カッコ、$の演算子で使えます。"
  },
  {
    "index": "F25637",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, suppose I have a list x which has an element in it called aardvark which is the sequence 1 through 5.",
    "output": "例えば、リストxがありこれは1から5の連番でできたaardvarkという要素があったとします。"
  },
  {
    "index": "F25638",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And suppose typing out the word aardvark every single time is a bit of a pain so I'm just going to type the word a.",
    "output": "毎回aardvarkと入力するのはちょっと面倒ですよね。"
  },
  {
    "index": "F25639",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, the way the dollar sign works by default is that it looks for it looks for a name in this list, that matches the letter a.",
    "output": "$はaと一致する名前をリストから探して動作するようにデフォルトでなっています。"
  },
  {
    "index": "F25640",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In this case there's only one element.",
    "output": "この場合1つの要素だけが合致してaardvarkが見つかります。"
  },
  {
    "index": "F25641",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then it gives me the, the el, the object associated with aardvark, which is the sequence 1 through 5.",
    "output": "そして、1から5の連番が入っている関連するオブジェクトを返します。"
  },
  {
    "index": "F25642",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I use the double bracket operator things are a little bit different.",
    "output": "二重角カッコ演算子を使う時は少し違います。"
  },
  {
    "index": "F25643",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what the double bracket operator expects, is that it's going to be, that the name that you pass it is going to be an exact match for one of the names in the list.",
    "output": "二重角カッコ演算子のうしろにはリスト内の名前のどれかに全体一致する名前を書くことが決まっています。"
  },
  {
    "index": "F25644",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So by default the double bracket operator doesn't do partial matching like the dollar sign does.",
    "output": "このため、二重角カッコは$のようにデフォルトでの部分一致は行いません。"
  },
  {
    "index": "F25645",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now when I pass x double bracket a what happens is I get null back, because there's no element of the list that has the name a.",
    "output": "xを実行するとNULLが返ってきます。リスト内にaという名前の要素がないからです。"
  },
  {
    "index": "F25646",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But there's a some, a second argument that you can pass to the dou, double bracket operator, which is the exact argument.",
    "output": "二重角カッコ演算子の2つ目の引数にはexact引数を指定することができます。"
  },
  {
    "index": "F25647",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if you specify that exact equals false. And then when I pass at x double bracket a, it gives me the sequence 1 through 5, because that's the one that mat, matches the letter a the closest.",
    "output": "xを実行するときにexact=FALSEを指定すると1から5の連番を返します。"
  },
  {
    "index": "F25648",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Last thing I want to talk about is removing missing values or NA values from an object.",
    "output": "最後に、オブジェクトから欠損値やNA値を削除する方法について説明します。"
  },
  {
    "index": "F25649",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is a very common operation in, in, in data analysis because most realistic data have lots of missing values.",
    "output": "これはデータ分析では非常に頻繁に行う操作で現実的なデータの多くには欠損値が多く存在するからです。"
  },
  {
    "index": "F25650",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the way you can do this for, of either a vector, or a matrix, or a data frame is you want to create a logical vector which tells you where the NA's are and so that you can remove them by sub-setting.",
    "output": "ベクトルか行列かデータセットに対してこの操作を行うにはまず論理ベクトルを作ってどの値がNA値が分かるようにします。"
  },
  {
    "index": "F25651",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've got a, a vector x, this is a very simple example.",
    "output": "そして、サブセットを実行することでNA値のものを削除します。ここにベクトルxがあります。"
  },
  {
    "index": "F25652",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But then there are missing elements NA in the third position and in the fifth position.",
    "output": "これはとても単純な例で1、2、4、5の数値しかないですが3つ目と5つ目にNAの要素があります。"
  },
  {
    "index": "F25653",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I want to do is I want to get a vector back that's just one two four five, the non missing values.",
    "output": "ここで行いたいのは1、2、4と5だけのNA値外でできたベクトルを返してNA値は取り除いて計算できるようにすることです。"
  },
  {
    "index": "F25654",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I want to strip out the missing value so I can maybe do some computation.",
    "output": "最初にis.na関数を使ってベクトル内を検査しNA値の要素を調べます。"
  },
  {
    "index": "F25655",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what I, the first thing I do is I use the is.na function to, to go through the vector and tell me which elements are NA and I create a new vector called, which I called bad here.",
    "output": "badという名前でベクトルを作ります。"
  },
  {
    "index": "F25656",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, bad is going to be a logical vector which tells, which, which is true if the element is missing and false if it's not missing.",
    "output": "badは論理ベクトルで欠損値はTRUEに、欠損値以外はFALSEの値を返します。"
  },
  {
    "index": "F25657",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, even though I haven't printed it here the, the, the bad vector is going to be a logical vector that has false, false, true, false, true, false.",
    "output": "ここでは出力していませんがベクトルbadは論理ベクトルでFALSE、FALSE、TRUE、FALSE、TRUE、FALSEという値になるはずですね。"
  },
  {
    "index": "F25658",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, because the third and the fifth elements are missing.",
    "output": "3つ目と5つ目の要素が欠損しているからです。"
  },
  {
    "index": "F25659",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now that tells me which ones are missing but actually I don't want the ones that are missing, I want the ones that are non missing.",
    "output": "これでどの要素が欠損か分かりましたが欠損値部分は不要で欠損値以外の部分を使いたいのでこのbadの逆の値を返すためには!"
  },
  {
    "index": "F25660",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I take x single bracket bang bad and that gives me the good elements which are 1, 2, 4 and 5.",
    "output": "x[!bad]とすれば有効な要素の1、2、4、5が返ってきます。"
  },
  {
    "index": "F25661",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what if there are a multiple vectors or multiple objects and you want to take and each one has a kind of missing values in slightly different places and you kind of, you want to take the subset of all the objects that have no missing values, all right?",
    "output": "もし、複数オブジェクトが入った複数のベクトルがあってベクトル毎に異なる欠損場所がある場合全てのオブジェクトに欠損がないようにサブセットを取りたいですよね。"
  },
  {
    "index": "F25662",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which is 1, 2, 4 and 5, and missing values scattered about.",
    "output": "ここにベクトルxを作り1、2、4、5とバラバラに欠損値があるものを作ります。"
  },
  {
    "index": "F25663",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then y is, is a character vector with also some missing values in it.",
    "output": "次に文字ベクトルのyを作って欠損値を入れておきます。"
  },
  {
    "index": "F25664",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can use the complete cases function on both vectors which will give me a vector that tells me which of, of, of the two different vectors, which ones had were, which, which are, which positions are there that have both elements non missing.",
    "output": "complete.cases関数を両方のベクトルに使ってベクトルを返してもらいます。このベクトルでは比較元の2つのベクトルの両方に欠損値がない位置を返します。"
  },
  {
    "index": "F25665",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can see the first two are, are both non missing.",
    "output": "見ての通り、最初の2つはどちらも欠損値ではありません。"
  },
  {
    "index": "F25666",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I got 1, 2, in the first one, and a, b in the second one.",
    "output": "ここに1つ目のベクトルには1、2があり2つ目にはa、bがあります。"
  },
  {
    "index": "F25667",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The third one's missing, the fourth one is non missing the, the fifth one is missing and the sixth one is non missing.",
    "output": "5つ目の要素は欠損で6つ目の要素は欠損ではありません。"
  },
  {
    "index": "F25668",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, of, for the both, for both vectors x and y, I want the first, the second, the fourth, and the sixth elements.",
    "output": "このため、ベクトルxとyでは1、2、4、6つ目の要素が必要です。"
  },
  {
    "index": "F25669",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now when I subset x, I get the good elements of that, and when I subset y, I also get the good elements of that.",
    "output": "xをgoodでサブセットするとx内のgoodの要素が返されてyをgoodでサブセットするとy内のgoodの要素が返されます。"
  },
  {
    "index": "F25670",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's how I can look at multiple objects and kind of subset all the missing values out to get the good elements.",
    "output": "このようにして複数のオブジェクトを見て欠損値を除外して有効な要素を取得できます。"
  },
  {
    "index": "F25671",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You could also remove you can also use complete cases to remove missing values from data frames.",
    "output": "complete.cases関数を使うとデータフレームから欠損値を除外することができます。"
  },
  {
    "index": "F25672",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've got a simple data frame where I'm showing the first six rows.",
    "output": "ここに、単純なデータフレームがあり最初の6行が表示されています。"
  },
  {
    "index": "F25673",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "As you can see there are six columns to this data frame so there's six variables.",
    "output": "見てのとおり、データフレームには列が6列あり、6つの変数があるということです。"
  },
  {
    "index": "F25674",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there's some missing values in the ozone variable and there's some missing values in the solar.r variable.",
    "output": "ozone変数に欠損値がありまた、Solar.R変数に欠損値があります。"
  },
  {
    "index": "F25675",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so all I want is the is the, is the, are the rows of the data frame where all the values are non missing, right?",
    "output": "ここではデータフレームの中で行の全ての値が欠損でないものを出力します。"
  },
  {
    "index": "F25676",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in this simple example, the rows that I want are rows 1 through 4.",
    "output": "この単純な例では1行から4行までです。"
  },
  {
    "index": "F25677",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I create a, a logical vector that I called good here, so the logical vector here tells me which rows are complete.",
    "output": "complete.casesをairqualityデータフレームに使いgoodと名付けた論理ベクトルを作ります。"
  },
  {
    "index": "F25678",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then when I subset out the air quality matrix take and take out the first couple of rows you can see that I now, that none of the rows have any missing values in them.",
    "output": "airqualityの行列をサブセットで消去して最初の該当行数行を消去し欠損値のある行がなくなったのが分かります。"
  },
  {
    "index": "F25679",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's subsetting out missing values.",
    "output": "これで、欠損値を消去できます。"
  },
  {
    "index": "F25680",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there, in complete cases of very handy function which is when, when you have multiple sets of vectors or dat, or large data frames or you want to subset all out, all the missing values.",
    "output": "complete.casesは非常に便利な関数で複数のベクトルや大きなデータフレームがあるときにここから欠損値を全て消去するのに使えます。"
  },
  {
    "index": "F25681",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, vectorized operations, is one of the features of the R language that make it, that makes it easy to use, on the command line.",
    "output": "ベクトル操作は、コマンドライン上で使っても使いやすくなるR言語の1つの機能です。"
  },
  {
    "index": "F25682",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It makes very, kind of, nice to write code, without having to do lots of looping, and things like that.",
    "output": "loopや、それに似たことをせずにコードが書けるようにしてくれるいい機能です。"
  },
  {
    "index": "F25683",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Many other types of languages, like MATLAB have this kind of feature.",
    "output": "MATLABのような他の言語の多くが同様の機能を備えています。"
  },
  {
    "index": "F25684",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, the idea with vectorized operations is, is that things can happen in parallel, when you, for example want to do a computation.",
    "output": "さて、ベクトル操作というのは、例えば計算を行うときに並列処理で行えるということです。"
  },
  {
    "index": "F25685",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, suppose I got two vectors here x and y.",
    "output": "ここに、xとyの2つのベクトルがあります。"
  },
  {
    "index": "F25686",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "x is the sequence one through four and y is the sequence six through nine.",
    "output": "xは1から4の連続する数字でyは6から9の連続する数字です。"
  },
  {
    "index": "F25687",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I want to add the two vectors together.",
    "output": "この2つのベクトルを一緒に足したいとします。"
  },
  {
    "index": "F25688",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, when I say I want to add them, what I mean is I want to add the first element of x to the first element of y, the second element of x to the second element of y, et cetera, the third element to the third element.",
    "output": "足したいというのはxの1つ目の要素をyの1つ目の要素に加えて、xの2つ目の要素にyの2つ目の要素を加えて、3つ目の要素を3つ目の要素に加えるということです。"
  },
  {
    "index": "F25689",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I want to kind of do things in parallel like that.",
    "output": "そして、こんなことを並列で行いたいのです。"
  },
  {
    "index": "F25690",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in other languages you might have to use a loop to do that, so you'd loop through each element and kind of add them one by one.",
    "output": "他の言語だったら、loopを使って、行う必要があるかもしれません。ひとつひとつの要素を繰り返し処理して1つずつ加えていきます。"
  },
  {
    "index": "F25691",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But in R you can just use the plus to, on the two vectors, and it'll just add them together so x plus y kind of does what you would expect.",
    "output": "でも、Rでは、+(プラス)をこの2つのベクトルに使えば、Rは加えていってくれます。x+yで、期待する結果を計算します。"
  },
  {
    "index": "F25692",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It adds 1 to 6, 2 to 7, 3 to 8, and 4 to 9, so you get the vector 7, 9, 11, 13.",
    "output": "1を6に、2を7に、3を8に、4を9に加えて、7、9、11、13のベクトルを返します。"
  },
  {
    "index": "F25693",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "similarly, you can use the greater than, or less than symbols to, give you logical vectors.",
    "output": "同じように、不等号も使えて論理型ベクトルを返します。"
  },
  {
    "index": "F25694",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So well x is actually a, a vector of 4 numbers.",
    "output": "例えば、x>2を行うとxは実際には4つの数のベクトルですが、どの数を2と比較するのでしょうか?"
  },
  {
    "index": "F25695",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, which one, so, which number are you comparing to 2?",
    "output": "ベクトル操作では、全ての数字を2と比べてベクトルで結果を返します。"
  },
  {
    "index": "F25696",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, the, the vectorized operation compares all the numbers to 2, and it gives you a vector of falses and trues depending on which numbers happen to be bigger than 2.",
    "output": "各数字が2を超えたかどうかでTRUEかFALSEを返します。また、以上の表記(>=)も使うことができます。"
  },
  {
    "index": "F25697",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can also use greater than equal to, and that'll tell you which numbers are greater than and equal to 2, and the double equals sign, tests for equality.",
    "output": "こうすると各数字が2以上かどうかを返し、==を使うと等しいかを返します。"
  },
  {
    "index": "F25698",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it'll take each element of y and test to see whether it's equal to 8.",
    "output": "ここでは、yの各数字が8と等しいか判定しています。"
  },
  {
    "index": "F25699",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "other, and the other kind of, or arithmetic operations like multiplication, by the asterisk, and division, by the solidus, are all vectorized types of operation.",
    "output": "他にも乗算のような数値計算はアスタリスク(*)で除算はスラッシュ(/)で行いこれらも全てベクトル操作です。"
  },
  {
    "index": "F25700",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you want to multiply or divide, add, subtract, vectors, you just you can do the natural thing, just add them together or multiply them together, and they will be, and they will be the operation will be done in parallel.",
    "output": "ベクトルに対して加減乗除計算をしたいときにはこうすることで自然に行えます。"
  },
  {
    "index": "F25701",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Similarly you can do, you can do You can add make, you can add and subtract, and multiply and divide matrices together.",
    "output": "2つを足したり2つを掛けたりすることで並列に処理されます。"
  },
  {
    "index": "F25702",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's useful to know this because there are different types of mult matrix multiplication.",
    "output": "同じように行列に対しても加減乗除計算を行えます。"
  },
  {
    "index": "F25703",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I've created two matrices here, x and y.",
    "output": "ここにxとyの2つの行列を作りました。"
  },
  {
    "index": "F25704",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "X is the matrix 1 through 4, it's a two by two matrix.",
    "output": "xは1から4でできた2x2の行列です。"
  },
  {
    "index": "F25705",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I just do x times y, this is not a mat, matrix multiplication.",
    "output": "x*yをすると、行列の掛け算にはなりません。"
  },
  {
    "index": "F25706",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first, the kind of the 1, 1 element of x is multiplied by the 1, 1 element of y.",
    "output": "また、xのの要素で掛け算しています。"
  },
  {
    "index": "F25707",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, each element is multiplied, together in parallel.",
    "output": "つまり、それぞれの要素が並列に掛け算されています。"
  },
  {
    "index": "F25708",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is not a matrix inverse or something like that, this is just dividing one matrix, literally element by element by another.",
    "output": "割り算を実施したときも逆行列などの計算ではなく1つ目の行列の要素を別の行列の要素で割り算するだけです。"
  },
  {
    "index": "F25709",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you want to do a true matrix multiplication, you have to use the %*%, that's the symbol for a matrix multiplication.",
    "output": "本当の行列の積を計算するときには行列の積の記号%*%を使います。"
  },
  {
    "index": "F25710",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you, so, this is just, that's it for vectorized operations for now, You'll see these a lot more often later on, but the idea, but I just wanted to introduce this idea, because it makes code easier to write.",
    "output": "今のところはここまででベクトル操作については終わりです。今後はもっと頻繁に出てきますが考え方を紹介しておきました。"
  },
  {
    "index": "F25711",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And for those of you who are kind of used to other types of programming languages, if you've programmed in languages where you can't do this kind of thing, it's sometimes, it's common to kind of reflexively go to something like a for loop or a while loop or whatever it is.",
    "output": "これまでに他の種類のプログラム言語でプログラムしたことがあってもこのベクトル操作ができない言語だった場合には、forやwhileなどの繰り返し処理を行うことでこの計算を行うことが普通です。"
  },
  {
    "index": "F25712",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But in the but in a language like R, you can just use the vectorized operations to make the code a lot simpler.",
    "output": "しかしR言語のような言語ではベクトル操作を使うだけでコードをかなりシンプルにできます。"
  },
  {
    "index": "F25713",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Hi, everyone.",
    "output": "皆さん、こんにちは。"
  },
  {
    "index": "F25714",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I just want to introduce a experimental feature that we've, that we've developed for the R programming class.",
    "output": "このRプログラミングのクラス用に開発した実験的機能についてご紹介しておきます。"
  },
  {
    "index": "F25715",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's called Statistics with Interactive R Learning or SWIRL for short.",
    "output": "触ってRを学ぶ統計略してSWIRLと呼びます。"
  },
  {
    "index": "F25716",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it's, and it was developed by Nick Carchedi, who's a student here at the Johns Hopkins department of bio-statistics.",
    "output": "ここジョンス・ホプキンスのバイオ・スタティスティックス学部の学生ニック・カルケディが開発しました。"
  },
  {
    "index": "F25717",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is a system that allows you to kind of interactively learn R at your own pace.",
    "output": "これを使うと、自分のペースで触りながらRが学べます。"
  },
  {
    "index": "F25718",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it will walk you through a, a bunch of lessons about different aspects of the R language and you can kind of practice as you go.",
    "output": "R言語の様々な機能をひとつずつ見せてくれて練習することができます。"
  },
  {
    "index": "F25719",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, rather than kind of watching a lecture and then, you know, doing an assignment and kind of doing things piece by piece, you can actually work on R right in the R console in, in a kind of guided way.",
    "output": "クラスを見てからアサインメントをするのに1つ1つ操作するのではなくRのコンソールで案内されながらRで作業することができます。"
  },
  {
    "index": "F25720",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I think this, the SWIRL modules are really helpful and I encourage you to try to walk through them.",
    "output": "自分であれこれやりながら正解を見つけるのではありません。"
  },
  {
    "index": "F25721",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you decide to complete them you'll get you'll get a little extra credit through the programming assignment.",
    "output": "もし、SWIRLを完了していけばプログラムのアサインメントでは少しだけ追加点がもらえます。"
  },
  {
    "index": "F25722",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the, the modules are absolutely not required.",
    "output": "でも、モジュールはあくまで必須ではありません。"
  },
  {
    "index": "F25723",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, you don't have to worry about doing them.",
    "output": "モジュールを行おうと気にする必要はありません。"
  },
  {
    "index": "F25724",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can still do perfectly well in the class without doing the SWIRL modules.",
    "output": "SWIRLを行わなくてもクラスを完璧に終えることができます。"
  },
  {
    "index": "F25725",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Nevertheless, I encourage you to try it out.",
    "output": "そうではありますが、是非試してください。"
  },
  {
    "index": "F25726",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I think it'll be a lot of fun.",
    "output": "とても楽しめると思いますよ。"
  },
  {
    "index": "F25727",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In this lecture, I just want to get everyone on board with writing functions, because functions play a critical role in any R programming and you tend to write a lot of them when you're writing doing a lot of data analysis or doing a lot of kind of statistical analysis.",
    "output": "なぜなら、関数はRのどんなプログラムでも非常に決定的な役割を持っていてデータ分析や統計分析を行う際にも多くの関数を書くことになるからです。"
  },
  {
    "index": "F25728",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I just want to make sure that everyone can kind of get started writing functions and and particularly for those who are less familiar with programming languages in general.",
    "output": "そして、特にプログラム言語そのものにあまり慣れていない人が書けるようにしたいと思います。"
  },
  {
    "index": "F25729",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is just going to be about writing your first function.",
    "output": "つまり、このビデオは関数を初めて書くことを扱っていきます。"
  },
  {
    "index": "F25730",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's kind of like the hello world so to speak of R.",
    "output": "いわゆるHelloworldのR版のようなものです。"
  },
  {
    "index": "F25731",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first thing you're going to want to do is you going to want to write the function in a text file, all right.",
    "output": "まず、最初にすることはテキスト形式のファイルに関数を書いていくということです。"
  },
  {
    "index": "F25732",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's possible to write functions on the command line in R, but it usually no preferrable.",
    "output": "Rのコマンドラインで関数を書くことも可能ですが通常は、好まれないやり方です。"
  },
  {
    "index": "F25733",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So usually you're going to want to put your functions, in a separate file, separate from any interactive stuff that you're doing in the command line.",
    "output": "通常は、関数を個別のファイルに入れておくものです。コマンドラインで、動的に入力するものとは別にしておきます。"
  },
  {
    "index": "F25734",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In the future you'll want to put your functions in an R package, which is a kind of a more structured type of kind of, kind of environment with documentation and everything, but we won't talk about that now.",
    "output": "後々、作った関数をRのパッケージに入れようとするときには文書や他のものを含むようにした構造的環境にしますがここでは説明しないでおきます。"
  },
  {
    "index": "F25735",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right now the first thing you're going to want to do is put your functions in a text file.",
    "output": "ここでは、まずは関数を入れておくのはテキストファイルだということです。"
  },
  {
    "index": "F25736",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, so the first thing we're going to want to do is open up our studio.",
    "output": "そして、まず最初にするのはRStudioを起動します。"
  },
  {
    "index": "F25737",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So lets do that.",
    "output": "お手元でも、同じことが起こるかもしれませんがだいたいの場合には、閉じたりただ無視しておいて構いません。"
  },
  {
    "index": "F25738",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you can see here in R Studio there's some there's some stuff going on here from a previous project that I'm working on.",
    "output": "では、ここにRscriptを作りたいと思います。まずは、空のscriptを作ってコードを入れていきましょう。"
  },
  {
    "index": "F25739",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you, that may happen to you, and generally you can either close it or you can just ignore it.",
    "output": "ここで書く最初の関数は本当に単純なものです。2つの数値を使って足すだけのものにします。"
  },
  {
    "index": "F25740",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I wanted to create a new R script here, so let's create a clean script here to put our code into.",
    "output": "現実的には、この関数に意味はありませんが、この例を使って関数の構文の使用方法や、引数の指定方法や戻り値を返す方法を示します。"
  },
  {
    "index": "F25741",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first function I'm going to write is really simple it's just going to take two numbers and add them together.",
    "output": "この関数は、2つの数を足すのでadd2と呼ぶことにします。"
  },
  {
    "index": "F25742",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this function obviously doesn't have a real point to it but it shows you how to use the function syntax, how to specify the arguments and how to return the value.",
    "output": "まずは、function構文を使って書きはじめとします。"
  },
  {
    "index": "F25743",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the function that adds two values I'm just going to call it add two.",
    "output": "次に、これは2つの値を足すので2つの引数を取ります。"
  },
  {
    "index": "F25744",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and so you get it you use the function directive to start it off.",
    "output": "この2つの引数を、+の演算子を使って、足します。"
  },
  {
    "index": "F25745",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now it's going to take it's going to add two values so it has to take two arguments so I'm just going call the two arguments x and y and then I'm going to take the two arguments and add them together with the plus operator alright x plus y and then I close out the function with the curly brace.",
    "output": "x+yとして、さらに関数を波括弧で閉じます。"
  },
  {
    "index": "F25746",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can see that I didn't have to do anything special to return the value that that's the sum of the two elements because the or any R function, the, the function returns whatever the last expression was.",
    "output": "このように2つの要素を合計した値を返すために特に何かをする必要はありません。"
  },
  {
    "index": "F25747",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here there's only really one expression.",
    "output": "ここには、1つの文しかありません。"
  },
  {
    "index": "F25748",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So therefore its the last expression and, and it equals the sum of x and y.",
    "output": "つまり、これが最後の文でこの値は、xとyを足したものになっています。"
  },
  {
    "index": "F25749",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I can, I can highlight this guy and run it in the console, and you can see now I've got my function here.",
    "output": "画面右側に関数が来ています。"
  },
  {
    "index": "F25750",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can say add two, and lets give it say three and five and hopefully I get eight.",
    "output": "ここでadd2として、3と5を渡すと8が返ってくるといいですよね。"
  },
  {
    "index": "F25751",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it adds the two numbers together, and that's that.",
    "output": "つまり、2つの数を加えてこれはここで終わりです。"
  },
  {
    "index": "F25752",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's a very simple function, and and, you've now written your first function in R.",
    "output": "非常に単純な関数でしたがR言語で、最初の関数が書けましたね。"
  },
  {
    "index": "F25753",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "S the next function that I want to talk about is a little slightly more complicated.",
    "output": "さて、次の関数は少しだけ複雑になったものを説明します。"
  },
  {
    "index": "F25754",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's going to take a vector of numbers, it's going to, it's going to return the subset of the vector, that's, that's above the vector value of ten.",
    "output": "数値ベクトルを引数にしてベクトルのサブセットを返すものですが、10を超えるものを返すようにします。"
  },
  {
    "index": "F25755",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So any number that's bigger than ten, it's going to return those numbers for you.",
    "output": "つまり、10を超える数があったらこれらの数を返すようにします。"
  },
  {
    "index": "F25756",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, let's bring back our original function.",
    "output": "では、最初の関数を表示してみましょうか。"
  },
  {
    "index": "F25757",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "We'll call this one, above ten.",
    "output": "この関数はabove10と呼びましょう。"
  },
  {
    "index": "F25758",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Just because it gives you any number that's above ten.",
    "output": "ただ10を超えた数を返すからというだけの理由です。"
  },
  {
    "index": "F25759",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "snd, it's going to take a vector here, we'll call it x, you don't have to call it x, I'm just calling it that.",
    "output": "引数のベクトルはxをしましょう。かならずxと呼ぶ必要はありませんがxとしました。"
  },
  {
    "index": "F25760",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I like to open and close the curly braces right away, just so you know where the beginning and the end of the function is.",
    "output": "関数の始まりと終わりが分かりやすくするためです。"
  },
  {
    "index": "F25761",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you happen to have a lot of code in, you know, in, in a single file.",
    "output": "ひとつのファイルに長いコードを書いたときに分かりやすくなります。"
  },
  {
    "index": "F25762",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first thing I'm going to want to do is I want to construct a logical statement that figures out which elements of this vector x are, are greater than ten.",
    "output": "まず最初に行うのは論理文を書いてベクトルxのどの要素が10より大きいかを判定します。"
  },
  {
    "index": "F25763",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'm going to assign an object.",
    "output": "余談ですが、このまず、代入先のオブジェクトを指定します。"
  },
  {
    "index": "F25764",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'll call it use because these are, these are the numbers that I'm going to use.",
    "output": "合致した数値を使うのでuseと呼ぶことにします。"
  },
  {
    "index": "F25765",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'll say x greater than ten.",
    "output": "そして、xが10より大きいと指定します。"
  },
  {
    "index": "F25766",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this'll return a logical vector, of trues and falses to indicating which element of x is greater than ten.",
    "output": "余談ですが、このこれでTRUEとFALSEからなる論理ベクトルが返されてどの要素が10より大きいかを示してくれます。"
  },
  {
    "index": "F25767",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I'm going to subset the vector x with this logical vector.",
    "output": "次に、この論理ベクトルでベクトルxをサブセットします。"
  },
  {
    "index": "F25768",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now this function returns, the subset of the vector x that is bigger than ten.",
    "output": "これで、関数はベクトルx内の10より大きい数をサブセットして返します。"
  },
  {
    "index": "F25769",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course if there are no elements of x that are bigger than ten, that it will return an empty numeric vector.",
    "output": "もちろん、xの要素に10より大きいものがなければ空のベクトルが返されます。"
  },
  {
    "index": "F25770",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now of course, there's really nothing special about the number ten.",
    "output": "さて、もちろんですが、この10という数に特に意味があったわけではありません。"
  },
  {
    "index": "F25771",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I just kind of made that up, and so you may want to created a function that allows people to sub, to kind of extract the elements of a vector.",
    "output": "この数は思いつきで決めただけなので任意の数を指定して抽出するような関数を作りたいかもしれませんよね?"
  },
  {
    "index": "F25772",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So maybe you'll want to allow the user to specify that number.",
    "output": "ユーザーが数を指定できるようにしたいことでしょう。"
  },
  {
    "index": "F25773",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'll just call, I'll create a new function here.",
    "output": "ここに新しい関数を作りましょう。"
  },
  {
    "index": "F25774",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it doesn't have the ten encoded in it.",
    "output": "コードには、10が指定されていません。"
  },
  {
    "index": "F25775",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'll use the function directive, and I'll have a second arbitrary called n, which can be any number really.",
    "output": "function構文を使って2つ目の引数として任意の数nを指定できるようにします。では、始めていきます。"
  },
  {
    "index": "F25776",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So let's start it off, we'll get the curly braces in there, and now I'll create a logical statement that x is greater than n.",
    "output": "波括弧を入れましてそして、xがnよりも大きいという論理文を作ります。"
  },
  {
    "index": "F25777",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I'll subset the vector x based on that logical statement.",
    "output": "そして、論理文の結果に基づいてベクトルxをサブセットします。"
  },
  {
    "index": "F25778",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now if I can source this into R.",
    "output": "このテキストをRにコードとして入れてここから関数を実行できるようにします。"
  },
  {
    "index": "F25779",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'll just create a vector.",
    "output": "まずベクトルを作って1から10のベクトルxを作ります。"
  },
  {
    "index": "F25780",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'll say above x.",
    "output": "above(x)を指定します。"
  },
  {
    "index": "F25781",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Oh I, you see, so I didn't specify the number n, so it's not going to know what to cut it off at, so I need to specify the threshold, so let's do ah,12.",
    "output": "数値nを指定しなかったので関数はどの数で切るのかが分かりません。閾値を指定する必要があります。"
  },
  {
    "index": "F25782",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see it returned all the numbers that are greater than 12.",
    "output": "12より大きい数が全て返されているのが分かります。"
  },
  {
    "index": "F25783",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's kind of as we expected, and so the function appears to be working well.",
    "output": "期待していた動きで関数は正しく動作しているようです。"
  },
  {
    "index": "F25784",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now let's suppose that maybe there is something special about the number ten, and maybe it's something that people are going to be kind of be doing very often and it's a very common number.",
    "output": "では、ここで仮に数値の10には何か意味があったとしましょう。例えば、頻繁に使う数だとか共通に使われる数だとします。"
  },
  {
    "index": "F25785",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you might you want to specify a default argument so you might want to the default to be ten, so remember when I ran the function before and I didn't specify the number n.",
    "output": "だとするとデフォルトの値を引数に指定しておいてデフォルトとして10とします。"
  },
  {
    "index": "F25786",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It gave me an error or maybe you don't want people to have to encounter that error, and so you'll specify a default value n equals ten so people don't specify the cutoff value n, it will just automatically default to ten.",
    "output": "先ほどはnを指定せずにこの関数を実行したらエラーになったのを覚えていまよね。"
  },
  {
    "index": "F25787",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I can run this in R and now if I do above, which is x, you see I don't get the error anymore.",
    "output": "ユーザーにエラーを見せたくないかもしれません。"
  },
  {
    "index": "F25788",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It automatically gives you all the numbers that are bigger than ten.",
    "output": "この場合には、デフォルト値としてn=10を指定してユーザーが切り捨て値のnを指定しなかった時でも関数は自動的にデフォルトの10に設定します。"
  },
  {
    "index": "F25789",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's kind of nice in R when you're writing functions to be able to specify default values like this that make the life of the user just a little bit easier, specially for very common cases, where it's not important that the user specify an argument.",
    "output": "これはRでの楽な機能の1つで関数を書いてデフォルト値を指定しておくことができるので引数の値で、特に共通に使われる値がある場合や指定することが重要でない場合にユーザーが楽に使えるようにできます。"
  },
  {
    "index": "F25790",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So those are some very simple functions, in R that can be used to kind of process data or make do simple calculations, like adding two numbers.",
    "output": "ここまでに見てきたのはRのとても単純な関数でデータを処理したり、加算のような簡単な計算を行うためのものでした。"
  },
  {
    "index": "F25791",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The next function I want to talk about is, is just going to take a matrix or a dataframe and calculate the mean of each column.",
    "output": "次に説明する関数は行列やデータフレームを使って、各列の平均を計算するものです。"
  },
  {
    "index": "F25792",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, so this is slightly more complicated you, you have to take your argument and then you have to loop through each column to calculate the mean of each one, right.",
    "output": "先ほどまでよりは少し複雑になっています。ここでは、引数を使って各列をループして、各列の平均を計算する必要があります。"
  },
  {
    "index": "F25793",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is going to involve using a for-loop and, and so we'll talk about it here.",
    "output": "これには、for-loopを使う必要が出てきます。ここで説明します。"
  },
  {
    "index": "F25794",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So let's call this function column mean, because that's what it does, and I'll use the function directive here, now it's going to take an argument.",
    "output": "この関数を名は体を表すようなcolumnmeanとしましょう。function構文を使って引数を必要とします。"
  },
  {
    "index": "F25795",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I like to call my arguments x, you don't have to so why don't we just call it y for fun.",
    "output": "この引数は、xと名付けようかと思いましたが必ずしもこの名前でなくても構いません。"
  },
  {
    "index": "F25796",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so y is going to be a data frame or a matrix, and we're going to go through the columns of this data frame or matrix and calculate the mean of each column.",
    "output": "ここでは、yはデータフレームか行列でこのデータフレームか行列のそれぞれ各列を見て各列の平均を計算します。"
  },
  {
    "index": "F25797",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first thing I need to figure out is how many columns does this thing have, and that can be easily done.",
    "output": "ここでまず最初にする必要があるのは入ってくる引数に列が何列あるかを知ることです。"
  },
  {
    "index": "F25798",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'll call it n c for number of columns and we can use the n call function for that.",
    "output": "まず列数という意味でncという変数にncol関数を使って判定し代入します。"
  },
  {
    "index": "F25799",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That will calculate the number of columns, and, and then I need to initialize a vector that's going to that's going to store the means for each column.",
    "output": "これで、列数が計算できるので次にベクトルを初期化して各列の平均を格納するようにします。"
  },
  {
    "index": "F25800",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The length of this vector has to equal the number of columns, right.",
    "output": "このベクトルの長さは列数と同じになります。"
  },
  {
    "index": "F25801",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'll just call it means, and it'll be a numeric vector equal to the length of the number, equal to the number of columns.",
    "output": "ベクトルはmeansと呼び数値ベクトルにしてこの長さは、列数(nc)と同じになります。"
  },
  {
    "index": "F25802",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is just an empty vector.",
    "output": "現時点では、ただの空のベクトルです。"
  },
  {
    "index": "F25803",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It doesn't, it's going to have, it's going to be initialized to, to be all zeros. But we're going to fill it as we go through the column.",
    "output": "ここではこのベクトルにはゼロ値で初期化されていますが列の処理を進めながら値を埋めていきます。"
  },
  {
    "index": "F25804",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now we want to for-loop through the columns.",
    "output": "forloopで各列に対して処理を実行していきます。"
  },
  {
    "index": "F25805",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'll say i is in and then I'll say one through nc.",
    "output": "iin、そして1からncまでと書きます。"
  },
  {
    "index": "F25806",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this creates a, an integer vector starts a one and ends at the number of columns, and then I'm going to for-loop through and for each I, I'm just going to assign to my means vector.",
    "output": "そして、forloopをしていくなかで値をmeansベクトルに代入していきます。"
  },
  {
    "index": "F25807",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's it, and then so for I, I haven't returned anything yet, so right now this function doesn't do anything particularly useful.",
    "output": "これだけで完了ですが次に何の値も返していないのでこの関数は、特に何かの役に立つものではありません。"
  },
  {
    "index": "F25808",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But what I want to do is return the vector of means and so I'm just going to return that.",
    "output": "なので、ここでは平均のベクトルを返すようにしたいのでこれを返します。"
  },
  {
    "index": "F25809",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's, since that's the last expression in the function that what will get returned.",
    "output": "ここがこの関数での最終文なのでこれが返されます。"
  },
  {
    "index": "F25810",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can source this into R, and I'll just find some arbitrary dataset.",
    "output": "では、これをRに入れて使えるようにして任意のデータセットを考えます。"
  },
  {
    "index": "F25811",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'll just take the column means of that, and see how it works.",
    "output": "これに対して、columnmeanを使用して、どうなるか見てみます。"
  },
  {
    "index": "F25812",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, so I, there are six, I think there are six columns in this dataset, so it gave me six means.",
    "output": "そして、このデータセットには6つの列があるから6つの平均が返ってきました。"
  },
  {
    "index": "F25813",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now you can see that the first two columns have NAs.",
    "output": "ここでは、最初の2列がNAになっているのが分かります。"
  },
  {
    "index": "F25814",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's because it, if the, if the vector has an na in it, then you can't calculate the mean.",
    "output": "なぜこうなるかを説明するとベクトルにNAがあると平均を計算することができません。"
  },
  {
    "index": "F25815",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the one thing you might want to do, is, by default, is throw out all of the missing values and just calculate the mean amongst the observed values.",
    "output": "この挙動があるのでデフォルトで実施しておくべきなのは欠損値を、まずは全て排除してその後で観測値のみから平均を計算することです。"
  },
  {
    "index": "F25816",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, you'll notice that a lot of functions have a feature where it's like, where they, you can, you can choose whether you want to remove the nas or not.",
    "output": "このように、欠損値を削除するかどうかを指定できる関数を頻繁に見かけることでしょう。"
  },
  {
    "index": "F25817",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But let me just add up an argument here, it's called na.",
    "output": "そして、ここに引数を追加してremoveNAと呼びます。"
  },
  {
    "index": "F25818",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it will default to true, right.",
    "output": "デフォルトはTRUEとしておきます。"
  },
  {
    "index": "F25819",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I'll pass this argument to the mean function.",
    "output": "この引数をmean関数に引き渡してmean関数にあるna.rm引数へこのremoveNAの値を渡すようにします。"
  },
  {
    "index": "F25820",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the mean has an na.rm argument, and I'll pass at this value.",
    "output": "これで、columnmeanを計算するときにデフォルトでNAを消去するようにできます。"
  },
  {
    "index": "F25821",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so now I can default or remove the na's when I, calculate my column mean.",
    "output": "Rにソースを貼りつけてコンソールでcolumnmeanを実行すると列に対する平均が返ってきました。"
  },
  {
    "index": "F25822",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So sources send to R and with the run in the console column mean, and so now the default will be now I get my means for those columns because the default was to remove the na's.",
    "output": "デフォルトで欠損値は消去されたからです。引数にFALSEを指定することもできてそうするとNAがまた表示されます。"
  },
  {
    "index": "F25823",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I could say false here, and then my na's will come back.",
    "output": "もし必要なときには、古い挙動に再び戻すこともできます。"
  },
  {
    "index": "F25824",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can always choose to kind of go back to the old behavior if I wanted to.",
    "output": "最後にしておきたいのは関数を書いたときにはファイルに保存しておくことがもちろん最も重要です。"
  },
  {
    "index": "F25825",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the last thing you want to do any time you're writing a function the most important thing of course is to save your file.",
    "output": "現在は、ファイルは未保存の状態です。保存しないでいるとRがクラッシュしたりすると作業した内容が失われていしまいます。"
  },
  {
    "index": "F25826",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you don't save it and R Studio crashes or something happens you'll lose all your work and so you want to go to the save I meant save as menu, and just save your file as, you know, functions or whatever you want to call it.",
    "output": "これを避けるためにメニューからSaveasを選んでfunctionsだったり、好きな名前で保存します。"
  },
  {
    "index": "F25827",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And give it the .r extension, and now you're code is saved to a file.",
    "output": ".Rの拡張子を付けます。これでコードがファイルに保存されました。"
  },
  {
    "index": "F25828",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that should get you started, just writing some simple functions in R, for your programming assignment you'll have to write a few functions that kind of go through and look at data.",
    "output": "さて、このビデオでまずは始められるようになりRで簡単な関数は書けるようになりました。"
  },
  {
    "index": "F25829",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But I just wanted to get you started writing your first functions so that you know kind of how the directive, the function directive works, how the arguments work, and you can play around a little bit with with more complicated ideas as you work through the assignments.",
    "output": "このビデオでの目的はまずは関数を書けるようになることでfunction構文をどう使うのかや引数をどう使うのかを理解してさらに少し複雑な考えのものでも課題に取り組むうちに色々と試せるようにすることです。"
  },
  {
    "index": "F25830",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Functions represent some of the most powerful aspects of the R language.",
    "output": "関数はR言語の最も強力な側面です。"
  },
  {
    "index": "F25831",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And they really represent the transition of the user of R into the kind of programmer of R.",
    "output": "関数が分かればRのユーザーからRのプログラマーらしくなってきたと言えます。"
  },
  {
    "index": "F25832",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the basic idea is that you can type the command line and kind of explore some data, and run some code.",
    "output": "というのは、コマンドラインで入力してデータを探索してコードも書けるかもしれません。"
  },
  {
    "index": "F25833",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But eventually you'll probably get to the point where you need to do something a little bit more complex.",
    "output": "しかし、いずれはもう少し複雑なことをするのが必要な状況になるでしょう。"
  },
  {
    "index": "F25834",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "A little bit more than, than can be expressed in a single line or maybe in two lines.",
    "output": "1行だったり2行のコードでできることよりも複雑なものです。"
  },
  {
    "index": "F25835",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if you have to do this over and over again, then you're usually going to want to encode this kind of functionality in a function.",
    "output": "また、そんなコードを何度も書く必要があるとその機能を関数としてコードにしたいと思うようになります。"
  },
  {
    "index": "F25836",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm going to talk about functions in three parts here.",
    "output": "関数について、3つに分けて説明したいと思います。"
  },
  {
    "index": "F25837",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "First I'll talk just about the basics of how to write functions and how they are written, in R.",
    "output": "1つ目はRでの関数の書き方の基本を説明します。"
  },
  {
    "index": "F25838",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then I'm going to talk a little bit about lexical scoping and the scoping rules, in, for the R language.",
    "output": "次に、R言語でのレキシカル・スコープとスコープの規則について説明します。"
  },
  {
    "index": "F25839",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then last, I'm going to end with a little example.",
    "output": "そして最後に簡単な例を出して終わります。"
  },
  {
    "index": "F25840",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, functions in R are created using the function directive and functions are stored as R objects just like anything else.",
    "output": "Rでの関数はfunctionディレクティブを使って作り他のものと同じようにRのオブジェクトとして保持されます。"
  },
  {
    "index": "F25841",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you might have a vector of integers a list of different things, a data frame, and then you have a function.",
    "output": "このため、オブジェクトには整数ベクトルやリストやデータフレームがあったり関数もあります。"
  },
  {
    "index": "F25842",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in particular, R objects, R functions are R objects that are of the class function, okay?",
    "output": "Rオブジェクトの意味ではR関数はクラス値がfunctionになっているRオブジェクトです。"
  },
  {
    "index": "F25843",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the basic instruction here is that you assign to some object, here I call it F, the, the function directive, which will take some arguments, and then inside the curly braces there is R, there is R code, which does something that the function does.",
    "output": "この画面の命令で行っているのはここではfと呼ぶオブジェクトに代入を行って次に、引数を取るfunctionディレクティブがあり波かっこの中にはRのコードがありこの関数で行うことが書いてあります。"
  },
  {
    "index": "F25844",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one nice thing about R is that functions are con, considered what are called first class objects.",
    "output": "Rの素晴らしいところは関数が第一級オブジェクトとして扱われることです。"
  },
  {
    "index": "F25845",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can treat a function just like you can treat pretty much any other R object.",
    "output": "これによって、関数が他のRオブジェクトと同じように扱えるようになります。"
  },
  {
    "index": "F25846",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So importantly, this means that you can pass functions as arguments to other functions. This is actually ver, a very useful feature in statistics.",
    "output": "とても重要なのはこうできることで関数を他の関数に引き渡すことができます。"
  },
  {
    "index": "F25847",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And also functions can be nested.",
    "output": "つまり、関数の中で別の関数を定義することができます。"
  },
  {
    "index": "F25848",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can define a function inside of another function, and we'll see what the implications of this are we talk about lexical scoping.",
    "output": "このことで何ができるようになるかはレキシカル・スコープで説明します。"
  },
  {
    "index": "F25849",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the return value of a function is simply the very last R expression in the function value to be evaluated.",
    "output": "そして関数の戻り値は関数内で最後に評価されるRの式になります。"
  },
  {
    "index": "F25850",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, there's no special expression for returning something for a function.",
    "output": "関数から戻り値を返すための特別な式はありません。"
  },
  {
    "index": "F25851",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Although, there is a function called Return.",
    "output": "しかし、returnという関数があります。"
  },
  {
    "index": "F25852",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So functions have what are called named arguments.",
    "output": "関数には引数と呼ばれるものを指定することができます。"
  },
  {
    "index": "F25853",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the named arguments can potentially have default values.",
    "output": "名前付き引数はデフォルト値を指定することもできます。"
  },
  {
    "index": "F25854",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, a lot of these features are useful for when you're designing functions that, that may be used by other people.",
    "output": "これらの特徴は関数を設計するときに役立ちます。関数は他の人が使うことになるかもしれません。"
  },
  {
    "index": "F25855",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, you may have a function that had a lot of different arguments so you can tweak a lot of different things.",
    "output": "たとえば、関数に様々な挙動をさせられるように色々な引数がある関数があるかもしれません。"
  },
  {
    "index": "F25856",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But most of the time, you don't have to change all those different arguments.",
    "output": "でも、多くの場合には、この引数全てを指定する必要はありません。"
  },
  {
    "index": "F25857",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You may only care about one or two.",
    "output": "変えたいのは、1つか2つの引数だけかもしれません。"
  },
  {
    "index": "F25858",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's useful for some of the arguments to have default values.",
    "output": "このため、引数にデフォルト値があると便利なものもあります。"
  },
  {
    "index": "F25859",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So first of all, there's the formal arguments, which are the arguments that are included in the function definition.",
    "output": "1つ前のスライドに戻ると仮引数がここにありこの関数の中で定義されています。"
  },
  {
    "index": "F25860",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The formal's function actually will, takes a function as an input and returns a list of all the formal arguments of a function.",
    "output": "formals関数は関数を引数にとりその関数の仮引数をリストで返します。"
  },
  {
    "index": "F25861",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So not every function call in R makes use of all the formal arguments.",
    "output": "Rの全ての関数が仮引数を使うわけではありません。"
  },
  {
    "index": "F25862",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if a, if a function has ten different arguments you may not, you may not have to specify a value for all ten of those arguments.",
    "output": "たとえば、関数に10個の引数があったとしてこの10個の引数全てに値を指定する必要はないかもしれません。"
  },
  {
    "index": "F25863",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So function arguments can be missing or they may have default values that are used when they are not specified by the users.",
    "output": "関数の引数は指定されなかったりユーザーが指定しない時用のデフォルト値があるかもしれません。"
  },
  {
    "index": "F25864",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So R function arguments can be matched positionally or by name.",
    "output": "このためRの関数の引数は位置や名前で指定できます。"
  },
  {
    "index": "F25865",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when, this is very, this is key when you're writing a function and also when you're calling it.",
    "output": "このことは関数を書くときにも関数を呼ぶときにも鍵となります。"
  },
  {
    "index": "F25866",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, take a look at the function sd, which calculates the standard deviation of, of, of a set of numbers.",
    "output": "例えば、値セットの標準偏差を計算する関数sdを見てください。"
  },
  {
    "index": "F25867",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So sd takes a input x, which is the name of the argument and which is going to be a vector of data.",
    "output": "sdは引数の名前xを引数にとりxはベクトルを取ります。"
  },
  {
    "index": "F25868",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there's a second argument called na.rm and this controls whether the missing values in the data should be removed or not.",
    "output": "na.rmという2つ目の引数がありこの引数によってデータ中の欠損値を削除すべきかを指定します。"
  },
  {
    "index": "F25869",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the default value is for na.rm to be equal to false.",
    "output": "na.rmのデフォルト値はFALSEとなっています。"
  },
  {
    "index": "F25870",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So by default if you have missing data in your, in the, in the set of numbers for which you want to calculate the standard deviation the missing values will not be included.",
    "output": "このため、標準偏差を計算する値セットに欠損値がある場合には指定しなくても欠損値が除外されます。"
  },
  {
    "index": "F25871",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here I'm simulating some data and I'm just simulating a hundred normal random variables, and there's no missing data here.",
    "output": "ここではデータをシミュレートして100個の正規分布の乱数を生成していて欠損値はありません。"
  },
  {
    "index": "F25872",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if I just calculate sd on the vector it'll give me an estimate of the standard deviation.",
    "output": "このベクトルのsd値を計算すると標準偏差の値が返ってきます。"
  },
  {
    "index": "F25873",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I say X equals my data that's the same thing.",
    "output": "x=mydataと指定しても同じことです。"
  },
  {
    "index": "F25874",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've named the argument but I haven't but otherwise the data are the same so it'll calculate the standard deviation.",
    "output": "ここでは引数に名前を付けましたがそれだけで、データは同じなので標準偏差を計算します。"
  },
  {
    "index": "F25875",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In the first example I didn't name the argument.",
    "output": "最初の例では引数名を指定してません。"
  },
  {
    "index": "F25876",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it defaulted to passing mydata to be the first argument of the function.",
    "output": "こうすると、指定なしで関数の1つ目の引数にmydataを渡します。"
  },
  {
    "index": "F25877",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in the next example here, I'm going to name both arguments.",
    "output": "この次の例では、引数を両方とも名前で指定します。"
  },
  {
    "index": "F25878",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm going to say X equals mydata, and na.rm equals false.",
    "output": "x=mydataとしna.rm=FALSEとします。"
  },
  {
    "index": "F25879",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That calculates the same thing as before.",
    "output": "この命令でもこれまでと同じ計算をします。"
  },
  {
    "index": "F25880",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now when I name the arguments, I don't have to put them in any special order.",
    "output": "名前付の引数にすると指定された位置に書く必要がありません。"
  },
  {
    "index": "F25881",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, I could reverse the order of the argument here.",
    "output": "例えば、この引数の位置を入れ替えることもできます。"
  },
  {
    "index": "F25882",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Say na.rm is equals false first, and then say x equals mydata second, and that will produce exactly the same results because I've named the arguments.",
    "output": "na.rm=FALSEを最初にx=mydataを次に書いても全く同じ結果が返ってきます。名前付で引数を指定したからです。"
  },
  {
    "index": "F25883",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, what happens if I name one argument and don't name the other?",
    "output": "では、1つだけ名前付引数にしてもう一つは名前を付けないとどうなるでしょう。"
  },
  {
    "index": "F25884",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well what happens is that the named argument is set, and you can figure it as being removed from the argument list, and then any other, any other things that are past will be matched to the function arguments in the order in which they, they come.",
    "output": "名前付引数は指定値が渡されてその指定した引数は引数順から除外されてるとみなせます。それ以外の渡された引数は渡された順に、関数の引数順で渡されます。"
  },
  {
    "index": "F25885",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, SD after you remove the na.rm argument only has one more argument left and so mydata would be assigned to that argument.",
    "output": "sdの場合にはna.rm引数を除くと1つしか受け取る引数が残らないのでmydataは、この引数に渡されます。"
  },
  {
    "index": "F25886",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So all these expressions return the same exact value.",
    "output": "このように、ここの式は全て同じ値を返します。"
  },
  {
    "index": "F25887",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So although it's generally, all these expressions are equivalent, I don't say recommend all of them equally.",
    "output": "大まかに言えば、全ての式が同じ結果になりますが全てを同じように勧めるわけではありません。"
  },
  {
    "index": "F25888",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, I don't necessarily recommend reversing the order of the arguments just because you can even though if you name them, it's appropriate.",
    "output": "名前付で指定できればより適切と言えるので引数順を変えても動作するという理由だけで順番を変えることを勧めるわけではありません。"
  },
  {
    "index": "F25889",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, just, just because that can lead to some confusion.",
    "output": "順を変えてしまうことで混乱を引き起こすだけかもしれないためです。"
  },
  {
    "index": "F25890",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So positional matching and matching by name can be mixed and this is quite useful often for functions that have very long argument lists.",
    "output": "位置での指定と名前での指定は同時に使うことができます。これは多くの引数がある関数を使う時にとても役立ちます。"
  },
  {
    "index": "F25891",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so for example the lm function here which fits linear models to data has this argument list here.",
    "output": "このlm関数の例では線形モデルをデータに当てはめますがここにある引数群があります。"
  },
  {
    "index": "F25892",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first is the formula, the second is the data And then subset, the weights et cetera.",
    "output": "最初の引数はformulaで2つ目はdataでsubset、weights、などと続いています。"
  },
  {
    "index": "F25893",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you see that the first five arguments here don't have any default value.",
    "output": "最初の5つの引数はデフォルト値がないのが分かります。"
  },
  {
    "index": "F25894",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the user has to specify them.",
    "output": "ユーザーはこの引数を指定する必要があります。"
  },
  {
    "index": "F25895",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the but then the method, the model, the X argument, they all have default values so if you don't specify them they will use those values by default.",
    "output": "その後の、method、model、xにはデフォルト値があり指定しない場合にはこの値をデフォルトに使います。"
  },
  {
    "index": "F25896",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the following two function calls are equivalent.",
    "output": "次の2つの関数呼び出しは同じ結果になります。"
  },
  {
    "index": "F25897",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I could have specified the data first and then the formula and then the model.",
    "output": "1例目では、dataを最初に指定してからformula、modelと指定してそれからsubsetを指定しています。"
  },
  {
    "index": "F25898",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then, and then, and then the subset arguments or I could specify the formula first, the data second, the subset and then say model is equal to false.",
    "output": "2例目では、formulaを最初に指定してからdata、subset、model=FALSEというように指定しています。"
  },
  {
    "index": "F25899",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now the reason why the first one is okay is because I, so I matched the data argument by name.",
    "output": "1例目が問題ないのはdata引数を名前付きで指定したからです。"
  },
  {
    "index": "F25900",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can imagine that that's kind of taken out of the argument list now, then Y till the X doesn't, isn't specified by name.",
    "output": "data引数は引数順から除外されたと考えられます。y~xは名前指定されていません。"
  },
  {
    "index": "F25901",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's given to the first argument that hasn't already been matched.",
    "output": "このため、まだ引き渡されていない1つ目の引数に渡されます。"
  },
  {
    "index": "F25902",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I, in which case that's the formula.",
    "output": "この場合はformulaが引数です。"
  },
  {
    "index": "F25903",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Model equal to false, so that's been matched by name so I can kind of get rid of that from the argument list.",
    "output": "model=FALSEは名前付で引き渡されているので引数順からは除外して考えれます。"
  },
  {
    "index": "F25904",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then 1 through 100 has to be assigned to the argument that has not yet already been matched.",
    "output": "次に1から100がまだ渡されていない引数に引き渡されます。"
  },
  {
    "index": "F25905",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in this case formula was already matched, data was already matched.",
    "output": "この場合には、formulaもdataも既に引き渡されているので次の引数はsubsetです。"
  },
  {
    "index": "F25906",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So 1 to 100 get's assigned to the subset argument.",
    "output": "1から100がsubset引数に引き渡されます。"
  },
  {
    "index": "F25907",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is somewhat a confusing way to call lm, and I don't recommend that you do it this way. But, I, I wrote it this way just to demonstrate how positional matching, and matching by name can work together.",
    "output": "lmを呼び出すには少し混乱する方法でこの方法を使うのはお勧めしませんがこうすることで引数の指定に位置指定と名前指定が混ぜられることをお見せするのが目的でした。"
  },
  {
    "index": "F25908",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "A common usage for lm though is the second version here.",
    "output": "lmの通常の使い方は2例目の方法です。"
  },
  {
    "index": "F25909",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then the next one is mydata, which the data set which you're going to grab the data from.",
    "output": "次の引数はmydataとして計算に使うデータのデータセットです。"
  },
  {
    "index": "F25910",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The subset argument and then, so the first three arguments, you know, are commonly specified, every time you call lm.",
    "output": "次にsubset引数です。この最初の3つの引数はlmを呼ぶときには通常指定するものです。"
  },
  {
    "index": "F25911",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But then, the rest you may or may not specify and so you may, if you just want to specify one of the following arguments.",
    "output": "それ以外の引数は指定するかしないか分かりません。"
  },
  {
    "index": "F25912",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's easier just to call it out by name.",
    "output": "それ以外の引数を指定したい場合には名前付き引数で呼ぶ方が簡単です。"
  },
  {
    "index": "F25913",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, most of the time, the named arguments are useful in the command line.",
    "output": "多くの場合には、コマンドラインで名前付き引数が役立ちます。"
  },
  {
    "index": "F25914",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "When you have a long argument list and you want to use the defaults for everything except for one of the arguments, which may be in the middle or near the end of the list, and you can't usually, you know, you can't remember exactly which argument it is, whether it's the fourth, or the sixth, or the tenth argument on the argument list.",
    "output": "もし、多くの引数がある関数で途中や終わりの方にある引数だけを指定して残りはデフォルト値を使いたい場合には引数が引数順の4個目か6個目か10個目かどこだったかが正確には覚えていられません。"
  },
  {
    "index": "F25915",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you just call it by name, and that way you don't have to remember the order of the arguments on the argument list.",
    "output": "こうすれば、引数順のどこに引数があるのかを覚えておく必要はありません。"
  },
  {
    "index": "F25916",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another example where this comes in handy is for plotting, because mo, many of the plot functions have very long argument lists.",
    "output": "この使い方はプロットするときに便利です。plot機能の多くに多くの引数があります。"
  },
  {
    "index": "F25917",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "All of which have default values and you may only want to tweak one specific argument.",
    "output": "これらにもデフォルト値があるのである特定の引数のみを操作すれば良いかもしれません。"
  },
  {
    "index": "F25918",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so it's useful not to have to remember, you know, what the order of that argument is on the arg, on the argument list.",
    "output": "このように、引数順のどこに引数があるのか覚えておく必要がないと便利です。関数の引数は、部分一致でも名前指定ができます。"
  },
  {
    "index": "F25919",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So function arguments can, can also be partially matched which is used, mostly useful primarily for interactive work, not so much for programming.",
    "output": "探索的に作業するときに非常に役立ちます。でも、プログラム時にはそうでもありません。"
  },
  {
    "index": "F25920",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But when you call a function, if the argument has a very long name you can match it partially so you can type part of the argument name and as long as there's a unique match there then it will, the R system will match the argument and assign the value to, to, to the correct one.",
    "output": "関数を呼び出すときに引数の名前が長いと引数名の一部分だけを入力して一致させることができます。"
  },
  {
    "index": "F25921",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the, the, the order of the operations that R uses, first it'll check for an exact match.",
    "output": "この一部分に合致する引数が1つしかない場合にはRシステムが引数を一致させて正しい引数に値を引き渡します。"
  },
  {
    "index": "F25922",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you name an argument it'll check, check to see if there's an argument that, that exactly matches that name.",
    "output": "つまり、名前付き引数を使うとRはその引数の名前が完全一致する引数を調べます。"
  },
  {
    "index": "F25923",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If there's no exact match it'll look for a partial match.",
    "output": "完全一致がなければ部分一致を探します。"
  },
  {
    "index": "F25924",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then if that doesn't work, it'll look for a positional match.",
    "output": "これで見つからなければ次に位置での一致を探します。"
  },
  {
    "index": "F25925",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "A, B, C and D.",
    "output": "ここに4つの引数a、b、c、dを使う関数があります。"
  },
  {
    "index": "F25926",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "B, C, and D, all have default values.",
    "output": "aにはデフォルト値がなくb、c、dは全てデフォルト値があります。"
  },
  {
    "index": "F25927",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You want it if both specify the names of the arguments.",
    "output": "関数を定義するときには引数の名前の指定とデフォルト値の有無の指定の両方を行う必要があります。"
  },
  {
    "index": "F25928",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So null is a common argument.",
    "output": "NULL値は頻繁に引数に指定される値です。"
  },
  {
    "index": "F25929",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Sorry, common value to assign to an argument. Which mean, which can mean a variety of things, but usually means that, you know, there's nothing there.",
    "output": "このNULL値は様々なことを表現し得ますが何もないということを意味しています。"
  },
  {
    "index": "F25930",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, one of the key features of the, our language is what's called Lazy Evaluation.",
    "output": "R言語の主な特徴として遅延評価と呼ばれるものがあります。"
  },
  {
    "index": "F25931",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So Lazy Evaluation is a common model in a variety of programming languages.",
    "output": "遅延評価は数々のプログラム言語でよく見られるモデルです。"
  },
  {
    "index": "F25932",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the way that it works is all of the arguments to a function are only evaluated as they're needed.",
    "output": "どのようなものかというと関数の引数の評価を、その引数が必要になった時に初めて行う方法です。"
  },
  {
    "index": "F25933",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so for example, if you take a look at this function over here.",
    "output": "例えば、この関数を例にとるとaとbの2つの引数を使っています。"
  },
  {
    "index": "F25934",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the body of the argument only takes one thing, it takes a and then it squares it and then it returns it.",
    "output": "この関数の中では1つのことしか行っていません。aを使ってaを二乗して値を返すだけです。"
  },
  {
    "index": "F25935",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And now recall that in a function, the return value whatever the last expression is evaluated.",
    "output": "ちなみにここでもこれまで学んだように関数の中で最後に評価された命令の値が返ってきています。"
  },
  {
    "index": "F25936",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's only one expression in this function.",
    "output": "話しを戻すと、この関数には1つの命令しかありません。"
  },
  {
    "index": "F25937",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so it's the return value.",
    "output": "そしてこれが最後の命令でその値が戻り値です。"
  },
  {
    "index": "F25938",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I say f(2).",
    "output": "f(2)を実行するとどうなるでしょうか?"
  },
  {
    "index": "F25939",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, in R what happens is you get 4 because 2 squared is 4.",
    "output": "Rでは、2の二乗は4なので4が返されます。"
  },
  {
    "index": "F25940",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now you might be wondering what happens to B when I call (f).",
    "output": "関数fを呼ぶのにbを指定しないと何が起こるか疑問に思うかもしれません。"
  },
  {
    "index": "F25941",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I never specify what the value of b is.",
    "output": "bの値は指定していません。"
  },
  {
    "index": "F25942",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And furthermore, b doesn't have a default value.",
    "output": "さらにbにはデフォルト値がありません。"
  },
  {
    "index": "F25943",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so what happens, what, what happens is nothing happens because the function f doesn't actually use b.",
    "output": "何が起こるかといえば何も起こりません。関数fはbを使っていないからです。"
  },
  {
    "index": "F25944",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the argument is never evaluated.",
    "output": "このため、この引数は決して評価されません。"
  },
  {
    "index": "F25945",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, because it's never evaluated, there's really no error.",
    "output": "評価されないためエラーも起こりません。何も異常にはなりません。"
  },
  {
    "index": "F25946",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's nothing that's going wrong here. Now now you might say there, of course, well, the, the function F is kind of poorly defined.",
    "output": "関数fの定義のされ方は良くないと考えるかもしれません。"
  },
  {
    "index": "F25947",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So why would you give and argument where that's never actually evaluated?",
    "output": "なぜ決して評価されない引数を定義するのか。"
  },
  {
    "index": "F25948",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's a reasonable objection, but in this case, the only, the, the function will operate correctly because because it's Because the value of 2, is positionally matched to the arg, to the argument A.",
    "output": "こんな反対意見は理にかなっています。それでも今回の場合は関数は正常に動作します。"
  },
  {
    "index": "F25949",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which is then squared. Here's another example of a function that's only slightly more complicated than the previous one.",
    "output": "値2が引数の位置順で引数aとして引き渡されるからです。"
  },
  {
    "index": "F25950",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is another function that takes arguments a and b, but now what the function does is it prints out a and it prints out b.",
    "output": "そして二乗されます。次の例ではこの関数は先ほどよりも少しだけ複雑になっています。"
  },
  {
    "index": "F25951",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, when I call f of 45, look what happens. I get, well I get an error that says in print b, argument b is missing.",
    "output": "これは引数a、bを使う関数でこの関数は引数aとbを出力します。"
  },
  {
    "index": "F25952",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, what happened is that it printed out 45 because 45 was matched to the argument a, and so there was no error.",
    "output": "fに45を渡して呼ぶとどうなるかというとエラーが発生してprint(b)のbが無いと出ます。"
  },
  {
    "index": "F25953",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Up until the first line of the function, there was no error occurring.",
    "output": "ここでは、引数aに45が渡されて出力されたためエラーがありません。"
  },
  {
    "index": "F25954",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But then when it got to the second line, It had to evaluate the val, the argument b. And because b had no value assigned to it and no default value, then an error had to occur.",
    "output": "関数の1行目ではエラーがありませんでしたが2行目の実行に移ると引数bを評価する必要が出てきてbにはデフォルト値もなく値も代入されていないためエラーを発生させる必要がありました。"
  },
  {
    "index": "F25955",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, but you notice that the error only occurs after the 45 was printed out.",
    "output": "このため、ここでは45が出力された後で初めてエラーが起こっているのが分かります。"
  },
  {
    "index": "F25956",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the lazy evaluation applies, but because the argument is only evaluate when it's needed.",
    "output": "遅延評価が適用されて引数の評価が必要になって初めて評価を行うようになっていてエラーを発生させる箇所までの有効な部分は実行されます。"
  },
  {
    "index": "F25957",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's a special argument, in.",
    "output": "次に、R関数には特別な引数の形があり...の引数があります。"
  },
  {
    "index": "F25958",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it's used to indicate a variable number of arguments that can sometimes be passed on to other functions.",
    "output": "これを使うことで任意の数の引数を他の関数に渡すことができます。"
  },
  {
    "index": "F25959",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the three dots are often used when extending another function and you don't want to copy the entire argument list of the original function.",
    "output": "この3つのドットを使う代表的なケースは他の関数を拡張して、元の関数の引数を網羅的に再度書かないようにするためです。"
  },
  {
    "index": "F25960",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example you might want to extend the plot function and just to have a little bit of a tweak or to change some of the defaults, for example.",
    "output": "例えばplot関数を拡張したいとしてちょっとだけいじって変更したりデフォルト値を変更したいとします。"
  },
  {
    "index": "F25961",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so for example you might create a function that's called my plot.",
    "output": "例として、myplotという関数を作るとします。"
  },
  {
    "index": "F25962",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the my plot will replicate some of the arguments of the original plot function like x and y.",
    "output": "myplotは元々のplot関数の引数にあるx、yなどの引数はそのまま引き渡すとします。"
  },
  {
    "index": "F25963",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But it's going to change the default type arguments so that instead of creating circles for points.",
    "output": "ただ、type引数のデフォルト値を変えて丸点でのプロットではなく折れ線グラフでのプロットを行うようにするためにtype=\"l\"を指定しています。"
  },
  {
    "index": "F25964",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, but of course the default plot function has many, many other arguments.",
    "output": "もちろんplot関数にはとても多くの引数が他にもありますがこれらには触れずに同じにしておくつもりです。"
  },
  {
    "index": "F25965",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you want to leave them all ultimately the same. And so, what you, what you can do is pass dot dot dot.",
    "output": "ただ、こうするとplot関数の他の引数を吸収する形になりどうなるかというと...の部分をそのままの形で元のplot関数に引き渡すことができます。"
  },
  {
    "index": "F25966",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then though, that can used to, be used to kind of absorb all the other arguments in the plot function and then what happens is I'll take the dot dot dot and then pass it down to the original plot function, and so all those original arguments can be preserved then I don't have to retype or reconstruct all of those arguments in my extended function.",
    "output": "元のplot関数用の引数はそのまま渡され拡張して作成した関数側ではこれらの引数を再度入力し再構築する必要がありません。他にも...引数にはこんな使い方もあります。"
  },
  {
    "index": "F25967",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And sorry, there's another use of the dot dot dot argument, and it's for what are called generic functions so that extra arguments can be passed to the methods.",
    "output": "この使い方は総称的関数(genericfunctions)と呼ばれ余った部分の引数をメソッドに渡すことができます。"
  },
  {
    "index": "F25968",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So we'll talk a lot about more of this later when we talk about object oriented programming.",
    "output": "これについてはオブジェクト指向プログラムのところで別途詳しく説明します。"
  },
  {
    "index": "F25969",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the basic idea is that in R there, there can be special functions called generic functions which don't do anything, but what they do is they dispatch methods to put, according for different types of data.",
    "output": "簡単に言うとRでは総称的関数と呼ばれる特殊な関数がありこれは何も操作しませんが引き渡すデータの種類に応じて異なるメソッドを呼びデータを引き渡すことができます。"
  },
  {
    "index": "F25970",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the dot dot dot is used very heavily in this type of setup.",
    "output": "...引数はこのような仕組で非常に頻繁に使われます。"
  },
  {
    "index": "F25971",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "lastly, so the dot dot dot argument is, is necessary when the number of arguments that are passive functions cannot be known in advance.",
    "output": "この代表的な例はpaste関数での使われ方です。"
  },
  {
    "index": "F25972",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one good example of this usage is in the paste function.",
    "output": "paste関数では指定された文字列を1つに繋いで文字列か文字列ベクトルを作ります。"
  },
  {
    "index": "F25973",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the paste function, what is does it paste, it concatenates a set of strings together to create one string or a vector of strings and it can take a variable number of arguments.",
    "output": "このため、引数の数は任意に変わります。このため、paste関数には何個の引数が渡されるのかを事前に知ることができません。"
  },
  {
    "index": "F25974",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, there is no way for the function to note advance how many arguments it's going to have to paste together and so the first argument for paste is actually dot dot dot.",
    "output": "だから、paste関数の最初の引数は実は...になっています。"
  },
  {
    "index": "F25975",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And therefore you can take a number of different R objects that are character vectors and then, and then paste something together using a separator and in the, which the case the default is the space.",
    "output": "したがって、複数の文字列ベクトルのRオブジェクトを引き渡してpasteで繋ぐことができます。また、区切り文字も使えてデフォルトはスペースになっています。"
  },
  {
    "index": "F25976",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And what cat does similar to paste, it puts together, it pastes together a number of strings then it prints out the, the, the concatenated string either to a file or to a console.",
    "output": "catはpasteと同じように動作して複数の文字列を繋いで1つにして結合された文字列をファイルやコンソールに出力します。"
  },
  {
    "index": "F25977",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can see that there are many other arguments to cat but the first argument is going to be the set of our objects that, that are going to be concatenated.",
    "output": "catに引数が多くあるのが分かるかと思いますが最初の引数は結合するオブジェクトが渡されます。"
  },
  {
    "index": "F25978",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, one catch with the dot dot dot argument is that any arguments that appear after three dots on the argument list must be named explicitly.",
    "output": "...のちょっとした落とし穴は...引数の後の引数には名前を明示的につける必要があることです。"
  },
  {
    "index": "F25979",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And furthermore, cannot be partially matched.",
    "output": "さらに、引数の部分一致は行えません。"
  },
  {
    "index": "F25980",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you cannot, you can't use positional matching or partial matching for arguments that come after the three dots.",
    "output": "このため、引数の順番での指定も部分一致での指定も...引数の後の引数では使えません。"
  },
  {
    "index": "F25981",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I say in the first example here, where I try to paste together A and B, so A and B are going to the dot dot dot argument and then I say sep equals colon and then which means that I want to paste something together by separating them into with a colon.",
    "output": "なんとなく事情が分かりますがR自身では...引数部分に渡そうとしているのか別の引数に渡そうとしているのか分からないためです。"
  },
  {
    "index": "F25982",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, if I try to do partial matching with set, what happens is that the partial matching gets ignored, and so, when, when I say paste a b and then s e equal to colon, well, the s e is, in another circumstance might be partially matched.",
    "output": "例えばここの最初の例ではaとbを繋ごうとしていてa、bが...引数部分でsep=\":\"を渡しているのでコロンでpasteしてほしいのが分かります。"
  },
  {
    "index": "F25983",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But in the pace function, it can't use partial batching.",
    "output": "2例目で、引数seを使って部分一致を試みてますが部分一致は無視される挙動になります。"
  },
  {
    "index": "F25984",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it gets, it just ignores that and just assumes that colon is just another string to be pieced together.",
    "output": "paste(\"a\",\"b\",se=\":\")と指定するとseはこの状況でなければ部分一致したかもしれません。"
  },
  {
    "index": "F25985",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so then you get the, the string ab:. So just be careful when you're using functions that have dot, dot, dot as an argument.",
    "output": "しかしpaste関数では部分一致が使えないため部分一致としては無視されてコロンは繋ぎたい文字列の1つと判断されました。"
  },
  {
    "index": "F25986",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That any arguments that appear after the three dots have to be named explicitly and in full.",
    "output": "...が引数にある関数を使うときには気を付けてください。"
  },
  {
    "index": "F25987",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One topic that's important to discuss in R is a question of, you know, when a function sees a symbol in its body and it's executing inside the R environment, how does it assign a value to that symbol?",
    "output": "関数がコード中にシンボルを見た時にRの環境で実行されていたとしてそのシンボルにはどう値が代入されているのかという疑問があります。"
  },
  {
    "index": "F25988",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, take a look at this, this function here that I've defined called lm.",
    "output": "例えば、ここに定義した関数のlmを見てください。"
  },
  {
    "index": "F25989",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So lm here is a function which takes its argument x, and it multiplies it times itself.",
    "output": "このlmにはxという引数がありこの引数に引数自体を掛けるというものです。"
  },
  {
    "index": "F25990",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can think of it as squaring the, squaring the input.",
    "output": "つまり、入力された値を二乗するものと考えてもよいでしょう。"
  },
  {
    "index": "F25991",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, there's already a function in R called lm, so I've created an, a function here also called lm, so when I call lm somewhere else in R, maybe in another function or something like that how does R know what value to assign to the symbol lm?",
    "output": "ここにも同名のlmという関数を作りましたので関数の中だったり、Rのどこかでこの関数を呼び出すとシンボルのlmに、どの値を代入するように決定するのでしょうか。"
  },
  {
    "index": "F25992",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it sees the symbol lm, and how does it know whether to call the function that I just defined here or the lm function that's in the stats package that's used to model, you know, to fit linear models.",
    "output": "Rがシンボルのlmを見た時にどうやって今定義した関数を呼ぶのかstatsパッケージのlm関数を呼ぶのかを決定するのでしょうか。後者は、線形モデルを当てはめるのに使われます。"
  },
  {
    "index": "F25993",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the, the idea that R needs to bind a value to a symbol.",
    "output": "Rでは、値はシンボルに割りつける必要があります。"
  },
  {
    "index": "F25994",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in this case the, in the previous slide, the symbol was lm, and it needs to bind a value to it.",
    "output": "先ほどの例ではシンボルはlmでこれに対して値を割り付ける必要があります。"
  },
  {
    "index": "F25995",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the value is going to be a function of some sort.",
    "output": "この際の値は何らかの関数になります。"
  },
  {
    "index": "F25996",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's either going to be my function or it's going to be the function in the stats package.",
    "output": "その先は私の作った関数かstatsパッケージのlm関数のどちらかになるはずです。"
  },
  {
    "index": "F25997",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so when r tries to bind a value to a symbol what it does is, it searches through a series of environments to find the appropriate value.",
    "output": "Rが値をシンボルに割り付けようとするときには一連の環境を順次探して適切な値を探し出します。"
  },
  {
    "index": "F25998",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So environments are kind of, you can think of them as lists of objects and values or symbols and values.",
    "output": "環境について説明すると環境というのはオブジェクトと値、そしてシンボルと値がリスト化されたセットと考えてください。"
  },
  {
    "index": "F25999",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, when you're working on the command line, and you need to retrieve a value of an R object basically, what happens is, the first thing that happens is, you search the global environment for a symbol name matching the one requested.",
    "output": "コマンドラインで操作していてRオブジェクトの値を読み込む必要がるときには次のような処理が起きます。"
  }
]