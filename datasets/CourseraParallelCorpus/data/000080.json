[
  {
    "index": "F26000",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so for the global environment, it's just your workspace, and it consists of all the things that you've defined or loaded into R.",
    "output": "まず、グローバル環境の中から読み取りたくて入力したシンボル名に合致するシンボルを探します。"
  },
  {
    "index": "F26001",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so if there's a symbol there that matches the name of the one that you're requesting then it will take that symbol and, and then retrieve the value that's associated with that symbol.",
    "output": "ここの環境の中に入力し指定したシンボル名と合致するものがあればこの合致したシンボルを対象にしてこのシンボルに割り付けられた値を読み取ります。"
  },
  {
    "index": "F26002",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, because that exists, if I'm working the command line, when I call lm, it's going to find that object first.",
    "output": "今回の場合は、lmをグローバル環境で定義したのでコマンドラインからlmを呼び出すとこの環境に存在しているのでこのオブジェクトをまずは見つけ出します。"
  },
  {
    "index": "F26003",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if there, if there's no match in the global environment, then what happens is, the, R will search the namespaces of each of the packages on the search list.",
    "output": "もし、グローバル環境に合致するものがない場合にはRは、検索対象の環境リストのなかの各パッケージ内の名前空間の検索を続けます。"
  },
  {
    "index": "F26004",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the search list consists of all the R packages that are currently loaded into R.",
    "output": "この検索対象リストには現在Rに読み込まれている全てのRパッケージが含まれています。"
  },
  {
    "index": "F26005",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you'll see that there, there's an order to the search list.",
    "output": "この検索対象リストには順序が付いているのが分かります。"
  },
  {
    "index": "F26006",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, and it goes starts at the first element, which is the global environment.",
    "output": "つまり、リストの順序1の要素グローバル環境から検索を始めます。"
  },
  {
    "index": "F26007",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, you can see, second on the search list is the stats package, the graphics package, the GR devices package.",
    "output": "リストの2番目に来ているのはstatsパッケージで、続いてgraphics、grDevicesとなっています。"
  },
  {
    "index": "F26008",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "All the way down at the very is the base package, okay?",
    "output": "続けて最後まで行くと、最後はbaseパッケージです。"
  },
  {
    "index": "F26009",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, somewhere in this list of packages R is going to look for a function called lm.",
    "output": "このパッケージのリストのどこかにあるlmという関数をRは探しにいきます。"
  },
  {
    "index": "F26010",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, of course, if it's not in the global environment, then it will eventually find it in the stats package which is the function that's used to fit linear models.",
    "output": "もしlmがグローバル環境にない場合には結果てきには、statsパッケージ内に見つかることになります。"
  },
  {
    "index": "F26011",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, as I said before, the global environment is always, is equivalent to the user's workspace, and it's always the first element on the search list.",
    "output": "さきほどお伝えしたようにグローバル環境というのはワークスペースと同等のもので常に検索対象リストの最初の要素になります。"
  },
  {
    "index": "F26012",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And furthermore, the base package is always the last element on the search list.",
    "output": "さらに、baseパッケージは常に検索対象リストの最後の要素となります。"
  },
  {
    "index": "F26013",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, clearly because of the way that the search process works in terms of going down the list of packages, the order of the packages in the search list matters.",
    "output": "パッケージのリスト順にこの検索処理が行われるため検索対象リスト内でのパッケージの順序が重要になるのは、明らかです。"
  },
  {
    "index": "F26014",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, and furthermore, users can configure which packages get loaded when you start up.",
    "output": "大切なのは、ユーザーはRを開始する時にどのパッケージを読み込むかを指定することができます。"
  },
  {
    "index": "F26015",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And for, and, and users can also load packages whenever they want.",
    "output": "また、さらに言えばユーザーは、任意のタイミングでパッケージを読み込むことができます。"
  },
  {
    "index": "F26016",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you cannot assume that there's going to be a set list of packages available or that the packages will be in any sort of order.",
    "output": "これらの理由から、特定のパッケージが読み込まれていたり、特定の順序で読み込まれたりしていることを前提とすることができません。"
  },
  {
    "index": "F26017",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So they can be in different orders at any time to give depending on the user has decided to do in a given session.",
    "output": "ユーザーが各セッションで実施したいと考えていることによってパッケージは、いつもどんな順番にでもなりえます。"
  },
  {
    "index": "F26018",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, when a user loads a package with a library function, what happens is, the namespace of that package which is the environment that has all the name, all the symbols, and all those, the values for the symbols.",
    "output": "関数ライブラリ付きのパッケージをユーザーが読み込むとパッケージに存在する名前空間が取り込まれます。名前空間というのは全ての名前、シンボルそしてその値を保持する環境です。"
  },
  {
    "index": "F26019",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The namespace of that package gets put in the second position of the search list.",
    "output": "検索リストの2つ目の位置に読み込まれます。"
  },
  {
    "index": "F26020",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So right behind the global environment.",
    "output": "グローバル環境の次に位置することになります。"
  },
  {
    "index": "F26021",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then everything else just kind of get pushed down one level.",
    "output": "既にあった他のものは全て1階層下に押しのけられます。"
  },
  {
    "index": "F26022",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so, and then the search will kind of go down, will include that new package, including, in addition to all the other packages that were originally on the search list.",
    "output": "検索では、もともとの検索リストにあった全てのパッケージに加えて追加されたパッケージも調べていくことになります。"
  },
  {
    "index": "F26023",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One thing to note is that R has separate namespaces for functions and non-functions, so it is possible to have an object named c somewhere and the function name c.",
    "output": "Rで注意が必要なのは関数と非関数で、異なる名前空間を持つことができることです。cという名のオブジェクトと同名の関数が存在することが可能です。"
  },
  {
    "index": "F26024",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, in your global environment, there can only be one symbol named c.",
    "output": "もちろん、グローバル環境にはcというシンボルは1つしか持てません。"
  },
  {
    "index": "F26025",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But it's possible to have for example, a vector named c, and that won't necessarily interfere with the function that already exists that's also named c.",
    "output": "しかし、cという名のベクトルを作ることができcという同じ名前で既に存在している関数と必ずしも衝突が起こるわけではありません。"
  },
  {
    "index": "F26026",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, this leads us to the scoping rules for R.",
    "output": "このようなことがRのスコープ規則の特徴です。"
  },
  {
    "index": "F26027",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "which, which is which I think are the, is the main feature that makes it different from the original S language.",
    "output": "この部分がもともとのS言語とR言語を異なるものにしている主な特徴です。"
  },
  {
    "index": "F26028",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Since, since most of you probably did not use the original S language, maybe, this may not, this may be something of a moot point.",
    "output": "ほどんどの方は、もともとのS言語を使ったことがないでしょうからこれは価値のない点のように聞こえるかもしれませんがスコープ規則こそがもともとの言語とR言語を分ける本質的な点なのです。"
  },
  {
    "index": "F26029",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what are the scoping rules?",
    "output": "スコープ規則とは何でしょうか?"
  },
  {
    "index": "F26030",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the scoping rules determine how a value is bound to a free variable in a function.",
    "output": "スコープ規則によって関数内の利用可能な変数に値の割り付けら方が決まります。"
  },
  {
    "index": "F26031",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you're in a function there's two types of variables.",
    "output": "例えば、関数内に2種類の変数があるとします。"
  },
  {
    "index": "F26032",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's the, there's the function arguments that are passed through the definition of the function, and then there may be other variables or other symbols that are found in the function that are not function arguments.",
    "output": "まず、関数の引数に定義されていて引数として引き渡されるものがあります。そして、関数の引数に定義されていない他の変数かシンボルがあるとします。"
  },
  {
    "index": "F26033",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the question is, how do you assign a value to those symbols.",
    "output": "ここで問題となるのは、このシンボルに値がどう割り付けられるかです。"
  },
  {
    "index": "F26034",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so R uses what's called lexical scoping or static scoping, and this is a common alternative to something called dynamic scoping.",
    "output": "Rでは、レキシカル・スコープと呼ばれる方法や静的スコープという方法を使います。"
  },
  {
    "index": "F26035",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so this is, related to the scoping rules is how R uses the search list to bind a value to a symbol.",
    "output": "スコープ規則で関連するのはRでは検索リストを使ってシンボルに値を割り付けるということです。"
  },
  {
    "index": "F26036",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and one thing that's nice about lexical scoping is that it turns out to be particularly useful for simplifying things like specifically statistical calculations.",
    "output": "レキシカル・スコープで素晴らしいことは特に統計計算のようなものを単純化するのにとても役立つということです。"
  },
  {
    "index": "F26037",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So take a look at the following function.",
    "output": "この関数を見てください。"
  },
  {
    "index": "F26038",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, this function has two formal arguments they're called x and y.",
    "output": "この関数には2つの引数がありxとyです。"
  },
  {
    "index": "F26039",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the body of the function, basically it squares x and it adds the ratio of y divided by z, okay?",
    "output": "コード内では、基本的にxを2乗してyをzで割った比率を加えます。"
  },
  {
    "index": "F26040",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, x is clear, and y is clear, but where did z come from, right?",
    "output": "xもyも明らかですがzはどこから来ているでしょうか?"
  },
  {
    "index": "F26041",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, in this case, x and y are formal arguments, but this, the symbol z is what's called a free variable, because it wasn't defined in the function, in the function header.",
    "output": "この場合、xとyは引数ですがシンボルzは自由変数と呼ばれるものです。この変数は関数でも、関数の引数部でも定義されていないためです。"
  },
  {
    "index": "F26042",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the question is, well, what value do we assign to z, assuming that values were inputted to the function for x and y.",
    "output": "ここで問題になるのはどんな値をzに割り付けるかです。xとyに関しては、関数へ渡されている前提の場合にです。"
  },
  {
    "index": "F26043",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, the scoping rules of a language determine how we assign a value to something like z, which is a free variable.",
    "output": "各言語のスコープ規則によってzのような自由変数に対してどう値を割り付けるかが決まります。"
  },
  {
    "index": "F26044",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I were so this, lexical scoping, the rules in R, can be summarized by the following sentence.",
    "output": "まとめるとRのスコープ規則のレキシカル・スコープは次のようになります。"
  },
  {
    "index": "F26045",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which is basically, the values of free variables are searched for in the environment in which the function was defined.",
    "output": "関数が定義されている環境に対して自由変数の値の検索が行われます。"
  },
  {
    "index": "F26046",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "OK, so, think about that for a second, maybe repeat it a few times.",
    "output": "この文を少し考えてみてください。何回か繰り返して言ってみてください。"
  },
  {
    "index": "F26047",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, what's an environment?",
    "output": "環境とは何でしょうか?"
  },
  {
    "index": "F26048",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "An environment is a collection of symbol-value pairs.",
    "output": "環境というのは、シンボルと値の組み合わせが集まったものです。"
  },
  {
    "index": "F26049",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, x is a symbol. And 3.14 might be its value.",
    "output": "xはシンボルで3.14のようなものがこれの値になります。"
  },
  {
    "index": "F26050",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and you can think of everything in R as being pairs of symbols and values.",
    "output": "Rでは、全てがシンボルと値の組み合わせになっていると考えてもよいでしょう。"
  },
  {
    "index": "F26051",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, so, a another symbol might be y, and its value is a data frame, for example.",
    "output": "別のシンボルとしてyを考えると例えば、データフレームがこの値かもしれません。"
  },
  {
    "index": "F26052",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so every environment which is a collection of these symbol-value pairs, has a parent environment.",
    "output": "このようにシンボルと値の組み合わせの集まったものが環境で、環境には、上位のペアレント環境があります。"
  },
  {
    "index": "F26053",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's kind of like the, the environment that sits on top of it would that, that it inherits from and it's possible for an environment to have multiple children.",
    "output": "上位の環境というのはこの環境の上にあるようなものでここから継承をします。"
  },
  {
    "index": "F26054",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there might be one parent environment and many children environment and so there's only one environment without a parent, and that's the empty environment.",
    "output": "つまり、1つの上位環境に対して複数の下位環境を持てます。上位環境がない環境はempty環境です。"
  },
  {
    "index": "F26055",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, when, so, R uses a lot of these types of environments.",
    "output": "Rではこのような環境を多く使います。"
  },
  {
    "index": "F26056",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you think of the global environment, which is your workspace that is a set of symbol-value pairs, right?",
    "output": "グローバル環境をあげて考えてみればワークスペースで、シンボルと値の組み合わせでできていましたよね。"
  },
  {
    "index": "F26057",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you have a bunch of things that you've created in your workspace, and they all have names.",
    "output": "ワークスペースには作成したものがいっぱい含まれて全てに名前が付いています。"
  },
  {
    "index": "F26058",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And each one of those things has an object associated with it.",
    "output": "その全てに名前にオブジェクトが関連付けられています。"
  },
  {
    "index": "F26059",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So they might be a vector of numerics, or it might be a data frame, or it might be a list, or whatever.",
    "output": "それは、数値ベクトルかもしれませんしデータフレームやリストだったりします。"
  },
  {
    "index": "F26060",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so there are all kinds of these envir, each package has a namespace, and that's like an environment.",
    "output": "そして、各パッケージには名前空間があって環境のように働きます。"
  },
  {
    "index": "F26061",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It has a bunch of symbols and values associated with it.",
    "output": "多くのシンボルと値が関連付けられています。"
  },
  {
    "index": "F26062",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so what the, the key thing in R is that if you take a function and you associate it with an environment, then that creates what's called a closure or a function closure.",
    "output": "Rで鍵となるのは関数を作って環境と関連付けるとクロージャ、または関数クロージャと呼ぶものが作成されます。"
  },
  {
    "index": "F26063",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And these closures are, are key to a lot of different types of interesting operations in R.",
    "output": "これらのクロージャはRで実行できる多様な興味深い演算の鍵です。"
  },
  {
    "index": "F26064",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if you, if you're in a function and you encounter a free variable in that function what happens?",
    "output": "関数の中を実行していて自由関数に出くわすと何が起こるでしょうか?"
  },
  {
    "index": "F26065",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the first thing you look for is the function in which the environment in which the function was defined.",
    "output": "まずは、関数が定義されている環境の関数を探します。"
  },
  {
    "index": "F26066",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example if the function was defined, if I define a function in the global environment, then the global environment is the function's, is the environment in which the function was defined.",
    "output": "例えば、関数をグローバル環境に定義したらグローバル環境が関数が定義されている環境です。"
  },
  {
    "index": "F26067",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I see a free variable in this function, what's going to happen is that if I can't figure out a value inside the function, then I'm going to look in the global environment, because that's where the function was defined.",
    "output": "つまり、この関数に自由関数を見つけた場合にはこの関数内には値を見つけることができずグローバル環境に探しに行きます。"
  },
  {
    "index": "F26068",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I can't find something in the global environment, then the search continues in what's called called the parent environment of the global environment.",
    "output": "もし、グローバル環境に関連するものが発見できない場合にはグローバル環境のいわゆる上位環境へと検索が続けられます。"
  },
  {
    "index": "F26069",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the, what happens in the usual case, if I define a function in the global environment, then the function is defined in the global environment, and then its parent environment is the next thing down on the search list.",
    "output": "通常よくあるのはグローバル環境で関数を定義すると関数はグローバル環境で定義されていてこの環境の上位環境は検索リストの次の順番のものになります。"
  },
  {
    "index": "F26070",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what happens is that you just go down the search list until you eventually find the value for this free variable.",
    "output": "ここでは、検索リストを順番に検索していきこの自由変数の値が見つけられるまで続けます。"
  },
  {
    "index": "F26071",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, it's possible to define a function outside of the global environment, and so generally speaking what happens is that a function will look for a value in the environment in which it was defined.",
    "output": "さて、グローバル環境以外でも関数を定義することが可能です。簡単に言えば関数はその関数が定義された環境内に値を探しに行きます。"
  },
  {
    "index": "F26072",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then it's going to look, if it can't find it there, then it's going to look for the parent environment.",
    "output": "この環境に見つけられない場合には上位環境に探しにいきます。"
  },
  {
    "index": "F26073",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then if it can't find it there the search, it will keep looking at the parent environment or the parent etc, until we hit what's called the top level environment.",
    "output": "そこに見つけられない場合にはさらに上位環境、その上位と続けて検索していきtop-level(最上位)環境まで検索を行います。"
  },
  {
    "index": "F26074",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The top level environment is usually the global environment, however, if the function is defined in a package, then the top level environment is the namespace of that package.",
    "output": "top-level環境は通常クローバル環境ですが関数がパッケージで定義されていると、top-level環境はそのパッケージの名前空間です。"
  },
  {
    "index": "F26075",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "once, if you can't find a value there, then once you hit the top level environment, the search will continue down the search list until we have hit the empty environment.",
    "output": "環境がここに見つからずtop-level環境に到達すると今度は検索は下位階層に向けて検索を続けempty環境に達するまで検索を行います。"
  },
  {
    "index": "F26076",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, after the base package, for example, then we hit the empty environment.",
    "output": "例えば、baseパッケージに続けてempty環境に検索を行います。"
  },
  {
    "index": "F26077",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you can't find a symbol in all these environments and we've hit the empty environment, then we throw an error saying we can't find a value for this symbol.",
    "output": "これらの環境にシンボルが見つからずempty環境にも到達したら、このシンボルに対する値を発見できないというエラーを発生させます。"
  },
  {
    "index": "F26078",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's not immediately clear.",
    "output": "瞬時に明確にはなりません。"
  },
  {
    "index": "F26079",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So typically the function is defined the global environment so that values of the free variables are just found in the user's workspace.",
    "output": "「いいえ」関数はグローバル環境に定義されることが多くこの状態では、ワークスペースに自由変数の値が見つかります。"
  },
  {
    "index": "F26080",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The right thing to do is kind of what most people are expecting.",
    "output": "この挙動は適切なことと言えてほとんどの人が想像する動きです。"
  },
  {
    "index": "F26081",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If there's no, if, if there's, you can't find a value inside the function itself, you just look in the global environment.",
    "output": "もし、関数の中に値が見つけられない場合にはグローバル環境に探しに行きます。"
  },
  {
    "index": "F26082",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is the, the idea here is that you can define things like global variables, that will be common to a lot of different functions.",
    "output": "これは、グローバル変数などを定義できてワークスペースで定義する多くの他の関数でも共通して使えるということです。"
  },
  {
    "index": "F26083",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, but the key difference in R is that you can define functions inside of other functions.",
    "output": "しかし、Rでの鍵となる違いは他の関数の中に関数を定義できることです。"
  },
  {
    "index": "F26084",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "'n so for example a function can return a function as the return value.",
    "output": "例えば、関数が戻り値として関数を返すこともできます。"
  },
  {
    "index": "F26085",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in most functions they'll return a list, or a vector, or a matrix, or a data frame or something like that, but it is possible for a, for a function to return another function and then that, if that's the case then the, then the function that gets returned.",
    "output": "ほとんどの関数で、リストベクトル、行列、データフレームなどを返すことができますがこれだけではなく関数が別の関数を返すことができます。この場合には関数が返されます。"
  },
  {
    "index": "F26086",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It was defined inside of another function.",
    "output": "この場合、関数は別の関数内で定義されています。"
  },
  {
    "index": "F26087",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, it's an, the environment in which it was defined Is not the global environment.",
    "output": "ここでは、それが関数が定義された場所でグローバル環境ではありません。"
  },
  {
    "index": "F26088",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's really the, the, the insides of this other function.",
    "output": "まさに、他の関数の中です。"
  },
  {
    "index": "F26089",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is when things get interesting and this is when the scoping rules really have an impact on what you can do.",
    "output": "これが興味深くなるところでスコープ規則によって、何ができるのかに影響を及ぼしているところです。"
  },
  {
    "index": "F26090",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I am going to define a very simple function here and often these kinds of functions come where you might think of constructive functions.",
    "output": "では、ここで非常に簡単な関数を定義します。この種類の関数が出くわすことがあります。"
  },
  {
    "index": "F26091",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the idea that the function is constructing another function.",
    "output": "関数が別の関数を作るということです。"
  },
  {
    "index": "F26092",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here's what I want to, I want to create a function that that defines another, called make.power.",
    "output": "この例で作るのはmake.powerという別の関数を定義する関数です。"
  },
  {
    "index": "F26093",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And what make.power takes as input is a number n.",
    "output": "make.powerは数値nを引数に持ちます。"
  },
  {
    "index": "F26094",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, and inside the make.power function I define another function called pow.",
    "output": "make.power関数内にはpowという関数を定義しています。"
  },
  {
    "index": "F26095",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And pow is going to take an argument called x.",
    "output": "ここではpow関数が引数xを使ってn乗しています。"
  },
  {
    "index": "F26096",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and so what's going to happen is that the power function is going to take the, then the, take the argument X and raise to their power N, okay, and so make that power returns, with a function power as its return value and so you see inside the power function X is a, X is a function argument but that's not a problem, but n is a free variable because its not defined inside the power.",
    "output": "そして、make.powerは関数のpowを戻り値として返しています。このpow関数の中ではxは関数の引数で問題ありませんがpow関数内ではnは定義されていないのでnは自由変数です。"
  },
  {
    "index": "F26097",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Function. However, N is defined inside the make.power function and so since that's the environment in which the pow is defined.",
    "output": "しかし、nはmake.power関数内では定義されています。"
  },
  {
    "index": "F26098",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It will find the value of N.",
    "output": "この中が関数powが定義されている環境なのでnの値を見つけることができます。"
  },
  {
    "index": "F26099",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The pow, the power function will find the value of n inside this, it's other environment.",
    "output": "pow関数はnの値を他の環境の中に見つけることができます。"
  },
  {
    "index": "F26100",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what happens is that I can call make.power and pass it a number like 3.",
    "output": "どうなるかというと、make.powerを呼んで3などの数値を渡すと関数を返します。"
  },
  {
    "index": "F26101",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then, it will return a function, which I'll sign to be called cube.",
    "output": "ここではcubeに割り当てられます。"
  },
  {
    "index": "F26102",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, similarly, I can pass 2 to make that power and create a function that I'll call square.",
    "output": "ように、make.powerに2を渡して関数を作って、squareと呼ぶことにします。"
  },
  {
    "index": "F26103",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now, when I, when I pass cube, the number 3 What is it does is it raises 3 to the 3rd power, so I get 27.",
    "output": "この後で、cubeに3を渡すと3を3乗して27を返します。"
  },
  {
    "index": "F26104",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I call square on the number 3, it, it raises three to the 2nd power, so it gives me 9.",
    "output": "squareに3を渡すと3を2乗して9を返します。"
  },
  {
    "index": "F26105",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, so, so now, I've cons, I've got one function that can, that's capable of constructing many different types of functions, and by raising to pow, to various powers.",
    "output": "このように多様な関数を作ることができる関数を作りました。"
  },
  {
    "index": "F26106",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, how do you know what's in a function's environment?",
    "output": "関数の環境はどうすれば分かるでしょうか?"
  },
  {
    "index": "F26107",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can look in the environment in which the function was defined, by calling the LS function.",
    "output": "ls関数を呼べば関数が定義されている環境を見ることができます。"
  },
  {
    "index": "F26108",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I call, if I call LS on On the environment for cube.",
    "output": "例えば、lsをcubeの環境に対して呼び出せばcube関数の中を見ることができます。"
  },
  {
    "index": "F26109",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can see that inside the cube function, there's, there's something, there's an, there's an object called N.",
    "output": "nというオブジェクトがあるのが分かります。"
  },
  {
    "index": "F26110",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if I use get on N you'll see that the value of N is equal to 3.",
    "output": "nに対してgetを実行するとnの値が3なのが分かります。"
  },
  {
    "index": "F26111",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Excuse me, that's how the cube function knows how to, knows to raise the argument to the 3rd power because it's already defined.",
    "output": "このようにしてcube関数からすると引数として渡されたものを3乗すれば良いことが分かります。"
  },
  {
    "index": "F26112",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Similarly the environment for square, you can see it has the exact same objects in it.",
    "output": "この数が既にクロージャ環境に定義されているためです。"
  },
  {
    "index": "F26113",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But now the value of n is equal to 2, in the square function.",
    "output": "同様にsquareの環境では全く同じオブジェクトが入っていますがsquare関数ではnの値は2となっています。"
  },
  {
    "index": "F26114",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so, I want to make one brief comparison between lexical scoping, which is what R does, and dynamic scoping, which is what maybe some other function, some other programing languages implement.",
    "output": "ここで少しだけRが使っているレキシカル・スコープと動的スコープを比べたいと思います。"
  },
  {
    "index": "F26115",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've got, I'm assigning the value of Y equal to 10.",
    "output": "ここでは、yに10を代入しています。"
  },
  {
    "index": "F26116",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then create a function F, which takes, as an argument, X.",
    "output": "次にxを引数とした関数fを作ります。"
  },
  {
    "index": "F26117",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then, it assigns, there it assigns Y equal to 2, it squares Y and then adds G of X.",
    "output": "この中で、yに2を代入しyを2乗して、g(x)を加えます。"
  },
  {
    "index": "F26118",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what's G?",
    "output": "gとは何でしょうか?"
  },
  {
    "index": "F26119",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "G is another function, which takes as an argument called X, and it multiplies X times Y.",
    "output": "gは、また別の関数で引数xがありxをy回乗算します。"
  },
  {
    "index": "F26120",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in the F function, Y is a free variable, and G is also a free variable.",
    "output": "f関数では、yは自由変数でgも自由変数です。"
  },
  {
    "index": "F26121",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Inside of F of or, it's, it, of, argument to F.",
    "output": "つまり、g関数はf関数の中や引数では定義されていません。"
  },
  {
    "index": "F26122",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then in the G function, then the var-, the symbol Y is a free variable.",
    "output": "そして、g関数の中ではシンボルyは自由変数です。"
  },
  {
    "index": "F26123",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the question is if I call f of 3 what gets returned?",
    "output": "ここで問題なのはf(3)を実行すると何が返ってくるでしょうか?"
  },
  {
    "index": "F26124",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So with lexical scoping, the value of Y and the function G is looked up in the environment in which the function was defined.",
    "output": "レキシカル・スコープではyの値と関数gは関数が定義された環境で探されます。"
  },
  {
    "index": "F26125",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which in this case was the global environment.",
    "output": "この場合は、グローバル環境内から探されます。"
  },
  {
    "index": "F26126",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that the value of Y and the G function is 10.",
    "output": "g関数でのyの値は10になります。"
  },
  {
    "index": "F26127",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So with dynamic scoping the value of Y is looked up in the environment from which the function was called; sometimes called the calling environment.",
    "output": "動的スコープではyの値は関数が呼び出された環境から探されます。この環境は、ときに呼び出し環境と呼ばれます。"
  },
  {
    "index": "F26128",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in the R the calling environment is known as is what's called the parent frame.",
    "output": "Rでは、呼び出し環境はparentframeの名称で通っています。"
  },
  {
    "index": "F26129",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In this case the calling environment Y was defined to be 2 and so the value of Y would be 2.",
    "output": "この場合には、呼び出し環境で仮にyが2として定義されていればyの値は2になります。"
  },
  {
    "index": "F26130",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So. Calling the function F would produce different answers depending on whether you use lexical scoping or dynamic scoping.",
    "output": "これらの偏微分を計算するにはレキシカル・スコープか動的スコープかによってfを呼んだときの結果は異なります。"
  },
  {
    "index": "F26131",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the one thing that, that, that will make lexical scoping and dynamic scoping look the same is that when a function is defined in the global environment and is subsequently called from the global environment, then the defining environment and the calling environment are exactly the same and so this can sometimes give the appearance of dynamic scoping even when It doesn't exist.",
    "output": "これは、関数がグローバル環境で定義されさらにグローバル環境から呼び出されている時であれば定義環境と呼び出し環境が完全に一致している状態です。この状態だと、実際には実装されていない動的スコープと同じように見える結果を返すことがあります。"
  },
  {
    "index": "F26132",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've got a function called G. It takes an argument X.",
    "output": "その例として、ここに関数gがあります。"
  },
  {
    "index": "F26133",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It assigns A to be equal to 3. And then it adds X plus A plus Y.",
    "output": "この関数は、引数xを持っていてaに3を代入しx+a+yを実行します。"
  },
  {
    "index": "F26134",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in this case, X is a function is a formal argument.",
    "output": "この場合xは、引数に指定されています。"
  },
  {
    "index": "F26135",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "A is a local variable so it's not a formal argument, but I defined it inside the function.",
    "output": "aはローカル変数で引数ではありませんが関数の中で定義しています。"
  },
  {
    "index": "F26136",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then so, that's okay.",
    "output": "なので、問題ありません。"
  },
  {
    "index": "F26137",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then Y is a free variable, okay?",
    "output": "yは自由変数ですね。"
  },
  {
    "index": "F26138",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I call G of 2, the function G is going to look for the value of Y in the global environment.",
    "output": "g(2)と呼び出すと関数gはグローバル環境にyの値を探します。"
  },
  {
    "index": "F26139",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I haven't yet defined Y then there has to be an error because it doesn't know what value to assign to the symbol of Y.",
    "output": "yを定義していなかったのでエラーが起こります。シンボルyにどの値を割り当てればよいか分からないためです。"
  },
  {
    "index": "F26140",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's what I get in this line here.",
    "output": "yを一旦定義すると例えば、3を代入してからg(2)を呼び出すと、8を返します。"
  },
  {
    "index": "F26141",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now if I define what Y is, say I assign it to be 3, if I call it G of 2, then it returns 8 because now it's able to find Y in the global environment.",
    "output": "これは、yがグローバル環境に見つかったためです。ここでは、まるでyの値が呼び出し環境で探されたかのようですが実際には、定義された環境で行われています。"
  },
  {
    "index": "F26142",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So even though it looks like the value of Y was looked up in the calling environment, it's actually the defining environment because G happened to be defined in the global environment so, there are a number of other languages that support lexical scoping.",
    "output": "gは、たまたまグローバル環境で定義されているためです。レキシカル・スコープを使える言語は数多くあります。"
  },
  {
    "index": "F26143",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Some examples are things like Scheme, Perl, Python, and Common Lisp.",
    "output": "例としては、Scheme、PerlPythonやCommonLispがあります。"
  },
  {
    "index": "F26144",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And of course there's a, a well known computer science theorem which is that all languages eventually converge to Lisp.",
    "output": "もちろん、コンピューターサイエンスでは良く知られた定理としてCommonLispは、様々な言語が最終的にLispになったものです。"
  },
  {
    "index": "F26145",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so it's, it's not a, it's not an obscure type of feature.",
    "output": "このように、あまり知られていない特徴というわけではありません。"
  },
  {
    "index": "F26146",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's actually very common in a number of other programming languages.",
    "output": "他のプログラム言語でも実は非常によくあるものです。"
  },
  {
    "index": "F26147",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, one of the main consequences of lexical scoping in R is that all the objects have to be stored in memory.",
    "output": "Rがレキシカル・スコープなことから生じる結果として全てのオブジェクトがメモリーに格納されている必要があります。"
  },
  {
    "index": "F26148",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if you're working with a programming language that has very small objects this generally speaking not a big problem.",
    "output": "もし、非常に少ないオブジェクトしか使用しないプログラム言語なら一般的に言えば、これは大きな問題にはなりません。"
  },
  {
    "index": "F26149",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "but. Because of nature of the scoping rules and because of the complexity of the environment and the, the way they are all linked together, it's difficult to implement this type of model outside of physical memory, and so.",
    "output": "しかしスコープ規則の持つ性質や環境と相互の依存性の複雑さから物理メモリの外にこの種のモデルを実装するのは困難です。"
  },
  {
    "index": "F26150",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the consequence was that, when R was originally designed.",
    "output": "つまりこの結果としてRが当初設計された時に全てがメモリに格納されることになりました。"
  },
  {
    "index": "F26151",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Things are getting complicated now, because of very large types of data sets.",
    "output": "事情は、どんどん複雑になり今では巨大なデータセットがありRに読み込むことができるようにするのは課題にもなりえます。"
  },
  {
    "index": "F26152",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Everything has to be stored in memory.",
    "output": "全てをメモリーに格納する必要があるからです。"
  },
  {
    "index": "F26153",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Second now, so every function has a carrier pointer to its respect, to its defining environment.",
    "output": "2つ目に、関数はキャリアポインターが必要で定義環境を示す必要があります。"
  },
  {
    "index": "F26154",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, and that defining environment could literally be anywhere because there could be functions within functions and then the, and if you do, if one function returns another function, then there has, there has to be a pointer to that piece of memory where the defining environment is stored.",
    "output": "関数の中の関数であったり別の関数を返す関数を定義したりすると定義環境が格納されているメモリの箇所を指し示すポインターが必要になります。"
  },
  {
    "index": "F26155",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so this makes the model a little bit more complex but but, but all the more useful.",
    "output": "これがモデルを少し複雑にしますがゆえに、より使いやすくなっています。"
  },
  {
    "index": "F26156",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the, in S plus, which was kind of the original implementation of the S language, the free variable were always looked up in the workspace.",
    "output": "これが、S言語元来の実装ともいえるS-PLUSでは自由変数は、常にワークスペースから探されます。"
  },
  {
    "index": "F26157",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Everything could be stored on the disk, because the defining environment of all the functions was the same.",
    "output": "全てをディスクに格納することもできます。全ての関数の定義環境が同じになるためです。"
  },
  {
    "index": "F26158",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So far, we've talked about functions and the scoping rules in R, and you might be wondering why any of this information is at all useful.",
    "output": "ここまで、Rでの関数とスコープ規則を話してきましたがこの情報のどこに、それほどに役立つことがあるのかと思うかもしれません。"
  },
  {
    "index": "F26159",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in addition to just writing regular functions for manipulating data or for doing calculations, there's one combination of the scoping rules and functions which can be very useful in statistics, and that's for optimization.",
    "output": "役立つのはただ通常の関数を書いてデータを操作したり計算を行ったりするのではなくスコープ規則と関数を組み合わせて使うと統計で非常に役に立つことがあります。"
  },
  {
    "index": "F26160",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are a few optimization routines in R called optim and nlm and another one called optimize.",
    "output": "Rでは、最適化に使用するルーチンがありoptim、nlm、optimizeがあります。"
  },
  {
    "index": "F26161",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And they all require that you pass a function to those functions, whose argument is vector parameters.",
    "output": "これらの使い方ですべてに共通しているのはベクトル引数を使用して関数を引き渡します。"
  },
  {
    "index": "F26162",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example there's going to be some function that you want to minimize or maximize.",
    "output": "つまり、例えば極小化か極大化をパラメーターを使って行いたい関数があるとします。"
  },
  {
    "index": "F26163",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, over range of parameters, and functions like Optum and lmand take, take that kind of objective function, and try to find the minimum or the maximum.",
    "output": "optim、lm、optimizeなどの関数では目的関数を使って最小値や最大値を求めようとします。"
  },
  {
    "index": "F26164",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, the idea is that, but in statistics this objective function that we're trying to minimize or maximize, just like a log likelihood, is going to depend on other things, besides just the parameters that you're maximizing over.",
    "output": "統計では、極大化、極小化を行おうとする目的関数はlog-likelihoodのように極大化しようとしているパラメーターだけでなく他のことにも依存します。"
  },
  {
    "index": "F26165",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for, in particular, it's going to depend on things like data.",
    "output": "とりわけ、データのようなものに依存します。"
  },
  {
    "index": "F26166",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, the question is, well, how do you specify a function.",
    "output": "ここでの問題は、関数がパラメーターやデータなどの恐らくは多くのものに依存しているときにどう指定するのかです。"
  },
  {
    "index": "F26167",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Depend, depends on parameters and data and perhaps many, many other things.",
    "output": "さらに、このような最適化を行うときは特定のパラメーターを固定するのが役に立つことが多くあります。"
  },
  {
    "index": "F26168",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In a clean, way and to, to write it in a, in a, in kind of readable programming style and make it easier for the user to kind of use these types of functions.",
    "output": "例えば、特定の値にパラメーターを固定して他のパラメーターに対して最適化を行います。"
  },
  {
    "index": "F26169",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And further more, when you're doing these kinds of optimizations in many cases it's useful to hold certain parameters fixed and for example, fix a parameter to a certain value then optimize over the other parameters.",
    "output": "最適化問題をRで扱うときには目的関数を生成する生成関数を作るのが基本の考えです。"
  },
  {
    "index": "F26170",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the basic idea with any optimization problem in r is you can create a contructor function which constructs the objective function.",
    "output": "目的関数の基本的な考えは全てのデータや他の依存するもの全てをその関数を定義した環境に含めるという考えです。"
  },
  {
    "index": "F26171",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then once the ob, and the objective function idea, that idea is that it would have all of the data, and all of the other things that it depends on would be kind of included in the defining environment of that function, so that it would kind of carry along those other things like baggage, you know, in its, in its enclosing environment.",
    "output": "こうすることでまるでカバンかのように様々なものを一緒に入れておけるようにします。"
  },
  {
    "index": "F26172",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that way you don't have to specify those things every time you call the function.",
    "output": "こうすることでこの関数を呼ぶたびにこれらのことを指定する必要がなくなります。"
  },
  {
    "index": "F26173",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The only thing that you need to specify is the value of the parameter.",
    "output": "パラメーターの値を指定する必要しかありません。"
  },
  {
    "index": "F26174",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for here I've got, I've written a constructor function that creates a negative log-likelihood.",
    "output": "ここに、生成関数を作りました。これで負の対数尤度関数を作ります。"
  },
  {
    "index": "F26175",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So just as a note, most of the functions in like optim and anolam and optimize and, in R, they all attempt to minimize functions by default.",
    "output": "少し加えておくとoptim、lm、optimizeなどのRの関数の多くが、デフォルトでは関数の極小化を試みます。"
  },
  {
    "index": "F26176",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so when you write your objective functions if they're designed to be maximized, then you have to kind of take the, the negative of those functions so that you can minimize them.",
    "output": "このため、極大化を行おうとすると目的関数を書く場合にはこの関数の負の値を使うことで極小化で使えます。"
  },
  {
    "index": "F26177",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So another thing is that all the code in this example all, will be on the website so you can take a look at the code and try to run it yourself if you want.",
    "output": "この例のコードは全てウェブサイトに載せますのでコードを見たり、自分で実行することもできます。"
  },
  {
    "index": "F26178",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've got a constructor function that's making a negative log-likelihood because I want to minimize the negative log-likelihood function.",
    "output": "ここでは、負の対数尤度を極小化したいためです。これが、目的関数です。"
  },
  {
    "index": "F26179",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is my objective function. It's going to depend on some data and so that's the argument.",
    "output": "これにはデータが必要なのでデータが、make.NegLogLik関数の引数の1つ目にきています。"
  },
  {
    "index": "F26180",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the data is the first argument to this make.makelike function.",
    "output": "引数の2つ目は論理ベクトルのfixedです。"
  },
  {
    "index": "F26181",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second argument is a logical vector called fixed and it determines whether or not I want to have, want to fix some of the parameters.",
    "output": "これで、パラメータのどれかを固定するかどうかを決定します。"
  },
  {
    "index": "F26182",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now ins- inside the constructor function I have to find another function which is it takes an argument called p for the parameters.",
    "output": "これが、パラメーターのベクトルでこれに対して最適化を行います。"
  },
  {
    "index": "F26183",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And this is going to be the parameter vector that I want to optimize over.",
    "output": "この正規分布に対してこのデータを適合させようとしています。"
  },
  {
    "index": "F26184",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So basically what this function's going to do is going to return log-likelihood for a normal distribution and I'm go- I'm going to want to fit my data to this normal distribution.",
    "output": "ご存知のように正規分布には2つのパラメーターがあります。"
  },
  {
    "index": "F26185",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so we know that a normal distribution has two parameters, the mean, mu, and a standard deviation, sigma.",
    "output": "平均はmuで標準偏差はsigmaです。"
  },
  {
    "index": "F26186",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So those are going to be the two parameters that I want to optimize over.",
    "output": "この2つのパラメーターに対して最適化を行います。"
  },
  {
    "index": "F26187",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so here I'm just defining, the law of likelihood, and taking the negative of it, so I can minimize it.",
    "output": "ここでは対数尤度を定義してこれの負を取って極小化できるようにします。"
  },
  {
    "index": "F26188",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, what, what the constructor function does is returns the function as the return value.",
    "output": "ここで生成関数が行っているのは関数を返り値として返しています。"
  },
  {
    "index": "F26189",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here I'm going to simulate some normal random variables, mean 1 and vari, and sorry, mean 2.",
    "output": "さて、ここでは正規分布乱数を生成しています。平均が1で標準偏差が2のものです。"
  },
  {
    "index": "F26190",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and then I'm going to make my constructor function, I'm going to call my constructor function with these random variables. And create my NLL or Negative Log Likelihood function.",
    "output": "そして、ここでは生成した正規分布の変数を使って生成関数を呼んでnLL、または負の対数尤度用の関数を作っています。"
  },
  {
    "index": "F26191",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So,when I print out this function here,you will see that it, I see the body of the function looks like the code for the normal distribution.Its just like in the construction function before, but if you look at the environment, you will see this little tag that at the bottom that says environment.",
    "output": "このnLL関数をここに出力すると正規分布のための先ほどの生成関数の内部のような関数のコードらしきものが出力されます。しかし、出力された環境を見るとenvironmentと表示されている最終行の小さなタグがありますがこれがこの関数の上位環境です。"
  },
  {
    "index": "F26192",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's the enclosing environment for this function.",
    "output": "もし、関数をグローバル環境で定義すれば特別なenvironmentタグはここには出ません。"
  },
  {
    "index": "F26193",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so normally because when you define a function in the global environment, that it would just you, there wouldn't be a special environment tag down here.",
    "output": "しかし、関数の中で関数を定義すると定義環境へのポインターが必要です。"
  },
  {
    "index": "F26194",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, when you define a function inside of another function that and there has to be a pointer to the, to that defining environment so that R can remember kind of what the values of all the free parameters are going to be.",
    "output": "こうすることでRが全ての自由変数の値が何かを記録しておけるようにします。"
  },
  {
    "index": "F26195",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, if you look at, this, this is, 0 x 16 5 b 1 a 4.",
    "output": "この0x165b1a4を見ると16進数の番号でメモリー上で定義環境がどこかを示しています。"
  },
  {
    "index": "F26196",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you look at the body of the nl function here, you'll see that pretty much everything here is either a local variable or its a param-, it comes with a parameter vector p.",
    "output": "ここのnLL関数の中身を見るとここにあるのはローカル変数かパラメーターのベクトルpから来たものだとわかります。"
  },
  {
    "index": "F26197",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, there was one argument, th-, sorry, there's one variable here, the data variable, which is not an argument to the function And it's not a local variable, so it's a free variable but the data come from the make neglog like functions or constructor function which originally pass the data to that.",
    "output": "これは関数の引数でもなくローカル変数でもないのでこれは自由変数ですがもともとはdataが渡された先のmake.NegLogLik関数もしくは生成関数からのものです。dataは、関数が定義された環境で見つけることができます。"
  },
  {
    "index": "F26198",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the data can be looked up in the environment that the function is defined and it knows what the data are, you don't have to tell what the data are it's already fixed in the function.",
    "output": "dataがどこにあるのかが分かりdataが何かを指示する必要はありません。"
  },
  {
    "index": "F26199",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you look at the environment for this negative log-likelihood function by calling LS, you'll see that the the data variables there.",
    "output": "このため、lsを呼び出してnLL関数の環境を調べるとdata変数がこの中にあるのが分かります。"
  },
  {
    "index": "F26200",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The fixed variable there which indicates which parameter should be fixed, and then there's also the params variable there.",
    "output": "また、fixed変数がありどのパラメーターを固定するかを指定します。params変数もここにあります。"
  },
  {
    "index": "F26201",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Inside this negative log likelihood function, but they're defined in the defining environment.",
    "output": "これら3つはこのnLL関数の中では全て自由変数ですが全て定義環境で定義されています。"
  },
  {
    "index": "F26202",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I can call optim on my NLL function and I'm going to pass some initial values for musing to zero and sigma to one, and it'll run and you'll see that when it optimizes the function the estimates turn out to be 1.2 for muand 1.78 for sigma.",
    "output": "実行すると、関数を最適化して推定値は、muが1.2でsigmaは1.78になります。"
  },
  {
    "index": "F26203",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So pretty close to the truth, remember, which was one and two.",
    "output": "もともと1と2だったので真実にとても近いですね。"
  },
  {
    "index": "F26204",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now I could, if I wanted to, I could fix sigma to be equal to its true value and then just optimize over mu to get the mean, and so when I call make.",
    "output": "もし実施したければsigmaを実際の値に固定してmuに対してのみ最適化を実行して平均を計算できます。"
  },
  {
    "index": "F26205",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I need to reconstruct my optim, my objective function by calling make.neg log like, and here I set the fixed variable to be false from U.",
    "output": "ここで、fixed変数にはmuにFALSEを設定しsigmaに2を設定します。"
  },
  {
    "index": "F26206",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'm setting Sigma to be equal to two, and I'm letting U be three.",
    "output": "sigma=2に設定して、muを変更できるようにします。さてこれでoptimizeを呼べばよいだけです。"
  },
  {
    "index": "F26207",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now I can just call, optimize, because optimize will minimize the function of a single variable only.",
    "output": "optimizeが極小化できるのは単一変数の関数だけです。"
  },
  {
    "index": "F26208",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And because I only have a single variable in this, function, I can use, I can use optimize.",
    "output": "この関数には1つの変数しかないのでoptimizeを使うことができます。"
  },
  {
    "index": "F26209",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that it, it, it estimates made to be about 1.21 so slightly different from the previous optimization.",
    "output": "ここで見てわかるようにmuの推定値は1.21となり、先ほどの最適化より少しだけ違うものになりました。"
  },
  {
    "index": "F26210",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can also fix mu to be one and try to optimize over over sigma and but in order, in order to do that I have to construct another function for optimization call optimize on that.",
    "output": "また、muを1に固定して、sigmaを最適化することもできますがこれを実施するには最適化用の関数を再度作ってそれに対してoptimizeを実行する必要があります。"
  },
  {
    "index": "F26211",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Here I get my f cent of sigma to be about 1.8.",
    "output": "今度は、sigmaが約1.8となりました。"
  },
  {
    "index": "F26212",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I want, I can plot the likelihood, or the log likelihood, and this is very easy to do when I have a function that doesn't depend on a lot of other parameters.",
    "output": "もし実施したければ、対数尤度をプロットすることも非常に簡単にできます。ただ、多くの他のパラメーターに関数が依存していない場合にはです。"
  },
  {
    "index": "F26213",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I'm going to make the neg, the negative log likelihood.",
    "output": "さて、ここでは負の対数尤度を作ってmu=1にして負の対数尤度をsigmaの関数としてプロットします。"
  },
  {
    "index": "F26214",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm going to fix mu to be equal to one and I'm going to plot the negative log likelihood as a function of sigma.",
    "output": "ここで関数nLLを作ります。"
  },
  {
    "index": "F26215",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I construct my function here, in LL.",
    "output": "xの座標を作るのにグリッド値の順列を作ります。"
  },
  {
    "index": "F26216",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I I construct a sequence of grid values for the X coordinate, and then I apply my NLL function to all those grid points, and create my Y variable.",
    "output": "nLL関数を、そのグリッド値に適用しy変数を作ります。"
  },
  {
    "index": "F26217",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now I can just plot this as a, as a, I can plot the Xs and the Ys and connect the dots using the type equal to L.",
    "output": "これで、xとyをプロットできます。また、type=\"l\"とすることで点を繋いで線にします。"
  },
  {
    "index": "F26218",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Similarly I can plot the negative likelihood as a function of the mean by fixing sigma to equal to two and letting mu vary.",
    "output": "同様に、負の対数尤度をsigma=2に固定し、muを変化させて平均の関数としてプロットすることができます。"
  },
  {
    "index": "F26219",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And similarly, I create another grid of points another set of grid points and I evaluate at the NLL function on those grid points and then make a plot.",
    "output": "ここでも同様にグリット値を作成してこれらのグリッドに対してnLL関数で評価した後にプロットします。"
  },
  {
    "index": "F26220",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the nice thing about lexical scoping in R is that, if you're doing minimization or optimization of some sort, you can build these objective functions, which contain all the necessary data, and all the other kind of bells and whistles that are required, to evaluate that function.",
    "output": "そして、Rのレキシカル・スコープが素晴らしいのはなんらかの極小化や最適化を実施する場合に関数を評価するのに必要な目的関数を作ってデータや附随するデータを関数の上位環境に含められます。"
  },
  {
    "index": "F26221",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that when you call the objective function, you don't need to specify the data, and all those other things every single time.",
    "output": "こうすることで目的関数を呼ぶときにデータや附随するものを毎回指定する必要がなくなります。"
  },
  {
    "index": "F26222",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They're kind of built in to the environment and they'll be automatically looked up in the right place.",
    "output": "環境に組み込まれていて自動的にしかるべき箇所から探すようにできています。"
  },
  {
    "index": "F26223",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That in order to evaluate the function every single time.",
    "output": "関数を評価するために必要な長くなる引数のリストを毎回渡す必要はありません。"
  },
  {
    "index": "F26224",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this can be very useful for interactive work, and for exploratory work like for example making these plots.",
    "output": "このような関数のコードは非常に単純で、難しくないものにすることができます。"
  },
  {
    "index": "F26225",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And this can so the code for these types of functions can be very simple and kind of clean because you don't have to carry on these large argument lists.",
    "output": "非常に長い引数のリストを引き渡す必要がないからです。"
  },
  {
    "index": "F26226",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So just for reference, the main reference for this type of Lexical Scoping rules of R, is the paper in the journal Computation and Graphical Statistics called Lexical Scope and Statistical Computing, and Robert Gentleman and Ross Ihaka who created R, have some very nice examples in this article.",
    "output": "Rのレキシカル・スコープの規則のおもな参照先としてはJournalofComputationalandGraphicalStatistics誌の『LexicalScopeandStatisticalComputing』という題のロバート・ジェントルマンとロス・イハカによる論文があります。"
  },
  {
    "index": "F26227",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Coding standards in R are really important becasue they help you, make your code readable and allow you and other people to understand what's going on in your code.",
    "output": "標準によってコードが読みやすくなってコードで何をしているか理解しやすくなります。"
  },
  {
    "index": "F26228",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, of course, just like it is with any other, style whether it comes, when you, you know, whether it's your clothing or whatever it is, it's difficult to get everyone to agree on one set of ideas.",
    "output": "さて、もちろんですが他のどんな様式にも当てはまることですが例えば服装やなんでもがそうであるように何か1つの方針に全員が同意するのは難しいことです。"
  },
  {
    "index": "F26229",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But I think there are a couple of very basic, kind of minimal standards that are important when you're coding in R.",
    "output": "そうであってもRでコーディングする上で重要になってくる本当に基本的な最低限の標準があります。"
  },
  {
    "index": "F26230",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Alright, so I'm just going to talk a little bit about some of the coding standards, that I think are important to, when you're writing R code, and I think will help make your code more readable and more usable by others if that's what you're trying to, to achieve.",
    "output": "では、今後Rでコーディングする際に重要なコーディング標準について少しお話しします。この標準に従うことで見やすさや使ってもらう事を目指すならコードを見やすくしたり使ってもらいやすくもできます。"
  },
  {
    "index": "F26231",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the first principle that I think is very important in pretty much any programming language, not just R, is that you should always write your code using a text editor and save as a text file.",
    "output": "1つ目の標準はRに限らずどのプログラム言語でも非常に重要です。コードを書くときにはテキストエディターを使ってテキスト形式で保存するようにすることです。"
  },
  {
    "index": "F26232",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, so, a text file is a kind of basic standard.",
    "output": "そうですテキストファイルが基本的な標準の1つです。"
  },
  {
    "index": "F26233",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It usually doesn't have any sort of formatting or any sort of, kind of special, appearance, it's just text, right?",
    "output": "テキストは通常どんな書式もなく特別な見た目の違いもなくただの文字ですよね。"
  },
  {
    "index": "F26234",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And usually, typically, typically it's going to be ASCII text, but if you're, on, in places outside the US or the UK using non-English languages there may be other standard text formats.",
    "output": "そして概してアスキー形式のテキストを使いますがアメリカやイギリス以外の所で英語以外を使用する所ではアスキー以外のテキストフォーマットを使用しているかもしれません。"
  },
  {
    "index": "F26235",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the basic idea is that a text format, can be read by pretty much any basic editing program.",
    "output": "この根幹の考えは、テキストフォーマットであればどんな基本的な編集プログラムでも扱えるということです。"
  },
  {
    "index": "F26236",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These days, you know, when you're writing something there's a lot different of tools that you can use to write.",
    "output": "最近では、何かを書くときには様々な編集ツールから選んで使えます。"
  },
  {
    "index": "F26237",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you're writing a book, or or a webpage or something like that, there's all kinds of different tools that you can use to write, to write those things.",
    "output": "本を書いたり、ウェブページやそれに似たようなものを書くときにはこれを書くための様々なツールがあります。"
  },
  {
    "index": "F26238",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you're, when you're writing code, you should always try to use a text editor, because that's like kind of like the, the kind of least common denominator, and it makes it so that everyone will be able to access your code and improve upon it.",
    "output": "しかしコードを書くときには常にテキストエディタを使う必要があります。"
  },
  {
    "index": "F26239",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second principle is, which is very important for readability, is to indent your code.",
    "output": "テキストなら、誰もがコードを見れてさらに改善することもできます2つ目の標準は読みやすくするためには非常に重要でコードをインデントすることです。"
  },
  {
    "index": "F26240",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So indenting is something that's often hotly debated in lots of mailing lists and other types of discussion groups in terms of how much indenting is appropriate.",
    "output": "インデントはメーリングリストや他のディスカッショングループで適切なインデント文字数について頻繁に熱い議論が行われています私自身のお勧めはありますが何が適切かは話しません。"
  },
  {
    "index": "F26241",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But I think the most important thing is that you understand why indenting is important.",
    "output": "ただ、ここで最も重要なのはインデントがなぜ大切なのかを理解してもらうことです。"
  },
  {
    "index": "F26242",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So indenting is the idea that different blocks of code should be spaced over to the right a little bit more than other blocks of code so you can see kind of how the control flow how the flow of the program goes based on the indenting alone.",
    "output": "インデントというのはコードのそれぞれの塊をコード内の他の塊の箇所よりも右側にずらすべきということです。"
  },
  {
    "index": "F26243",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So coupled with indenting, is the third principle which I think is very simple which is, limit the width of your code.",
    "output": "こうすることでインデントを見るだけでプログラムの流れの制御フローが分かります。"
  },
  {
    "index": "F26244",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you have indenting it's possible to kind of indent off to the right forever so you need to limit on the right hand side how wide your code is going to be and usually this is kind of determined by the number of columns of text.",
    "output": "インデントを使っていると右側にテキストを永遠にずらしてこともありえますこのため右側へずらすコードの幅に対して制限を設ける必要があります。"
  },
  {
    "index": "F26245",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so one possibility is you limit your text to about 80 columns of text and then and so that your, the width of your code never exceeds that.",
    "output": "テキストの幅を80桁に制限するのも1つの方法です。そうすることでコードの幅がこの幅を越えないようにします。"
  },
  {
    "index": "F26246",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, let's take a look for, at a quick example here.",
    "output": "ではちょっとこの例を見てみましょう。"
  },
  {
    "index": "F26247",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here you can see I've got R Studio open, here with a simple code file with some R code in it.",
    "output": "RStudioを開いてRコードの書かれた簡単なコードファイルを開いています。"
  },
  {
    "index": "F26248",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, first of all, let me just mention that the editor in R Studio is a text editor.",
    "output": "まず最初にRStudioのエディターがテキストエディターなのをお伝えしておきます。"
  },
  {
    "index": "F26249",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it will always save the R files that you write as text format files.",
    "output": "これを使うとコードを書いたRファイルはテキストフォーマットのファイルとして保存されます。"
  },
  {
    "index": "F26250",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you can see the indenting scheme here is equal to one space.",
    "output": "何もしなくてもテキストに保存してくれます。しかし、インデントの方式は1桁になっています。"
  },
  {
    "index": "F26251",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that all the code is kind of mashed together here on the left hand side.",
    "output": "見ての通りコードの行は左側に潰れて寄ってしまっています。"
  },
  {
    "index": "F26252",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's difficult to tell kind of where the if blocks are.",
    "output": "ifの塊がどこまでなのか分かりにくくなっています。"
  },
  {
    "index": "F26253",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Where does the function kind of end and begin?",
    "output": "elseの塊もですし関数の開始や終了も分かりにくいです。"
  },
  {
    "index": "F26254",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the indenting scheme kind of makes the code not very readable in this case.",
    "output": "この場合はインデントの方式のせいで見やすいものにできていません。"
  },
  {
    "index": "F26255",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So we can change the indenting in R Studio.",
    "output": "RStudioではインデントを変更できます。"
  },
  {
    "index": "F26256",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If we just go up to the Preferences menu here.",
    "output": "ここのPreferencesのメニューを開いてCodeEditingを開きます。"
  },
  {
    "index": "F26257",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And let me just change it to four.",
    "output": "4に変更してみます。"
  },
  {
    "index": "F26258",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that the column, the margin column is set to 80 characters, so it will show you the margin when you've reached 80 characters.",
    "output": "それ以外では、列幅のマージンは80桁になっています。80文字目の箇所にマージンを表示してくれます。"
  },
  {
    "index": "F26259",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I'm going to select all here with Cmd+A, and then Cmd+I to indent it.",
    "output": "Cmd+Aを押して全選択してからCmd+Iを押してインデントします。"
  },
  {
    "index": "F26260",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now you can see that the indenting is a little bit nicer now.",
    "output": "見て分かるようにインデントが少し良くなりました。"
  },
  {
    "index": "F26261",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can see, kind of, where the function begins and ends, you can see where the if blocks start and end, and the, kind of, structure of the program is much more obvious.",
    "output": "これなら関数の開始と終了やifの塊の開始終了やプログラムの構造がかなり明確になります。"
  },
  {
    "index": "F26262",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I'm going to change this one more time though and my, because my personal preference for indenting is to use eight spaces, so I'm going to change this to eight.",
    "output": "ここを8に変更して、Okを押して、全選択の上でCmd+Iを押します。"
  },
  {
    "index": "F26263",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And now you can see, I prefer the eight spaces just because it really makes the structure of the code very obvious.",
    "output": "見て分かるように、8桁が好きなのはコードの構造がとても明確になるからです。"
  },
  {
    "index": "F26264",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it makes the code very readable in general.",
    "output": "全体的に、これでコードが読みやすくなります。"
  },
  {
    "index": "F26265",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can see that indenting is very important.",
    "output": "このようにインデントはとても重要です。"
  },
  {
    "index": "F26266",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you don't indent at all or if you only use a very small amount the code becomes kind of very mashed together.",
    "output": "あまりインデントしない場合に起こりうる最も大きな問題は例えば全くインデントしないとか非常に少ないインデントだとコードがつぶされたような状態になるのが問題です。"
  },
  {
    "index": "F26267",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I recommend at least four spaces for an indent and I'm pref, I prefer, you know, eight spaces for an indent, just because it makes the code much more readable and spaces it out much nice, much more nicely.",
    "output": "できるなら、8桁のインデントを使ってください。こうするとコードが非常に読みやすくなりかなりきれいに配置することができるからです。"
  },
  {
    "index": "F26268",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One of the advantages of having something like an eight space indent, is coupled with an 80 character margin on the right hand side, is that it forces you to think about your code in a slightly different way.",
    "output": "8桁インデントのような方法での代表的な利点は左側のマージンを80桁としたときには書くコードに対して少し異なる考えかたが必要になるからです。"
  },
  {
    "index": "F26269",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if you have eight space indents, if you're going to have a for-loop, nested within another for-loop within another for-loop, every time you nest another for-loop, for example, you have to indent over eight spaces.",
    "output": "例えば、8桁インデントにするとfor-loopないのfor-loop、そしてその中のfor-loopのようにfor-loopをネストするたびに例えば8桁インデントさせる必要があるからです。"
  },
  {
    "index": "F26270",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And by the time you get to maybe your fourth nested for-loop you're pretty much hitting the right hand column at the 80 column margin, right?",
    "output": "4レベルのfor-loopをするころにはほぼ確実に右側が80桁マージンの端に到達してしまいますよね?"
  },
  {
    "index": "F26271",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the nice thing about the eight space indent, coupled with the 80 column margin, is that it prevents you from kind of writing very basic, making very kind of fundamental, kind of mistakes with, with code readability.",
    "output": "8桁インデントのいいところは80桁マージンと一緒に使うとコードを読みやすくする点において本当に基本的で基礎的な失敗をしないようにしてくれるところです。"
  },
  {
    "index": "F26272",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, with an eight space indent and 80 column margin, you might not be able to do feasibly more than two nested for loops, and, but I think that's really the, kind of, the boundary of what is readable in terms of code.",
    "output": "例えば、80桁マージンと8桁インデントを使うと3階層以上のloopのネストは現実的ではなくなります。このあたりがコードの点では読みやすさの限界ではないかと思います。"
  },
  {
    "index": "F26273",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Typically except for some special cases, a three, you know, a three nested or four nested four loop is difficult to read, and it's probably better off, you know, splitting off into separate functions or something like that.",
    "output": "特別な場合を除けば一般的には3~4階層にネストされたloopは読みにくいものです。複数の関数に分けるなどした方がよいでしょう。"
  },
  {
    "index": "F26274",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So a good indenting policy not only makes the code more readable, but it actually can force you to think about writing your code in a slightly different way.",
    "output": "よいインデント方針を使えばコードがより読みやすくなるだけでなく少し異なる見方でコードを考えるようになります。"
  },
  {
    "index": "F26275",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that's a really nice advantage of, of having a logical indenting policy with, coupled with a, you know, a right-hand side restriction.",
    "output": "論理的に正当化できるインデント方針とマージンの制約があるのは本当に素晴らしい利点です。それでは。"
  },
  {
    "index": "F26276",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the last thing I want to talk about is to limit the length of your functions.",
    "output": "最後に関数の大きさを制限することについてです。理論上では、Rの関数は他の言語と同じように非常に長いものも作れます。"
  },
  {
    "index": "F26277",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Alright so, functions in R can, can theoretically go on for quite a long time and of course just like in any other language but just like in any other language I think that the, the logical thing to do with a function is limit it to kind of one basic activity.",
    "output": "関数に関して論理的に行うべきことはひとつの基本的な活動に制限することです。"
  },
  {
    "index": "F26278",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if you're function's named read the data.",
    "output": "例えば、readTheDataという関数があったとしたら関数ではデータを読むだけにすべきです。"
  },
  {
    "index": "F26279",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then your function should simply read the data, it should not read the data, process it, fit a model, and then print some output, alright?",
    "output": "データを読んで処理してモデルを適用して、結果を出力するというのは避けるべきです。"
  },
  {
    "index": "F26280",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you should, the logical kind of steps like that, should, should probably be spit, split, into separate functions.",
    "output": "こんな時はおそらく論理的な塊で複数の関数に分けるべきです。"
  },
  {
    "index": "F26281",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are a couple of advantages to doing this.",
    "output": "これをすると利点がいくつかあります。"
  },
  {
    "index": "F26282",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "First of all, it's nice to be able to have a function written on a single page of code, so you don't have to scroll endlessly to see, you know, where all the code for this function goes.",
    "output": "まず第一に1ページに収まるコードにできることです。こうすれば、画面を永久にスクロールしてこの関数の全てのコードを読む必要がありません。"
  },
  {
    "index": "F26283",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you could put all the function, the entire function on like one screen of the editor, then you can look at the whole function and see what it does all at once.",
    "output": "もし関数全体が1画面に入っていれば全体を見て、全体で何かをしようとしているのか確認できます。"
  },
  {
    "index": "F26284",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another advantage of splitting up your code into logical sections, to logical functions, is that if you use functions like traceback, or the profiler, or the debugger, these often tell you, you know, where in the function call stack you are when a problem occurs.",
    "output": "コードを論理的な塊に分けることの利点にはトレースバックやプロァイラーやデバッガーなどの機能を使うときに問題が起こっているのがどの呼び出し部分か分かることです。"
  },
  {
    "index": "F26285",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if you have multiple functions that are all logically divided in to separate pieces then when a bug occurs and you know that it occurs in a certain type of function or a certain function then you know kind of where to go fix things, right?",
    "output": "また、論理的なかたまりで複数に分けられた関数があるとバグが起こった時にどこのどんな種類の関数で起こったのかが分かり、直すのにはどこの部分を見ればよいか分かりますよね?"
  },
  {
    "index": "F26286",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you have, but if just have a single function that just goes on forever and a bug occurs then the only thing that the debugger or the traceback or the profiler can tell you is that there's a problem in this one function.",
    "output": "でも、長々と続く関数の中でバグが起こった場合にデバッガーやトレースバックやプロファイラーから分かるのはこの関数の中で問題が起こっている事実だけです。"
  },
  {
    "index": "F26287",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But it, it doesn't, it, it's difficult to tell you where exactly the problem occurs.",
    "output": "でも、実際にその中のどこで問題が起こっているのかは教えてくれません。"
  },
  {
    "index": "F26288",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So splitting up your functions has a secondary benefit, which is that it can help you in debugging and profiling.",
    "output": "このように、関数を細かく分けるとデバッグやプロファイリングが行いやすくなる利点があります。"
  },
  {
    "index": "F26289",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So limiting the size of your functions is very useful for readability and for, kind of, debugging.",
    "output": "関数の長さを制限することは読みやすさの向上やデバッグ時に非常に役に立ちます。"
  },
  {
    "index": "F26290",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, it's easy to go overboard and having, you know, a hundred different three-line functions.",
    "output": "もちろん、やり過ぎてしまうと3行だけの関数を100個作ってしまいかねません。"
  },
  {
    "index": "F26291",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's not really what you want to do.",
    "output": "こんな風にはならないようにしましょう。"
  },
  {
    "index": "F26292",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you just want to make it so that the, the separation of different functions into, is logical, and that each function kind of does, does one thing in particular.",
    "output": "コードが異なる関数にきちんと論理的に分割されてそれぞれの関数が特定の1つのことを行うようにしましょう。"
  },
  {
    "index": "F26293",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So those are my basic guidelines for writing code in R.",
    "output": "まとめると、Rでコードを書くときにはこれらのことを標準としています。"
  },
  {
    "index": "F26294",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are, of course, many other things that you might be able to think about.",
    "output": "もちろん、これ以外にも多くの基準をみなさん思い付くかもしれませんが、これ以上広げると合意に到達できない標準が出てきます。"
  },
  {
    "index": "F26295",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I'm not going to talk about too much more in terms of coding standards, but the basic ideas are always use a text editor, always indent your code, I'd say at least four spaces.",
    "output": "ですから、コーディング標準についてはもう続けませんが基本的な考え方は常にテキストエディターを使い最低4桁でコードをインデントし、コードの幅を制限します。"
  },
  {
    "index": "F26296",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and always limit the size of your functions, so that you can, so that they're, kind of grouped into logical pieces of your program.",
    "output": "関数の長さを制限してプログラム中の論理的な塊に分けられているようにします。"
  },
  {
    "index": "F26297",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So with those four things, I think you'll, your, your code will be much more readable.",
    "output": "この4つを守るとコードがかなり読みやすくなります。"
  },
  {
    "index": "F26298",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It'll be readable to you, it'll be readable to others, and it'll make kind of writing R code much more useful to everyone.",
    "output": "自分自身にとって読みやすいだけでなく他の人にも読みやすくなってRコードを書くみんなにとって役に立つものになります。"
  },
  {
    "index": "F26299",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I want to talk briefly about dates and time in R, which is a very, is a very special topic and could require a lot more time.",
    "output": "Rにおける日付と時刻について説明します。"
  },
  {
    "index": "F26300",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I have something I need to talk a little bit about how R represents dates and times, and how you can use them in kind of ara, arithmetic and data analysis types of computations.",
    "output": "これはとても特別なトピックで本来ならもっと多くの時間が必要ですがまたRでの日付と時刻の表し方や数学やデータ解析の計算でどう用いるかについてはいろいろ知っておいてもらいたいことがあります。"
  },
  {
    "index": "F26301",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so R has a special way to represent dates and times.",
    "output": "Rは特別なやり方で日付と時刻を表します。"
  },
  {
    "index": "F26302",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And they're, they're represented using special data classes.",
    "output": "それらは特別なデータクラスで表されます。"
  },
  {
    "index": "F26303",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, in the past, we talked about different data types like lists.",
    "output": "これまでにいろいろなデータ型を学びました。"
  },
  {
    "index": "F26304",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, numeric vectors, and so.",
    "output": "例えばリストとかcharacterのベクトルやnumericのベクトルなどです。"
  },
  {
    "index": "F26305",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is just another type of data on top of those kinds of classes.",
    "output": "日付と時刻はこれらと同様、基本的なデータ型です。"
  },
  {
    "index": "F26306",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So dates are represented by the date class.",
    "output": "日付はdateクラスで表されます。"
  },
  {
    "index": "F26307",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, times are represented by two separate classes: the POSIXct and the POSIXlt class.",
    "output": "そして時刻は2つの異なったクラスで表されPOSIXctクラスとPOSIXltクラスで表されます。"
  },
  {
    "index": "F26308",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So dates are basically. Don't have times attached to them.",
    "output": "日付は基本的には時刻情報を持たず日付は、年、月、日の値で表されます。"
  },
  {
    "index": "F26309",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They represent a day, in a year in a month.",
    "output": "日付を年、月、日の形式で扱います。"
  },
  {
    "index": "F26310",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the, kind of, you can figure them in a kind of a year, month, day format so for example, this date is 1970, January 1st and so internally the dates are stored as the number of days since 1970 January 1st.",
    "output": "例えば、この日付は1970年の1月1日です。内部的には、日付は1970年の1月1日からの経過日数で保持されています。"
  },
  {
    "index": "F26311",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That particular detail is not very important but in case you're wondering you don't know how they, how the, how R actually does calculations based on dates.",
    "output": "この詳細な情報はそれほど重要ではありませんが、知っていると実際Rがどのように日付に基づいて計算をするのか不安にならずに済みます。"
  },
  {
    "index": "F26312",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Times are stored internally as the number of seconds. Since 1970, January 1st.",
    "output": "時刻は内部的には、1970年1月1日からの経過秒数で保持されています。"
  },
  {
    "index": "F26313",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That's not very important, but it maybe useful to know, sometimes.",
    "output": "これもまた基本に関する詳細なことで、あまり重要ではありませんが、知っておくと役に立つかも知れません。"
  },
  {
    "index": "F26314",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the way dates in R, in R work, is you can take a character screen.",
    "output": "では、実際にRでの日付の扱いを見てみましょう。まずは、文字列を引き渡します。"
  },
  {
    "index": "F26315",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And convert it into a date, using as.Date function. That's probably the most common way that you'll start your, begin working with dates.",
    "output": "このように1970-01-01を渡しas.Date関数でdateに変換しますおそらくこの方法が日付の処理に慣れ始める時に最もよく使われる方法です。"
  },
  {
    "index": "F26316",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, you'll notice that if you print out this object.",
    "output": "このオブジェクトをprintoutすると文字列の形で出力されるのに気がつくでしょう。"
  },
  {
    "index": "F26317",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now it's not actually a character string but it will print out that way because there's a special print method.",
    "output": "だがxは実際は文字列ではなく、特別なprintメソッドによって、このように出力されています。"
  },
  {
    "index": "F26318",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now if I unclass the object here you'll see I get the number 0.",
    "output": "実際ここでxをunclassすると数値0が出力されます。"
  },
  {
    "index": "F26319",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because the dates are stored internally as the number of days since 1970, January 1st and since.",
    "output": "日付は内部的には1970年1月1日からの経過日数で表されていましたよね。"
  },
  {
    "index": "F26320",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I input January 2, 1970, then you'll see that underline is represented as a number 1, because that's 1 day after 1970 January 1st.",
    "output": "その日から1970年1月1日の経過日数は0日なのでここでは0を返しますもし1970年1月2日を入力すると、その下の行にあるように数値1として表されます。"
  },
  {
    "index": "F26321",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you had a date that was before 1970 Then, they'd be represented as negative numbers.",
    "output": "ここでもし、1970年よりも前の日付を与えると、負の数値として表されます。"
  },
  {
    "index": "F26322",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, but that's just for your little background.",
    "output": "まあ、これはちょっとした背景情報です。"
  },
  {
    "index": "F26323",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You don't, you don't have to worry about the underlying representation.",
    "output": "こんな隠れた表現については心配する必要はありません。"
  },
  {
    "index": "F26324",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Ultimately, what you need to know, is that dates are stored as objects of the date class.",
    "output": "知る必要があるのは、日付がdateクラスのオブジェクトとして保持されるということだけです。"
  },
  {
    "index": "F26325",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Times, on the other hand, are represented as two possible types.",
    "output": "一方、時刻は2つの型で表されます。"
  },
  {
    "index": "F26326",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One is called POSIXct and the other POSIXlt.",
    "output": "一つはPOSIXct、もう一つはPOSIXltです。"
  },
  {
    "index": "F26327",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, POSIX is a family of computing standards for how things should be done on certain types of computers or how data should be represented and so there's a there's a family of standards for how to represent dates and times and pos and so POSIX a that's part of the POSIX standard.",
    "output": "POSIXというのは計算機標準のひとつで、あるタイプの計算機で処理がどのように行われるか、データがどのように表現されるかを決めています。"
  },
  {
    "index": "F26328",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Times are represented at just as very large integers.",
    "output": "で、POSIXctクラスでは、時刻は単に非常に大きな整数で表されます。"
  },
  {
    "index": "F26329",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so it's a useful type of class if you want to say, store times in a data frame or something like because it's basically it's like a big integer vector.",
    "output": "このためこのクラスは時刻をデータフレームなどに保持するときに有用です。なぜならそれは基本的にはbiginteger型のベクトルのように扱えるからです。"
  },
  {
    "index": "F26330",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "POSIXlt stores a time as a list.",
    "output": "POSIXltは時刻をリストとして保持します。"
  },
  {
    "index": "F26331",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "underlying, and so, and it stores a bunch of other useful information about a given time, for example what's the day of the week of that time, what's the the day of the year, the day of the month, or the month itself.",
    "output": "さらに、内部的には日付に関する一連の有益な情報が保持されています。"
  },
  {
    "index": "F26332",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there are a number of generic functions that operate on both dates and times.",
    "output": "例えば、曜日、通年で数えた日その月で何日目か、そして何月かなどです。"
  },
  {
    "index": "F26333",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That you can use such as the, so the weekdays functions tells you what day of the week a given time is or a given day is.",
    "output": "汎用的に使う日付と時刻を処理する多くの関数があります。"
  },
  {
    "index": "F26334",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The month function tells you what month that date or time is.",
    "output": "そのような関数として、weekdays関数は与えられた時刻または日付が何曜日かを返します。"
  },
  {
    "index": "F26335",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the quarters functions gives you the quarter number.",
    "output": "そしてquaters関数は4半期を返します。"
  },
  {
    "index": "F26336",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, quarter Q1 would be January through March, Q2 would be April through June, etc.",
    "output": "例えばQ1は1月から3月でQ2は4月から6月などです。"
  },
  {
    "index": "F26337",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, these generic functions operate on, on objects of class.",
    "output": "これらの汎用的な関数はPOSIXctやPOSIXltやdateのクラスのオブジェクトを扱うことができます。"
  },
  {
    "index": "F26338",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you want, using the as.POSIXlt or the as.POSIXct function.",
    "output": "それから例えば、POSIXltとPOSIXctはas.POSIXltまたはas.POSIXct関数を使うことで相互に強制型変換が可能です。"
  },
  {
    "index": "F26339",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, for example the Sys.time function here, just gives you the current time.",
    "output": "例えば、Sys.time関数はシステム内で管理している現在の時を返します。"
  },
  {
    "index": "F26340",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that when it prints out, it prints out in a year month day format.",
    "output": "それをprintoutすると年-月-日につづいて時間;分:秒の形式で表示されます。"
  },
  {
    "index": "F26341",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then the, the timezone, which is Eastern Standard Time right now.",
    "output": "それからタイムゾーン、ここでは東部標準時間です。"
  },
  {
    "index": "F26342",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can convert this di to a POSIXlt using pa, as.POSIXlt.",
    "output": "これはas.POSIXlt関数でPOSIXltに変換することができます。"
  },
  {
    "index": "F26343",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, POSIXlt remember underlying is a list.",
    "output": "そして、POSIXltの基本型はlistということを思い出してください。"
  },
  {
    "index": "F26344",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can look at the names of the elements.",
    "output": "なので、各要素の名前を見ることができます。"
  },
  {
    "index": "F26345",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In this list if you unclass it and you can see that there's an element called seconds that's the seconds and the minutes the hours the M days the day of the month which in this case would be 23.",
    "output": "pをunclassすれば、sec要素があります。これは秒を表し同様に分(min)、時(hour)mdayは月の何日かを表し、この場合は23です。"
  },
  {
    "index": "F26346",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The month is just the month your in so that's a January and then the year.",
    "output": "monは月を表し、ここでは1月です。そして年がきます。"
  },
  {
    "index": "F26347",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The year, day, which is the day of the year. And then are we on daylight savings or not?",
    "output": "そしてwdayは曜日をydayは通年で数えた日を表し、そしてisdstはサマータイムが適用されているかを表します。"
  },
  {
    "index": "F26348",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if I extract the sec, seconds element of this list, you'll see it's 11.86.",
    "output": "ここで秒を表すsec要素をリストからぬきだしてみると、11.86となります。"
  },
  {
    "index": "F26349",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that, and so this actually gives you the seconds in in fractional seconds.",
    "output": "これは秒を小数点以下を含めて表したもので、11秒と0.86秒ということになります。"
  },
  {
    "index": "F26350",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, that's, that's the number of seconds in the time.",
    "output": "これは時間のうち、秒数を表しています。"
  },
  {
    "index": "F26351",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The POSIXct format you can see is you can also get it from the sys.time function and you can see that if I un-class the POSIXct object.",
    "output": "POSIXct形式は、Sys.time関数からも得ることができてそのPOSIXctオブジェクトをunclassするととても大きな整数が得られます。"
  },
  {
    "index": "F26352",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I get this very large integer, because that's just the number of seconds since January 1, 1970.",
    "output": "これは1970年1月1日からの経過秒数です。"
  },
  {
    "index": "F26353",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now if I try to apply the list operator, the dollar sign to this object, you see I get an error because objects of POSIXct don't have these list elements in them.",
    "output": "ここでlistの要素を抜き出す演算子、$を適用してみるとエラーになります。なぜならPOSIXctのオブジェクトはlistではないのと、この指定の要素を持たないからです。"
  },
  {
    "index": "F26354",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You want to get those list elements out you have to convert it to POSIXlt using the as.POSIXlt function.",
    "output": "このlistの要素を得たければ、xをas.POSIXlt関数を使いPOSIXltに変換しなければなりません。"
  },
  {
    "index": "F26355",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In this case it's 11.88 seconds.",
    "output": "この場合、11.88秒です。"
  },
  {
    "index": "F26356",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, finally there's a strptime function which converts dates which are written in character string format into date or time objects.",
    "output": "最後にstrptime関数について説明します。これは文字列として書かれた日付をdateやtimeのオブジェクトに変換します。"
  },
  {
    "index": "F26357",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, in this case it converts into two time objects.",
    "output": "ここでは2つのtimeオブジェクトに変換してみます。"
  },
  {
    "index": "F26358",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So and they use what are called format strings.",
    "output": "それらはいわゆるフォーマット指定子を使います。"
  },
  {
    "index": "F26359",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I want to convert these strings to time objects I can use the strptime function, what I do is I pass the character vector and I pass it a format string.",
    "output": "これらの文字列をtimeオブジェクトに変換するために、strptime関数を用います。ここでやることは文字列ベクトルとフォーマット指定子を渡すことです。"
  },
  {
    "index": "F26360",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So in this case I got, and so you'll see how these present signs fall by letters.",
    "output": "%の後に文字が続いているのが分かりますか?"
  },
  {
    "index": "F26361",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then you can, you can look-up what these symbols mean in the help page for strptime.",
    "output": "これらの指定子が何を意味しているか詳しくはstrptimeのヘルプページを見てください。"
  },
  {
    "index": "F26362",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So present B means the month. In an abbreviate name, %d is the day.",
    "output": "指定子Bは文字列が月を、短縮されていない形で表していることを示し、%dは日を示します。"
  },
  {
    "index": "F26363",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then comma and then %Y is the four-digit year.",
    "output": ",に続いて%Yは4桁で表した西暦を示します。"
  },
  {
    "index": "F26364",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then %H is the hour, sort of like colon followed by %M which is the minute.",
    "output": "%Hは時間、コロンに続いて%Mは分を示します。"
  },
  {
    "index": "F26365",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that's the format.",
    "output": "これが今回時刻で使ったフォーマットです。"
  },
  {
    "index": "F26366",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can see that after I call I print out X, I get these time objects that are formatted, that are printed out in the standard format.",
    "output": "(訳注:localeが日本だと失敗する)このオブジェクトのクラスを調べると両方ともPOSIXltの型です。"
  },
  {
    "index": "F26367",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "When I look at the class of this object you'll see it's in a POSIXlt format and so that's the so you can look at so that's the underlying kind of list format here.",
    "output": "裏ではリストになっていてこのように表示されています。ところで、個人的な問題ですが私はこのフォーマット指定子がどうしても覚えられません。"
  },
  {
    "index": "F26368",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now I personally can never remember what those formatting strings are the %B ,%D, %Y I can never remember what those are and so I always have to look at the help page for to remember what those details are.",
    "output": "なのでいつもこれらの詳細が何だったかを、ヘルプページを見て思い出しています。"
  },
  {
    "index": "F26369",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, once you've got data in the date or time format, you can, you can do operations on them, which can be very handy for example, you can you can add and subtract dates, you can compare dates, you can see is, is one date less than another date or are these two dates equal to each other?",
    "output": "さて一旦date型やtime型でデータを得ると、それらをとても扱いやすい方法で処理することができます。例えば、日付を足したり、引いたり、比較、つまり、2つの日付のどちらが先か、同じかの判定などです。"
  },
  {
    "index": "F26370",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, but the end you need to be careful that you can't always mix different classes.",
    "output": "しかし、最後に、注意が必要なのは異なったクラスが混在した操作はできません。"
  },
  {
    "index": "F26371",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for here, I have X which is a date object, then Y which is a POSIXlt object.",
    "output": "ここにdateオブジェクトxとPOSIXltオブジェクトyがあります。"
  },
  {
    "index": "F26372",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I try to subtract the two, you'll, you'll get an error because they're not the same, type of object.",
    "output": "2つの差をとろうとすると、オブジェクト同士が同じ型ではないのでエラーとなります。"
  },
  {
    "index": "F26373",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can, can, but if I convert the date to a POSIXlt object so I can do as.POSIXlt on it, then if I take the difference it'll say that the, the difference of 356.3 days between the two.",
    "output": "そこで、dateをas.POSIXlt関数でPOSIXltオブジェクトに変換します。すると2つの差をとることができて、2つの差は356.3日ということがわかります。"
  },
  {
    "index": "F26374",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The nice thing about the date and time operators is that they keep track of very tricky things like leap years, leap seconds daylight savings and time zones.",
    "output": "日付と時刻に関する演算は嬉しい事に、うるう年やうるう秒やサマータイムやタイムゾーンのような面倒な事にも対応しています。"
  },
  {
    "index": "F26375",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So just, this first example here, you can see that so 2012, it was a leap year and so there was a February 29th.",
    "output": "一つ目の例として、2012年この年はうるう年で2月29日があるのですが、3月1日と2月28日の差をとるとその差は2日となります。"
  },
  {
    "index": "F26376",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the difference between March 1st and February 28th is actually a difference of two days, not a difference of one day like it is every other year.",
    "output": "うるう年でない年のように1日とはなりません。"
  },
  {
    "index": "F26377",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Similarly I could take two times one which is in my, X which is in my kind of current time and then Y which is in the time zone of GMT, so Greenwich Mean Time.",
    "output": "一つ目は、私のタイムゾーンでの現在時刻x、それからGMTつまりグリニッジ標準時でのyを指定することもできます。"
  },
  {
    "index": "F26378",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So even though it looks like it should be a 5-hour difference, it's actually only a 1 hour difference because of the change in the time zones.",
    "output": "この2つの差をとるとその差は5時間のように思えますがやってみると1時間しかありません。"
  },
  {
    "index": "F26379",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one of the advantages of using the date time classes is that it will automatically take care of these kinds of irregularities.",
    "output": "dateとtimeに関するクラスを使う利点として、これらの例外的な処理を自動的にやってくれることが挙げられます。"
  },
  {
    "index": "F26380",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that was just a quick sum, kind of overview of the, the dates and the time classes in R.",
    "output": "以上、Rにおける日付と時刻についてその概要を説明しました。"
  },
  {
    "index": "F26381",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So just to summerize there are special classes in R that will, that represents dates and times that'll allow you to do numerical and statistic calculations.",
    "output": "Rには日付と時刻を表す特別なクラスがあり日付はdateクラスで時刻はPOSIXctまたはPOSIXltクラスを使うと数値的、あるいは統計的な計算をすることができます。"
  },
  {
    "index": "F26382",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then character strings can be coerced to either a date or a time class, using the strptime function or as.Date.as.POSIXlt, and POSIX, as.POSIXct.",
    "output": "そして文字列はdate、timeクラスに強制型変換できます。"
  },
  {
    "index": "F26383",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The other thing to note, that I haven't really talked about here is that a lot of the plotting functions, will recognize date time objects.",
    "output": "strptime関数や、as.Date関数as.POSIXlt関数、as.POSIXct関数が使えますあと、ここで付け加えておきたいことがあります。"
  },
  {
    "index": "F26384",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you try to plot An object that, that's a date time class.",
    "output": "それは沢山のplot関数が日付や時刻オブジェクトをそのまま利用できるということです。"
  },
  {
    "index": "F26385",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It will recognize that object and then format the X axis in a special way so that it will have a time element to it.",
    "output": "日付や時刻のクラスをplotしようとすると、オブジェクトのクラスを認識してX軸をそれにあわせてフォーマットするので、時間を視覚的にみることができます。"
  },
  {
    "index": "F26386",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you might want to try to experiment with that a little bit to see how plots change when you use a date time class.",
    "output": "なので時間があれば日付や時刻クラスを用いることでグラフがどのように変わるのか、試してみるのもいいかもしれません。"
  },
  {
    "index": "F26387",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Loop functions are some of the most powerful functions in the R language and they make it kind of very easy to use, especially in an interactive setting.",
    "output": "ループ関数はR言語の最も強力な関数です。このおかげで探索的に色々試したいときにRがとても簡単に使えます。"
  },
  {
    "index": "F26388",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The idea behind a loop function is you want to execute a loop over an object or a set of objects in a way that's kind of that does a lot of work in, in a very small amount of space.",
    "output": "ループ関数の背景にある考えはオブジェクトやひと組のオブジェクトに対して多くの操作を行うものを非常に短い範囲でループ処理を行うということです。"
  },
  {
    "index": "F26389",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That way, you don't have to type as much on the command line.",
    "output": "こうすれば、コマンドラインで必要な入力量を減らせます。"
  },
  {
    "index": "F26390",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, we already learned about loops.",
    "output": "もちろん、ループについて学習してきたのでloopやwhileなどについてはよく理解していて、これらでも十分に使えます。"
  },
  {
    "index": "F26391",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "We know about for loops and while loops, things like that, and those are all, work very well; however, they are com, less compact in a certain way.",
    "output": "しかし、ある意味比較すると短く書けません。Rにはいくつかのループ関数があります。"
  },
  {
    "index": "F26392",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, there are a couple of loop functions in R and they usually have the word apply in them somewhere.",
    "output": "関数には、applyという文字がどこかに入っています。"
  },
  {
    "index": "F26393",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So some of the key ones are lapply, sapply, apply, tapply, mapply and the real workhorse function that I, that I'd like to talk about here is lapply.",
    "output": "今日お話しするのは、中でも強力な馬力を持った関数lapplyです。"
  },
  {
    "index": "F26394",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the idea behind lapply is that you have a list of objects and you want to loop over the list of objects and apply a function to every element of that list.",
    "output": "lapplyの背景にある考えはオブジェクトのリストがあったら、そのリストをループしてその全要素に関数を適用するというものです。"
  },
  {
    "index": "F26395",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so it's a very general concept.",
    "output": "とても広く適用できる考えです。"
  },
  {
    "index": "F26396",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it can be used very powerfully to do a lot of computations in a few, in just a little bit of typing.",
    "output": "多くの計算を数少ない入力だけで実施できて非常に強力に使えます。"
  },
  {
    "index": "F26397",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Sapply is a variant of lapply that simplifies the results.",
    "output": "sapplyはlapplyの派生関数で結果を単純化します。"
  },
  {
    "index": "F26398",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Apply is a function that operates over the margins of an array.",
    "output": "applyは配列のマージンに対して適用する関数です。"
  },
  {
    "index": "F26399",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, this is very useful if you want to take summaries of matrices or other or, higher dimensional arrays.",
    "output": "行列の集計をしたりさらに次元の多い配列を使う時です。"
  },
  {
    "index": "F26400",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Tapply is short for table apply.",
    "output": "tapplyはtableapplyを短くしたものです。"
  },
  {
    "index": "F26401",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, it applies a function over subsets of a vector.",
    "output": "ベクトルの一部分に対して関数を適用します。"
  },
  {
    "index": "F26402",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And mapply is a multivariate version of real of lapply.",
    "output": "mapplyは、lapplyの複数変数版です。"
  },
  {
    "index": "F26403",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's also another function called split which doesn't actually apply anything to objects.",
    "output": "それぞれの関数について詳しく見ていきますが、splitという関数もありますが、これはオブジェクトには関数を適用しません。"
  },
  {
    "index": "F26404",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But it's often useful in conjunction with functions like lapply or sapply because it splits objects into sub-pieces.",
    "output": "ですが、lapplyやsapplyと一緒に使うと役立つことも多いです。オブジェクトをさらに細かく分けることができるからです。"
  },
  {
    "index": "F26405",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, lapply. Lapply takes three arguments.",
    "output": "さて、lapplyには3つの引数があります。"
  },
  {
    "index": "F26406",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Basically the first argument is a list which is called X.",
    "output": "1つ目はXでリストです。"
  },
  {
    "index": "F26407",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second argument is a function or the name of a function and then there are other arguments that are, can be passed to the dot dot dot argument.",
    "output": "2つ目は関数か関数名でこの関数の引数は...の部分へ引数として引き渡せます。"
  },
  {
    "index": "F26408",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the dot, dot, dot argument is used to pass arguments that go with the function that you're being, that's being applied to each of the elements in the list.",
    "output": "...の引数は、実行する関数に使われてリストの各要素に対して適用されます。"
  },
  {
    "index": "F26409",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If X is not a list, then you will be coerced to a list if possible.",
    "output": "Xがリストでない場合には、可能な場合には、リストに強制型変換されます。"
  },
  {
    "index": "F26410",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If it's not possible to coerce the object to a list, then you will get an error.",
    "output": "オブジェクトがリストに強制型変換できない場合にはエラーになります。"
  },
  {
    "index": "F26411",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the lapply function, you can see, is very simple.",
    "output": "lapply関数は見てのようにとても単純です。"
  },
  {
    "index": "F26412",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Basically the func we look for the function if it's, if the object is not a list then it's coerced to a list using as.list and then the, the rest of the Lapply function is, is,is implemented internally in C code to make it a little bit faster.",
    "output": "内部では基本的には関数を検索し、オブジェクトがリストでなければas.listを使ってリスト化しそして、lapplyの残りの部分は高速化のため、内部的にはC言語で実装されています。"
  },
  {
    "index": "F26413",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the idea with Lapply is that you're going to take this list of things.",
    "output": "lapplyの考えはなんらかのリストを使います。"
  },
  {
    "index": "F26414",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And remember a list can contain any, any number of different types of objects.",
    "output": "前に出てきたように、リストは異なる種類のオブジェクトを保持できます。"
  },
  {
    "index": "F26415",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So they could be vectors, or matrices, or data frames, or whatever it may be and you want to apply a function to each one of these elements of the list.",
    "output": "この種類はベクトルでも行列でもデータフレームでもなんでもなり得ます。"
  },
  {
    "index": "F26416",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that function is going to return something.",
    "output": "適用した関数がなにかを返します。"
  },
  {
    "index": "F26417",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It may not be the same thing that it originally was on the list.",
    "output": "この返されるものはもともとはリストでないかもしれません。"
  },
  {
    "index": "F26418",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, it may take as an input, as a vector, but then it may return a scalar as a result.",
    "output": "例えば、入力としてベクトルを渡すとスカラーを結果として返すかもしれません。"
  },
  {
    "index": "F26419",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the function's going to return something for every single object in that list, and the return values are going to be assembled in a new list.",
    "output": "関数はこのリストの全てのオブジェクトに対して何かを返しますが、返ってきた値は新しくリストに再度入れられます。"
  },
  {
    "index": "F26420",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's what lapply is going to return.",
    "output": "そして、そのリストをlapplyは返します。"
  },
  {
    "index": "F26421",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So lapply, it's key to remember, it always returns a list.",
    "output": "つまり、lapplyで覚えておくべき鍵は常にリストを返すということです。"
  },
  {
    "index": "F26422",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What goes in may or may not a list but it will be coerced to a list. And what comes out will always be a list.",
    "output": "入力はリストとは限りませんが、リストに強制型変換されて、出力は常にリストになります。"
  },
  {
    "index": "F26423",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here's a simple example.",
    "output": "ここに簡単な例をあげます。"
  },
  {
    "index": "F26424",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm creating a list of two elements, the first one's called A, and it's a sequence from one to five, the second one is called B, and it's it's ten or more random variables.",
    "output": "1つ目をAと呼び、1から5の続き番号で、2つ目をBと呼び、10以上の乱数値とします。"
  },
  {
    "index": "F26425",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I, and then, what I want to do is I want to loop over this lists of two elements and apply the mean function to each of those elements.",
    "output": "次に、この2つのリストの要素に対してループを行いmean関数をそれぞれの要素に適用します。"
  },
  {
    "index": "F26426",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can see that when I call Lapply on x and I apply the mean function I get another list back, w-, and notice the list has the same names as the original list, a and b.",
    "output": "ここにあるようにlapplyを呼び、mean関数を適用してリストが返ってきます。"
  },
  {
    "index": "F26427",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But now I've got the mean of the first element and the mean of the second element.",
    "output": "1つ目の要素のmeanと2つ目の要素のmeanが返されています。"
  },
  {
    "index": "F26428",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that's how lapply works.",
    "output": "このようにlapplyは動きます。"
  },
  {
    "index": "F26429",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Here I've got a slightly more complicated list.",
    "output": "次の例ではやや複雑なリストを使っています。"
  },
  {
    "index": "F26430",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I've got four elements and I've got, I'm calling lapply to each of those elements and I'm getting the mean of each of those elements.",
    "output": "これらの要素にmeanを返してもらってます。"
  },
  {
    "index": "F26431",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now I've got a list with four elements.",
    "output": "そして、4要素のリストが返ってきています。"
  },
  {
    "index": "F26432",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The names are preserved and notice, of course, you know, each of the elements of the original list was a vector of some, of a numeric vector of some sort.",
    "output": "要素の名前は残されています。"
  },
  {
    "index": "F26433",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But what I'm getting back is a vector with just a single number in it, for each element of the list.",
    "output": "もちろんお気づきのように、元々のリストは何かの種類の数値のベクトルです。"
  },
  {
    "index": "F26434",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here's another way I way to call, lapply.",
    "output": "返されているのは、リストの各要素に対する数値が1つだけ入っているベクトルです。"
  },
  {
    "index": "F26435",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Here I'm creating a sequence one, of x, 1 to 4, and I'm calling runif, so, which generates a uniform random variables, to, using a random number generator.",
    "output": "まず、1から4の連続した数のxを作ってrunif関数を呼び出して一様乱数変数を作っています。"
  },
  {
    "index": "F26436",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, the first argument to runif, is the number of uniform random variables that you want to generate.",
    "output": "runifの1つ目の引数は生成したい一様乱数変数の個数です。"
  },
  {
    "index": "F26437",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I say runif 1 it's going to generate a single random variable.",
    "output": "runif(1)であれば、乱数値を1つ生成します。"
  },
  {
    "index": "F26438",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I say runif 2, it's going to generate a vector of two random variables.",
    "output": "runif(2)であれば、乱数値を2つのベクトルを生成します。"
  },
  {
    "index": "F26439",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here I'm applying l, the runif function to sequence 1, 2, 3, 4.",
    "output": "ここでは、runif関数を1,2,3,4の連続した数に適用します。"
  },
  {
    "index": "F26440",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what I'm going to get is a list where the first element is a single random number random uniform.",
    "output": "ここで返されているのはリストで1つ目の要素は一様乱数値が1つです。"
  },
  {
    "index": "F26441",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second element's going to be a vector of two random uniforms.",
    "output": "2つ目は一様乱数値が2つのベクトルです。"
  },
  {
    "index": "F26442",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The third element's going to be a vector of three.",
    "output": "3つ目は3つのベクトルです。"
  },
  {
    "index": "F26443",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the fourth element's going to be a vector for random uniforms.",
    "output": "4つ目は一様乱数値が4つのベクトルです。"
  },
  {
    "index": "F26444",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so ret, you'll note, if you know the runif function, you'll know that it has other arguments to it beyond the, the number of uniforms to generate.",
    "output": "runifをご存知なら、生成する乱数値の数以外にも指定できる引数があるのをご存知かと思います。"
  },
  {
    "index": "F26445",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But those other arguments have default values so I don't need to specify them.",
    "output": "ただ、この引数はデフォルト値があるので、指定する必要はありません。"
  },
  {
    "index": "F26446",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, suppose I want to call the runif function on each one of these elements of X but I didn't want to just generate a uniform between zero and one which is default.",
    "output": "次に、runif関数をXの各要素に対して呼ぶとして、今度はデフォルト値の0から10までの値の一様乱数値を生成したいとします。"
  },
  {
    "index": "F26447",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Suppose I want to generate a uniform between zero and ten so now I need to pass some arguments to the runif function which are not the default values.",
    "output": "今度は、runif関数にデフォルト値以外の値を引き渡す必要があります。"
  },
  {
    "index": "F26448",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "In particular I need to change the max value.",
    "output": "ここでは、max、最大値を変える必要があります。"
  },
  {
    "index": "F26449",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I'm calling lapply on X, I'm calling the run, I'm passing the runif function, but that I'm specifying that I want the min to be zero and the max to be ten.",
    "output": "lapplyの...の引数部分に対して引数値を引き渡すことで行います。このようにlapplyをXに対して呼び出し、runif関数を指定し、minに0、maxに10を使うことを指定します。"
  },
  {
    "index": "F26450",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now when I the, the list that I get out of this has random uniforms that are between zero and ten.",
    "output": "こうすると0から10までの値で作成された一様乱数のリストが返ってきます。"
  },
  {
    "index": "F26451",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So lapply and the associated functions make heavy use of what, of what are called anonymous functions.",
    "output": "lapplyとそこに使用する関数では無名関数と呼ぶものが頻繁に使用されています。"
  },
  {
    "index": "F26452",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Anonymous functions are functions that don't have names, so you don't assign them a name of some sort but you can kind of generate them on the fly.",
    "output": "無名関数というのは、名前が無くなんらかの名前を付けること無く必要な箇所でのみ有効な関数を生成できます。"
  },
  {
    "index": "F26453",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here is a just a quick example, I'm going to create a list that contains two matrices in it.",
    "output": "簡単な例を挙げると、ここに2つの行列があるリストを作ります。"
  },
  {
    "index": "F26454",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The first is a mat, a two by two matrix and the second is a three by two matrix.",
    "output": "1つ目の行列は2x2の行列で2つ目の行列は3x2の行列です。"
  },
  {
    "index": "F26455",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And suppose I want to, I want to extract the first column from each one of these matrices.",
    "output": "これらの行列からそれぞれ1列目を取り出したいと考えてください。"
  },
  {
    "index": "F26456",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I can do is I can call lapply so, there's no function that, out there that already extracts the first column of a matrix but this is easy to do.",
    "output": "lapplyを呼べばいいのですが、行列の1列目を抽出する関数は関数が存在していません。"
  },
  {
    "index": "F26457",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can just write a function that just takes the first element, the first column of that matrix.",
    "output": "新しく関数を書いて、行列の最初の列を抽出するようにします。"
  },
  {
    "index": "F26458",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I'm going to call lapply on x.",
    "output": "lapplyをxに対して呼び出します。"
  },
  {
    "index": "F26459",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'm, I'm going to write, I'm going to write the function right here, so I'm going to say function, and then I'm, I'm going to give it an argument, and then given that argument, I extract the first column.",
    "output": "関数をここに書きます。"
  },
  {
    "index": "F26460",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, when I call Lapply with this function I get the first column from A, and the first column from B.",
    "output": "ここにあるようにlapplyを呼んで、Aの1列目とBの1列目が返ってきました。"
  },
  {
    "index": "F26461",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this function doesn't exist except within the context of Lapply, and after the Lapply function is finished, the function basically goes away.",
    "output": "名前が無いのでこれが無名関数です。"
  },
  {
    "index": "F26462",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's an anonymous function, because it doesn't have a name and lapply and a lot of these other types of functions use anonymous functions very heavily.",
    "output": "lapplyや他の種類の関数でも無名関数を頻繁に使います。"
  },
  {
    "index": "F26463",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because unless there already exists a function that does the operation that you want to do, you're going to have to write the function kind of on the spot.",
    "output": "というのも実施したい操作を行う関数がすでに存在していない場合には必要な箇所でのみ有効な関数を各必要があるからです。"
  },
  {
    "index": "F26464",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So sapply is just a variant of lapply and all it does is it tries to simplify the result of lapply if possible.",
    "output": "可能な限りlapplyの結果をSIMPLIFYして返そうとするだけの関数です。"
  },
  {
    "index": "F26465",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So recall that lapply always returns a list but sometimes you don't want a list, sometimes you just want something different.",
    "output": "思い出してくださいlapplyは常にリストを返しますがリストは不要で他の形で返して欲しい時があります。"
  },
  {
    "index": "F26466",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if the, if the result is a list where every element is a length 1 then what sapply will do is it'll return a vector of all,of all, of all those elements.",
    "output": "例えば、結果のリストの全部の要素が長さ1のリストでもsapplyは全部の要素のベクトルを返します。"
  },
  {
    "index": "F26467",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Usually you don't want an ele, a list where every, where every element is a single number, for example, and so sapply will simplify that into just a vector.",
    "output": "通常の場合は、全ての要素数が1のリストは欲しくありません。"
  },
  {
    "index": "F26468",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "if, if the result is a list where every element is a vector of the same length.",
    "output": "sapplyは結果を結果がリストで全要素が同じ長さのベクトルの場合には1つのベクトルに変えてくれます。"
  },
  {
    "index": "F26469",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, if the, if the list comes back and every element has a length five, for example.",
    "output": "例えば、リストが返ってきて全要素が5の場合には、sapplyはこの要素をリストの行数かける5の行列にします。"
  },
  {
    "index": "F26470",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then what sapply will do it'll, it'll put those elements in a matrix that's, that's five by however long the matrix, the, the list is.",
    "output": "このように変えたいことが頻繁にあるものです。"
  },
  {
    "index": "F26471",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that, that's often what you want to happen.",
    "output": "もし返すオブジェクトが単純化できない場合には、そう、例えば、様々な型を返す様な場合には、lapplyは何もせずに、リストを返すだけです。"
  },
  {
    "index": "F26472",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But if it, if it can't figure out how to simplify the object when it comes back, for example, if the object has many different types of things that comes back then it's just going to then it won't do anything.",
    "output": "この例では、lapplyを呼んで全要素にmean関数を適用します。"
  },
  {
    "index": "F26473",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here in this, in this example when I called lapply and I applied the mean to everything what happens is that I got a list back that's of length four and every element of the list is a single number.",
    "output": "全ての値が1つしかない長さ4のリストが返ってきます。"
  },
  {
    "index": "F26474",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it would make, it would be a lot nicer if I just got my list back that was just, I'm sorry, if I just got a vector back with all these numbers in it.",
    "output": "これに対してこれらの値をベクトルに入れて返してくれればかなり良いものになります。"
  },
  {
    "index": "F26475",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's exactly what sapply does.",
    "output": "これをsapplyが行ってくれます。"
  },
  {
    "index": "F26476",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So sapply called on x with the mean function gives me a vector with four numbers in it.",
    "output": "xに対して、mean関数を使うsapplyでは4つの値の入ったベクトルを返します。"
  },
  {
    "index": "F26477",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, if I called mean on the, on the list by itself, that's not really going to work because mean is not meant to be applied to lists.",
    "output": "もちろん、リストそのものにmeanを使うと動作しません。"
  },
  {
    "index": "F26478",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The apply function is another loop function that's used to evaluate a, a function over the margins of an array.",
    "output": "apply関数は配列のマージンに対して関数を適用するループ関数の一つです。"
  },
  {
    "index": "F26479",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Usu, usually, the function's going to be an anonymous one, like we showed with lapply or it could be a function that already exists like the mean, for example.",
    "output": "ここで適用する関数はlapplyで出てきたように無名関数であることが多いですが、例えばmeanのように定義された関数でも構いません。"
  },
  {
    "index": "F26480",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's usually used to apply a function to the rows or columns of a matrix.",
    "output": "applyは、関数を行列の行や列に適用するのに使います。"
  },
  {
    "index": "F26481",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course, matrices which are two dimensional arrays, are going to be the most common type of array that we're going to use in R.",
    "output": "もちろん、Rでは2次元の配列の行列が代表的に使われます。"
  },
  {
    "index": "F26482",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you may have three dimensional arrays and such.",
    "output": "でも、3次元の配列なども使えます。"
  },
  {
    "index": "F26483",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you, so you can use apply on general arrays such as taking the average of an array of matrices, for example.",
    "output": "applyは一般的な配列に使って行列の配列の平均を計算することができます。"
  },
  {
    "index": "F26484",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One thing to note, and you may hear this out in the wild, occasionally, that apply, using apply is somehow better than ta, using a for loop or somehow it's faster than using a for loop.",
    "output": "applyを使うのはforループを使うより良いとかforループを使うより速いと聞くでしょう。"
  },
  {
    "index": "F26485",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that's, generally speaking, not true.",
    "output": "ただ、一般的に言ってこれは正しくありません。"
  },
  {
    "index": "F26486",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It was true a long time ago in older versions of the S language in R but right now, it's not true at all.",
    "output": "随分前のRやS言語の古いバージョンでは正しかったですが今では全く正しくありません。"
  },
  {
    "index": "F26487",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The main reason you want to use a function like apply is that it involves less typing.",
    "output": "appyのような関数を使うべき主な理由は入力が少なくなるからです。"
  },
  {
    "index": "F26488",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And less, less typing is always better, because good programmers are always lazy.",
    "output": "入力が少ないのは常に好ましいことです。上手なプログラマは常に手間を省きます。"
  },
  {
    "index": "F26489",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, apply is very useful, but in particular on command line, because on the command line, when we're interacting with data, we're doing exploratory analysis, we want to do as little typing as possible because it just makes our fingers tired.",
    "output": "applyは非常に役立ちコマンドラインでは特に役立ちます。コマンドラインではデータを操作し探索的分析をしていくので入力は最小限にしたいからです。"
  },
  {
    "index": "F26490",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, how does apply work?",
    "output": "では、applyはどう使うのでしょうか?"
  },
  {
    "index": "F26491",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the first argument acts as an array.",
    "output": "1つ目の引数Xは配列です。"
  },
  {
    "index": "F26492",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "An array is a vector that has dimensions attached to it.",
    "output": "配列はベクトルで次元のあるものです。"
  },
  {
    "index": "F26493",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So a matrix is a two dimensional array, for example.",
    "output": "例えば行列は2次元配列のものです。"
  },
  {
    "index": "F26494",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This is a vector, an integer vector that indicates which margin should be retained.",
    "output": "これは整数のベクトルでどの部分を残すのか指定します。"
  },
  {
    "index": "F26495",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the last important argument is the function that you want to apply to each of the margins.",
    "output": "最後の引数は重要で各マージン部分に適用する関数です。"
  },
  {
    "index": "F26496",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, and then the dot dot dot argument are other arguments that you want to pass, include other arguments that you want to pass to the function.",
    "output": "そして...はそれ以外の引き渡す引数群で関数に引き渡したい引数群を含みます。"
  },
  {
    "index": "F26497",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here's a matrix that I'm creating, it has 20 rows and ten columns.",
    "output": "ここに行列を作っています。20行と10行のものです。"
  },
  {
    "index": "F26498",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, in, in, in the matrix it's just normal random variables that I've generated.",
    "output": "この中には、生成した正規分布の乱数値があります。"
  },
  {
    "index": "F26499",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I apply, so what I want to do is, I want to take this matrix and I want to calculate the mean of each column of the matrix.",
    "output": "applyで行いたいのは行列を使って行列の各列のmeanを計算します。"
  },
  {
    "index": "F26500",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the way I can do this is I can apply, use the apply function on x.",
    "output": "後で意味を説明しますがMARGIN2を使い関数の引数にはmeanを引き渡します。"
  },
  {
    "index": "F26501",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I give it the margin, two, and I'll say what that means in a second.",
    "output": "こうして得た結果は、長さ10のベクトルで行列の各列のmeanが返されています。"
  },
  {
    "index": "F26502",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I pass the function, mean.",
    "output": "ここで実施したいのは、行列には20行と10列がありこの行列を1次元目には20行があり2次元目には10列があります。"
  },
  {
    "index": "F26503",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so what happens is, I get back a vector of length ten that has the mean of each of the columns of the matrix.",
    "output": "そこで関数meanを行列に適用して2次元目を残しておこうとしています。"
  },
  {
    "index": "F26504",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the idea is that, so the matrix has ten, sorry, it has 20 rows and ten columns, and so that you can think of the matrix as, as, and so dimension one has 20 rows and dimension two has ten columns.",
    "output": "2次元目は、列数分ありますが、1次元目の行は圧縮したいのです。"
  },
  {
    "index": "F26505",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, when you apply the function, mean, over the matrix, well, the idea is that you want to keep the second dimension, which is the number of columns, and you want to collapse the first dimension, which is the rows.",
    "output": "ここでは、meanを各列の全行に適用して配列の行を制限することで返ってくるときには1次元分が消去されています。"
  },
  {
    "index": "F26506",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's really the first dimension that's been eliminated.",
    "output": "ここでは、1次元目が消去されています。"
  },
  {
    "index": "F26507",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you get this number which this vector which has each of the means for each of the columns.",
    "output": "そして、この数値群が返されこのベクトルには各列のmeanが返されています。"
  },
  {
    "index": "F26508",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "similarly, you can take the means of all the rows of the array.",
    "output": "同じように、配列の行のmeanを返すこともできます。"
  },
  {
    "index": "F26509",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I can, I can call the apply function on x.",
    "output": "このようにxに対してapplyを使いますMARGINで次元の1を指定します。"
  },
  {
    "index": "F26510",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I give it the dimens, the margin, one, which means preserve all the rows, but collapse all the columns.",
    "output": "1は全ての行を残して全ての列を圧縮するという意味です。"
  },
  {
    "index": "F26511",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I, I, here I'm calculating the sum of each the rows, instead of the mean.",
    "output": "ここでは、平均(mean)ではなく各行の合計(sum)を計算します。"
  },
  {
    "index": "F26512",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the, so, I cast the one because it says I want to, I, because of what I mean is I want to preserve the rows and collapse the columns.",
    "output": "1を引き渡していますが、行を残して列を圧縮するためです。"
  },
  {
    "index": "F26513",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, I got a vector of 20, because there's 20 rows.",
    "output": "ここでは、20のベクトルが返ってきました。20行あるからです。"
  },
  {
    "index": "F26514",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And each, and inside each and for each row, I calculate the sum of that row.",
    "output": "各行に対して、その行の合計を計算しました。"
  },
  {
    "index": "F26515",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now for, for simple operations, like calculating the sum, or calculating the mean of a column or a ma, or, or, of a row there are special functions that are highly optimized to do this very quickly.",
    "output": "ここで行ったような行や列の合計や平均などの単純な計算の場合には特別な関数があります。これらはこの処理を高速に行えるように高度に最適化されています。"
  },
  {
    "index": "F26516",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for calculating the row sums and row means, there's the functions rowSums and rowMeans.",
    "output": "行の合計や行の平均を計算するのにはrowSums関数やrowMeans関数があります。"
  },
  {
    "index": "F26517",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And similarly, there's colSums and colMeans, which do the same things for the columns.",
    "output": "同じようにcolSumsやcolMeansがあり列に対して同じことを行います。"
  },
  {
    "index": "F26518",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "These are equivalent to using the apply function, but they're very much faster than using the apply, because they're optimized to specifically to do those operations.",
    "output": "これらはapply関数を行うのと同等のものですが、applyを使うよりもかなり高速に処理します。"
  },
  {
    "index": "F26519",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you want to calculate the sum or the mean of a, of a column or row of a matrix, use those functions instead.",
    "output": "ですから、行列の行や列に対して合計や平均を計算するならこの関数を使いましょう。"
  },
  {
    "index": "F26520",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now you can, you know, use the apply function to apply other types of functions.",
    "output": "もちろん、他の関数を適用するためにapply関数を使うこともできます。"
  },
  {
    "index": "F26521",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, suppose you have a matrix.",
    "output": "例えば、行列があるとします。"
  },
  {
    "index": "F26522",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Here, I've generated, again, a matrix of random normal variables, that's 20 rows by 10 columns.",
    "output": "20行と10列の正規分布の乱数を持つ行列を生成しました。"
  },
  {
    "index": "F26523",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And suppose I want to go through each row of the matrix and calculate the twenty-fifth, and the seventy-fifth percentile of that row.",
    "output": "行列の各行をチェックして行の25パーセンタイルと75パーセンタイルを計算します。"
  },
  {
    "index": "F26524",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, I can apply on x I, I get, I pass the margin of one, because it means I want to preserve the rows.",
    "output": "xに対してapplyを実行しMARGINに1を指定し行を残すようにします。"
  },
  {
    "index": "F26525",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now the quantile function needs, needs, the quantiles that you want to calculate.",
    "output": "次にquantile関数を引き渡しquantile関数が必要とする計算する分位点を指定します。"
  },
  {
    "index": "F26526",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's no default value for that, so I actually have to pass it to the quantile function through the dot dot dot argument of apply.",
    "output": "quantile関数で使用されるデフォルト値はないのでapplyの...引数部分に値を渡す必要があります。"
  },
  {
    "index": "F26527",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I, and I give it 0.25 and 0.75 meaning I want to calculate the twenty-fifth percentile and the seventy-fifth percentile.",
    "output": "0.25と0.75を渡していてこれによって25パーセンタイルと75パーセンタイルを計算します。"
  },
  {
    "index": "F26528",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what this funct, what this call does is, it goes through each row of the matrix, and for each row, it calculates the twenty-fifth and seventy-fifth percentile.",
    "output": "この呼び出しによって行われるのは行列の各行をチェックして各行の25と75パーセンタイルを計算します。"
  },
  {
    "index": "F26529",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And what apply will do is, it'll create a matrix that has two rows, and the number of columns is equal to the number of rows in this matrix, which happens to be 20.",
    "output": "applyは2行と20列の行列を作ります。列の数は行列の行数と一致し、20となります。"
  },
  {
    "index": "F26530",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, I'm going to get a 2 by 20 matrix, where in each column of this return matrix, I've got the twenty-fifth and the seventh, seventy-fifth percentile for the corresponding row.",
    "output": "そして、2x20の行列が返されます。そして、この返された行列の列には該当行の25パーセンタイルと75パーセンタイルがあります。"
  },
  {
    "index": "F26531",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, in the first row, the twenty-fifth percentile is minus 0.33 and the seventy-fifth percentile is mi, is 0.92 and in the sixteenth row the seventy-fifth, the twenty-fifth percentile is minus 0.95 and the seventy-fifth percentile is 0.88.",
    "output": "例えば、最初の行では25パーセンタイルは-0.33です。"
  },
  {
    "index": "F26532",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you see how that works.",
    "output": "このように動作します。"
  },
  {
    "index": "F26533",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, suppose I had more than just a matrix.",
    "output": "では、行列以上の処理をするとしたらどうでしょう。"
  },
  {
    "index": "F26534",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Suppose I, I had an array that I want to do something with.",
    "output": "処理したい配列があると考えてください。"
  },
  {
    "index": "F26535",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the so, here, I'm creating an array with, which has normal random variables and it has two rows and two columns and it's ten and the third dimension is ten.",
    "output": "まず、正規分布の乱数で配列を作ります。2行と2列で3次元目が10です。"
  },
  {
    "index": "F26536",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I guess I'm not sure what you would call that dimension.",
    "output": "この次元を何と呼ぶか決まっていません。"
  },
  {
    "index": "F26537",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you can imagine this.",
    "output": "ただ、こんな風に想像できるでしょう。"
  },
  {
    "index": "F26538",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can think of this as being, the, they're a bunch of 2 by 2 matrices that are kind of stacked together.",
    "output": "2x2の行列が積み上げっているような感じと考えてください。"
  },
  {
    "index": "F26539",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the idea is that, you can imagine I have a be, a bunch of 2 by 2 matrices, and I want to take the average of those 2 by 2 matrices.",
    "output": "この積みあがっている2x2の行列の2x2部分の平均を計算します。"
  },
  {
    "index": "F26540",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the average of the, of a bunch of 2 by 2 matrices is going to be another 2 by 2 matrix, which is the mean.",
    "output": "この2x2部分の平均を計算した行列は、これも2x2の平均の行列になります。"
  },
  {
    "index": "F26541",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, I can call apply on this array... And I want to keep the first, and the second dimension, but I want to collapse the third dimension.",
    "output": "apply関数をこの配列に適用しますが、1次元目と2次元目は維持して3次元目を圧縮します。"
  },
  {
    "index": "F26542",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, when I, when I give the margin, I give it one and two, which I want to preserve, and then three is not there, which means I want to collapse third dimension.",
    "output": "MARGINには、残したい1と2を渡しますが3は指定しません。こうすることで、3次元目が圧縮されます。"
  },
  {
    "index": "F26543",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, and then the function I pass it is the mean.",
    "output": "こうすることで指定した並列を使って3次元目を圧縮し平均を計算しmeanの行列を返します。"
  },
  {
    "index": "F26544",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what this will do is, it'll take my array and it'll collapse, it'll average over the third dimension and give me the mean matrix.",
    "output": "別のやり方では、rowMeans関数を使うこともできます。"
  },
  {
    "index": "F26545",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another way that you can do this is to use the rowMeans function, so even though this is in a matrix, you can apply rowMeans to an array.",
    "output": "これは行列ですが、rowMeansを配列にも適用できます。"
  },
  {
    "index": "F26546",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you give it, and you pass the argument, dims, equal to two.",
    "output": "そして、引数dims=2を指定します。"
  },
  {
    "index": "F26547",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "mapply is a loop function that tries, is a multivariate version of the kind of lapply and sapply functions that you've seen previously.",
    "output": "mappyは複数変数を扱える繰り返し関数です。"
  },
  {
    "index": "F26548",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the idea is that it applies a function in parallel over a set of different arguments.",
    "output": "これまでに出てきたlapplyやsapply関数を複数変数版にしたものです。"
  },
  {
    "index": "F26549",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one thing we have noticed about the previous functions, lapply, sapply, tapply, is that, they have only, they only apply a function over the elements of a single object.",
    "output": "前回までに見てきた関数のlapplyやsapplyやtapplyは複数要素や単一のオブジェクトに1つの関数を適用するものでした。"
  },
  {
    "index": "F26550",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, for example, if you think about lapply, the input to lapply was a list.",
    "output": "このため例えばlappyでいえば、lapplyに渡せるのは1つのリストだけで関数がそのリストの要素に対して適用されていました。"
  },
  {
    "index": "F26551",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what happens if you have two lists that you want to apply a function over?",
    "output": "では、2つのリストに関数を適用したいときはどうするのでしょうか?"
  },
  {
    "index": "F26552",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, and suppose you have two lists, and the elements of the first list go into one argument of the function, and the elements of the second list go into another argument of the function.",
    "output": "2つのリストがあると考えてください1つ目のリストの要素が関数の1つの引数になって、2つ目のリストの要素が関数の次の引数になります。"
  },
  {
    "index": "F26553",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So lapply and sapply can't really be used for that purpose.",
    "output": "lapplyやsapplyは複数の引数用では使えません。"
  },
  {
    "index": "F26554",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one way to do that is just to write a for loop, where the for loop will index the elements of each of the different lists, and then you can pass a function to each of those elements of the list.",
    "output": "複数の引数を扱うにはforループを使って要素の入ったリストを順次処理するようにして各リスト内の要素を関数に引き渡すのも1つの方法です。"
  },
  {
    "index": "F26555",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Another way to do that though is with mapply, where mapply can take multiple list arguments and then apply a function to the, to the elements of those, of the multiple lists, in parallel.",
    "output": "mapplyでは複数の引数を使ってこれらのリストの中の要素に並列的に関数を適用できます。"
  },
  {
    "index": "F26556",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the function arguments for mapply are a little bit different, just because it has to allow for the possibility of a variable number of arguments.",
    "output": "このため、mapplyの関数の引数は少し違っています。"
  },
  {
    "index": "F26557",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, the first argument to mapply is the function that you want to apply.",
    "output": "これは、一定ではない引数を使えるようにするためです。"
  },
  {
    "index": "F26558",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the function that you're going to pass to mapply has to have, the number of arguments that the function takes has to be at least as many as the number of lists that you're going to pass to mapply.",
    "output": "そのため、mapplyの最初の引数は適用したい関数になっています。"
  },
  {
    "index": "F26559",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the list that, the things that will be coerced to a list, will be passed through the dot dot dot argument.",
    "output": "mapplyに渡す関数に必要なのは使用する関数が使おうとする引数の数と同じ数の引数です。"
  },
  {
    "index": "F26560",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so if you have three lists, you'll pass three objects and then your function has to take at least three arguments to it.",
    "output": "ですので、3つのリストがあれば3つのオブジェクトを渡し関数には少なくとも3つの引数が必要です。"
  },
  {
    "index": "F26561",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the more args, argument is just if you have more arguments and you need to pass to your function.",
    "output": "MoreArgsは、関数に渡す必要のある引数数よりも引数が多い場合に使います。"
  },
  {
    "index": "F26562",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And a simplified argument is similar to the simplify arguments that you saw in sapply and also in in tapply.",
    "output": "SIMPLIFY引数は、これまでに出てきたsapplyやtapplyと同様のものです。"
  },
  {
    "index": "F26563",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here, for example, I'm creating a list here, and the list has, I'm going to repeat 1 four times, the integer 1 four times, I'm going to repeat 2 three times, I'm going to repeat 3 two times, and repeat 4 just once.",
    "output": "リストを作ります。リストには、1を4回繰り返したものと、2を3回、3を2回、4を1回繰り返したものがあります。"
  },
  {
    "index": "F26564",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's a little bit tedious to have to type something to do, even though this is a fairly artificial example, but with mapply, it's actually quite simple.",
    "output": "このお見せするために作った例でさえもこんなものを入力するのは少し手間ですよね。"
  },
  {
    "index": "F26565",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can just do mapply rep, so, rep is the repeat function And then, repeat, it has two arguments, so, the first set of arguments is going to be 1 through 4, and the second set of arguments is going to be 4 through 1, and you can see that in list above here.",
    "output": "mapply(repとして、repは繰り返し用関数ですが、2つの引数です。1つ目は1から4の指定で2つ目は4から1です。"
  },
  {
    "index": "F26566",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The first argument was 1, 2, 3, and 4, and the second argument was 4, 3, 2, and 1.",
    "output": "1つ目の引数は、1,2,3,4で、2つ目の引数は、4,3,2,1です。"
  },
  {
    "index": "F26567",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, that's, so those are the two sets of arguments that I'm going to pass to mapply.",
    "output": "この2つの引数をmapplyに渡します。"
  },
  {
    "index": "F26568",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can see that when I do that, I get my list of four 1s, three 2s, two 3s and one 4, just like the list that I have above here.",
    "output": "そうすると、リストには、1が4回、2が3回、3が2回、4が1回できていて上のリストを同じものができます。"
  },
  {
    "index": "F26569",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So mapply is, can be used to apply a function to multiple sets of arguments.",
    "output": "mapplyは、複数の引数に対して関数を適用するのに使います。"
  },
  {
    "index": "F26570",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here's just another very simple function.",
    "output": "もうひとつ簡単な関数をお見せします。"
  },
  {
    "index": "F26571",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It just generates some random normal noise.",
    "output": "ノイズ付正規分布の乱数を生成します。"
  },
  {
    "index": "F26572",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And these, and, see, the rnorm, the, the, I'm sorry, the function has three arguments the, the number of observations the value of the mean, and the value of the standard deviation.",
    "output": "この関数には3つの引数があります。観測数、meanの値、標準偏差です。"
  },
  {
    "index": "F26573",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if I just apply noise to, with a single set of arguments, 5, 1 and 2.",
    "output": "noise関数を1組の引数5,1,2で適用すると、5つの正規分布乱数がmean1、標準偏差2で返されます。"
  },
  {
    "index": "F26574",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "However, this function doesn't work really correctly if I pass it a vector of arguments.",
    "output": "しかし、この関数はベクトル型を引き渡すと正確には動作しません。"
  },
  {
    "index": "F26575",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now what's happening is, I get a vector of 5, here. When I pass it 1 through 5 and 1 through 5.",
    "output": "関数に1から5と1から5のベクトルを引き渡しました。"
  },
  {
    "index": "F26576",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But, really what I want to happen is to have one, one random normal with mean 1, two random normals with mean 2, three random normals with mean 3, etc, and then five random normals with mean 5.",
    "output": "でも、ここで行いたかったのはmean1の正規分布乱数を1つ返し、mean2の正規分布乱数を2つ、mean3の正規分布乱数を3つの様に続きmean5の正規分布乱数を5つ返すようにしたかったのです。"
  },
  {
    "index": "F26577",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, so that's what I get here, when I use the mapply function onto the and if I vectorize this noise function I give it, you know, three sets of arguments, so it's 1 through 5, 1 through 5, and then 2.",
    "output": "次にmapplyを使うとこうなりますnoise関数にベクトル操作させて次の引数を渡します。"
  },
  {
    "index": "F26578",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I, I'm always going to fix the standard deviation to be 2, but I'm going to be changing the n and I'm going to be changing the mean.",
    "output": "ここでは2を標準偏差の固定値として使いましたが、引数nと引数meanを変更しています。"
  },
  {
    "index": "F26579",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's how I can instantly vectorize a function that doesn't allow for vector arguments.",
    "output": "このようにしてベクトルを引数としない関数をベクトル操作することができます。"
  },
  {
    "index": "F26580",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is the same as, as I were to manually type out a list with these five different function calls.",
    "output": "これは仮に同じことをマニュアルで入力して5回関数を呼び出してリストを作る場合のコードです。"
  },
  {
    "index": "F26581",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Tapply is a very useful function and it's used to apply a function over subsets of a vector.",
    "output": "tapply関数は、非常に役に立つ関数で、ベクトルのグループに対して関数を適用するのに使います簡単に言うと、こんな風に動作します。"
  },
  {
    "index": "F26582",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the idea is basically, imagine you have a vector usually it's going to to be numbers, so a numeric vector.",
    "output": "ここにベクトルがあるとして多くの場合は数字なので、数値でできたベクトルとしましょう。"
  },
  {
    "index": "F26583",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And there are, there are pieces of this vector that you want to calculate a summary statistic over.",
    "output": "そして、このベクトルに対して、要約統計を計算したいと仮定します。"
  },
  {
    "index": "F26584",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So and so you, you're going to have to have another variable or another object which identifies which element of this, of your numeric vector belongs to which group.",
    "output": "また、別の変数が必要だとします。この変数によって、最初のベクトルの値が変数のどのグループに属するものか決まるものとします。"
  },
  {
    "index": "F26585",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The idea is that for each group in the numeric vector you're going to calculate a summary statistic like a mean, or a standard deviation, or whatever.",
    "output": "さらに、ベクトルから割り振ったそれぞれのグループに対して平均や標準偏差などの要約統計を計算するとします。"
  },
  {
    "index": "F26586",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the basic idea behind tapply is that the first argument is a numeric vector or a vector of some sort.",
    "output": "このようにtapply関数では1つ目の引数は数値のベクトルかなんらかのベクトルです。"
  },
  {
    "index": "F26587",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The second argument is, is another vector of the same length which identifies which group each element of the numeric vector is in.",
    "output": "最初のベクトルを振り分けた要素数と同じ要素数を持っているベクトルです例を出します。"
  },
  {
    "index": "F26588",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, suppose there are two groups suppose you have men and women, for example, in two groups, and maybe the first 50 observations are men and the second 50 observations are women.",
    "output": "ここに2つのグループがあり、男性と女性からなるグループです。このグループでは、最初に調べた50人が男性で、次に調べた50人が女性だったとします。"
  },
  {
    "index": "F26589",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then you need to have a factor variable which indicates, you know, which, which observations are men and which, which are women.",
    "output": "因子値は観測値のどの値が男性でどの値が女性かを決めるものです。"
  },
  {
    "index": "F26590",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so if you want to take the, the, the mean of the numeric factor within men or within women, then you can use tapply to do this.",
    "output": "男性か女性の各グループ内での平均を計算したい時にはtapply関数を使って計算することができます。"
  },
  {
    "index": "F26591",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So FUN is the function that you want to apply and so this is going to be the same as before.",
    "output": "では、FUNの箇所には適用する関数を指定します。"
  },
  {
    "index": "F26592",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's going to be the, either a function or you can pass in an ano-, an anonymous function.",
    "output": "それに続く、ピリオドについては第2引数で指定した関数に使用する引数のことを表しています。"
  },
  {
    "index": "F26593",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then the simplify argument indicates whether you want to simplify the argu-, simplify the results, kind of like the sapply simplification.",
    "output": "次にsimplify引数の値によって、sapplyのsimplificationのように結果をsimplifyすることができます。"
  },
  {
    "index": "F26594",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here's a very simple example.",
    "output": "では、とても単純な例を見てみましょう。"
  },
  {
    "index": "F26595",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm simulating a vector of normal random variables and uniform random variables and, and there's ten normals, ten uniforms, then ten normals that have a mean of one.",
    "output": "ここで仮に発生させているのは、正規分布の乱数のベクトルと一様乱数のベクトルです。"
  },
  {
    "index": "F26596",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can think of this vector as having three groups.",
    "output": "3つのグループがあるベクトルと考えてください。"
  },
  {
    "index": "F26597",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So then I'm going to create another factor variable using the gl function, and its going to be, this factor variable going to have three levels.",
    "output": "次にgl関数を使って、因子値を作ります。この因子値には、3つのレベルができるように作成します。"
  },
  {
    "index": "F26598",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And each level is going to be repeated ten times.",
    "output": "それぞれのレベルが10回繰り返されているようにします。"
  },
  {
    "index": "F26599",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I print out the factor variable here, you can see that there's ten ones, ten twos, and there's ten threes.",
    "output": "ここで因子値を表示すると10個の1と、10個の2と10個の3があるのが分かります。"
  },
  {
    "index": "F26600",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So each, so that the factor variable indicates kind of which group the, the observation is in.",
    "output": "因子値によってそれぞれの観測値がどのグループに属するのか判定できます。"
  },
  {
    "index": "F26601",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I can, I can, tapply on x, pass it the factor variable f in the mean function, that allows me to take the mean of each group of numbers in, in x.",
    "output": "準備ができたので、因子値にfを使ってxに対してtapplyを使います。mean関数を使って、x内のグループの平均が計算できます。"
  },
  {
    "index": "F26602",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you don't simplify the result, then what you get back is going to be a list.",
    "output": "simplifyを実施しない場合にはリストが戻ってきます。"
  },
  {
    "index": "F26603",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I want to calculate the mean and say simplify equals false then I get back a list with three elements and e in each element is the mean of that subgroup.",
    "output": "先ほど実施したtapplyを同じベクトルと因子値ベクトルを適用するとして、simplifyをFALSEに設定してmeanを計算すると3つの要素とサブグループのmeanがリストで戻ってきます。"
  },
  {
    "index": "F26604",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I, I can pass at slightly more complicated summary statistics.",
    "output": "また、もう少し複雑な要約統計も可能です。"
  },
  {
    "index": "F26605",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, instead of calculating the mean, which, which returns one number I'm going to calculate the range of observations.",
    "output": "ここでは、1つの数値だけを返すmeanを計算する代わりに観測値の範囲を計算します。"
  },
  {
    "index": "F26606",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this gives me the min and the max of the observations within that subset of the vector x, and so here I'm getting a list where each element is a vector of length 2.",
    "output": "ベクトルxのそれぞれのグループの観測値の最小値と最大値を計算しています。このようなリストが表示されます。"
  },
  {
    "index": "F26607",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Tapply is useful because it splits up a vector into, into little pieces and it applies a, a summary statistic or function to those little pieces, and then after it applies a function it kind of brings the pieces back together again.",
    "output": "ベクターを細かく切り分けてsummaryや関数を切り分けたものに適用した上でもういちど分かれていたものをくっつけることができます。"
  },
  {
    "index": "F26608",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so split is not a loop function but it's a very handy function that can be used in conjunction, with functions like lapply or sapply.",
    "output": "splitはループ関数ではないですが、とても便利です。lappyやsapplyなどの関数と一緒に使えます。"
  },
  {
    "index": "F26609",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I just want to mention it here.",
    "output": "ここでさっそく例を出します。"
  },
  {
    "index": "F26610",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So split takes a vector.",
    "output": "splitはベクトルを引数に使います。"
  },
  {
    "index": "F26611",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's kind of like tapply, but it, but it's like tapply but without applying the summary statistics.",
    "output": "この点ではtapplyのようですがsummaryを適用しないtapplyのように動作します。"
  },
  {
    "index": "F26612",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what it does, is it takes a vector, or an object x and it takes a factor variable, f.",
    "output": "例えばオブジェクトxのベクトルを使って因子変数のfを使います。"
  },
  {
    "index": "F26613",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which again identifies levels of a group.",
    "output": "fはグループのレベルと特定するものです。"
  },
  {
    "index": "F26614",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then it splits the object x into the number of groups that are identified in, in factor f.",
    "output": "次に、関数はオブジェクトxを因子fで特定されたグループへと分けます。"
  },
  {
    "index": "F26615",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, if f has three levels identifying three groups, then the split function will split x, into three groups.",
    "output": "例えば、3つにウループを分ける3つレベルがあったらsplit関数はxを3つのグループに分けます。"
  },
  {
    "index": "F26616",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, and then once you've got those groups split apart, you can apply, you can use lapply, or sapply to apply a function to those individual groups.",
    "output": "一旦これらがそれぞれのグループに分けた後で、lapplyやsapplyをそれぞれのグループに適用することができます。"
  },
  {
    "index": "F26617",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here is, is a simpler example, similar to what I had before.",
    "output": "先のtapplyでの例よりもさらに単純な例を出します。"
  },
  {
    "index": "F26618",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "With tapply example, I've simulated a normal 10 normal random variables with mean zero, 10 uniforms, and 10 normal's with mean one.",
    "output": "正規分布の乱数を10個生成しました。平均は0で10個の一様分布と平均が1の10個の正規分布です。"
  },
  {
    "index": "F26619",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And has created my factor variable here.",
    "output": "そして、因子変数を作りました。"
  },
  {
    "index": "F26620",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And now I'm just going to split the vector into three parts.",
    "output": "では、ベクトルを3つに分けたいと思います。"
  },
  {
    "index": "F26621",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because because the factor variable has three levels.",
    "output": "因子変数には、3つのレベルが設定されているからです。"
  },
  {
    "index": "F26622",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now you can see when I split the x vector. The first, I got a list back and the first element is 10 normals, the second element is 10 uniforms and the third element, which gets a little cutoff here is 10 normals again.",
    "output": "ここで、ベクトルxをsplitするとまず最初にリストが返されて1つ目の要素は10個の正規分布で2つ目は10個の一様分布で3つ目は一部切れていますが10個の正規分布となっています。"
  },
  {
    "index": "F26623",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's what the split function does.",
    "output": "これがsplit関数の動きです。"
  },
  {
    "index": "F26624",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And now I've got a, so a split always returns a list back.",
    "output": "splitは常にリストを返します。"
  },
  {
    "index": "F26625",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so if you want to do something with this list, you can use lapply or sapply.",
    "output": "このリストに対して操作する場合にはtapplyやsapplyを使います。"
  },
  {
    "index": "F26626",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, here for example, it is common to use the lapply function in conjunction with the split function, so the idea that you split something that lapply function over it.",
    "output": "この例のようにtapply関数をsplit関数はよく一緒に使われます。"
  },
  {
    "index": "F26627",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, this case, this use of lapply and split is not necessary, because you can use the tapply function which will do the same exact thing.",
    "output": "ただ、この例では、lapplyとsplitを使う必要はありませんでしたtapplyを使うことでまったく同じことができるからです。"
  },
  {
    "index": "F26628",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's not anymore efficient or any worse to do it this way but the tapply function is a little bit more compact.",
    "output": "動作効率が下がったり悪いというわけではありませんがtapplyを使う方が短く書けます。"
  },
  {
    "index": "F26629",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the nice thing about the split, using the split function is that it can be used to split much more complicated types of objects.",
    "output": "split関数を使うと素晴らしいことはもっともっと複雑な種類のオブジェクトにも使うことができる点です。"
  },
  {
    "index": "F26630",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So for example, here I've got a data frame for.",
    "output": "例えば、ここにデータフレームがあります。"
  },
  {
    "index": "F26631",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, you can see that this is the first six rows of the data, of this...",
    "output": "ここにデータの最初の6行がありますがデータフレームには何百もの行があります。"
  },
  {
    "index": "F26632",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you see there are measurements on ozone, solar radiation, wind, and temperature, and then the month and the day within that month.",
    "output": "他の測定値としてozoneやsolarradiation、windtemperatureと測定の月とその月の測定日があります。"
  },
  {
    "index": "F26633",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, one thing I might want to do is, is calculate for example the mean of ozone, solar radiation, wind and temperature in, within each month.",
    "output": "例として、もう1つ行いたいのは計算してozone、solarradiation、wind、temperatureのそれぞれの月の平均を出したいとします。"
  },
  {
    "index": "F26634",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so for in each month, there's you know, 30 some observations.",
    "output": "それぞれの月に30個ほどの観測値があります。"
  },
  {
    "index": "F26635",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I want to calculate the mean within each month.",
    "output": "毎月の平均を計算します。"
  },
  {
    "index": "F26636",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "All right, so how do I do this?",
    "output": "さて、どうやって計算させるのでしょうか。"
  },
  {
    "index": "F26637",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well, what I'd like to do is I'd like to split the data frame into monthly pieces.",
    "output": "データフレームを月毎のデータに分割します。"
  },
  {
    "index": "F26638",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then once I've split data frame into separate months, I can just calculate the means, the column means using either apply or call means, on those other variables.",
    "output": "一旦、データフレームを月毎に分けてしまえばこのデータに対してapplyやmean関数を使うだけで計算できます。"
  },
  {
    "index": "F26639",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's what I've done here.",
    "output": "これがここで実施したことです。"
  },
  {
    "index": "F26640",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What I've done is I split the airquality data frame and this, and the factor I'm going to use to split is the month variable.",
    "output": "ここでは、airqualityのデータフレームを分割して分割に使う因子はmonth変数です。"
  },
  {
    "index": "F26641",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the month variable technically speaking, in the data frame is not a factor variable but it can be converted into a factor variable, because it only takes the values 5, 6, 7, 8 and 9.",
    "output": "このデータフレームのmonth変数は厳密にいえば因子の変数ではありませんが因子変数に変換できます。"
  },
  {
    "index": "F26642",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Basically because the measurements are only taken in the, kind of, warmer months of the year.",
    "output": "これがなぜかと言うと測定は一年の内でも比較的温かい月にしか行われないためです。"
  },
  {
    "index": "F26643",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've split the airquality variable according to the month variable, and then I'm going to apply.",
    "output": "ここでは、month変数に従ってairquality変数を分けて無名関数を適用します。"
  },
  {
    "index": "F26644",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "An anonymous function and the anonymous function here, what it does is it takes the column means of just the ozone, solar radiation and wind.",
    "output": "無名関数はここではozone、solarradiation、windの列の平均を計算しています。"
  },
  {
    "index": "F26645",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'm not going to take the mean of temperature here.",
    "output": "ここでは、temperatureの平均は計算していません。"
  },
  {
    "index": "F26646",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I'm just going to take the column means of the, those three variables for each month each column monthly data frames.",
    "output": "ここでは、各月のデータフレームにおける3つの変数の平均を計算しています。"
  },
  {
    "index": "F26647",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can't see them all but you can see most of them into lapply is returning a list back, where each element of the list is a vector of length three which is, which is the mean for ozone, the mean for solar radiation and the mean for wind, within that month.",
    "output": "ここにはすべては表示されていませんがlapplyに入ったデータがリストで返されていてリストの各要素が長さ3になっていてこれはそれぞれその月のozone、solarradiationwindの平均値です。"
  },
  {
    "index": "F26648",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "As you can see that for, for most of the months the ozone value is NA and that's because when I take the mean of that column there are, and there are missing values in that column and I can't take the mean if there are missing values.",
    "output": "見て分かるようにほとんどの月でozoneの値はNAです。これは列の平均を計算するときに列に欠損値があるためで欠損値があると平均は計算できないためです。"
  },
  {
    "index": "F26649",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the, the result, when I think the mean is that I just get a missing value back.",
    "output": "平均の場合には結果は欠損値が返ってくるだけです。"
  },
  {
    "index": "F26650",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So before I fix the missing value problem, I can also call sapply here.",
    "output": "ここでは欠損値の問題を解決する前にsapplyを適用することもできます。"
  },
  {
    "index": "F26651",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the idea is that sapply, instead of returning me a list, it will simplify the result because each element of the returned list has a, has a vector of length 3.",
    "output": "sapplyではリストを返す代わりにsimplifyが実施されます。なぜなら返されるリストの各要素は長さ3のベクトルになるためです。"
  },
  {
    "index": "F26652",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They're all the same length.",
    "output": "全て同じ長さです。"
  },
  {
    "index": "F26653",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what I'll do is put, put all these numbers into a matrix.",
    "output": "次にこれらの数を行列に入れます。"
  },
  {
    "index": "F26654",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Where the three rows and in this case 5 columns.",
    "output": "この場合は3行と5列の行列です。"
  },
  {
    "index": "F26655",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For each of the three variables, in a much more compact format, it's in a matrix, instead of a list.",
    "output": "ご覧の様にこれが各月の平均です。"
  },
  {
    "index": "F26656",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Of course I still got NA's for a lot of them, because the missing values in the original data.",
    "output": "3つの変数のそれぞれがリストではなく、行列で細かく纏まっています。"
  },
  {
    "index": "F26657",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So one thing I knew is I was going to pass the na.rm argument to call means that would remove the missing values from each column, before its calculating the mean.",
    "output": "もちろん、元のデータに欠損値があるのでここでもNAは表示されます。"
  },
  {
    "index": "F26658",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And that, now when I call sapply on the split list, I can get the, the means of the observed values for each of the three variables for each of the five months.",
    "output": "知ってて便利だったのはna.rm引数を引き渡すと平均を計算する前に各列から欠損値を削除します。"
  },
  {
    "index": "F26659",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so split is a very handy function for splitting arbitrary objects according to the levels of the factor and then applying any type of function.",
    "output": "splitで作られたsapplyを呼ぶと5ヵ月の各月における3つの変数の観測値が返ってきます。"
  },
  {
    "index": "F26660",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "To those split elements of that list.",
    "output": "このようにsplit関数はとても便利で因子のレベル値に従って任意のオブジェクトを分割してリストから分割した要素に任意の関数を適用できます。"
  },
  {
    "index": "F26661",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so here I split a data frame, you can split other lists, you can, and, or other kinds of things too.",
    "output": "ここではデータフレームをsplitしましたが他のリストを分割したり他の種類も分割できます。"
  },
  {
    "index": "F26662",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the last thing I want to talk about is splitting on more than one level.",
    "output": "最後に、2つ以上のレベルを分ける方法を説明します。"
  },
  {
    "index": "F26663",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you, in the past couple of examples what I've, I've only had a single factor variable.",
    "output": "ここまでの例では1つの因子変数しか使っていませんでした。"
  },
  {
    "index": "F26664",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I've split whatever the object is with a vector or a data frame.",
    "output": "そしてベクトルかデータフレームのオブジェクトを1つの因子でsplitしてきました。"
  },
  {
    "index": "F26665",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you might have more than one factor.",
    "output": "でも、2つ以上因子があることもあります。"
  },
  {
    "index": "F26666",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example, you might have a variable, that, you know, it's gender, so it has male and female.",
    "output": "例えば、ジェンダーのような変数では男性と女性があります。加えて、別の変数があるかもしれません。"
  },
  {
    "index": "F26667",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That has, for example, the race.",
    "output": "例えば、人種などです。"
  },
  {
    "index": "F26668",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, you might want to look at the combination of the levels within those factors.",
    "output": "因子のレベルの組み合わせを使いたい場合もあります。"
  },
  {
    "index": "F26669",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so so here, we've got, I've got f1, which is a factor with two levels.",
    "output": "そして、ここには2種類のレベルを組み合わせた因子f1があります。ここでは正規分布乱数を10個生成します。"
  },
  {
    "index": "F26670",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I've got a factor with two levels, and each repeated five times, and then I've got another factor with five levels.",
    "output": "そして、2つのレベルでできた因子がありそれぞれ5個繰り返されていて別の因子は5つのレベルがあり2回繰り返されています。"
  },
  {
    "index": "F26671",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there are my kind of two category, two group, grouping variables here.",
    "output": "2種類のグループ変数があります。"
  },
  {
    "index": "F26672",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I want to look at the kind of combination of the two.",
    "output": "interaction関数を使うと1種類目のレベルと2種類目のレベルを組み合わせることができます。"
  },
  {
    "index": "F26673",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can use the interaction function to combine all the levels of the first one with the, all the levels of the second one.",
    "output": "1種類目には2つのレベルがあって2種類目には5つのレベルがあるのでこの2つを組み合わせると合わせて10個のレベルになります。"
  },
  {
    "index": "F26674",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so because there are two levels in the first factor and there is five levels in the second factor and there is a, the total combination of 10 different levels that you can have when you combine the two together.",
    "output": "ここにあるようにinteraction関数を呼ぶと別々の種類のレベルが結合された因子があらたに返されます。"
  },
  {
    "index": "F26675",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you see, when I call, when I called the interaction function I get another factor, that kind of concatenates the levels of one with the other, and you can see that it prints out that there is a total of ten levels.",
    "output": "出力すると合計10個のレベルが表示します。"
  },
  {
    "index": "F26676",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, what now I can slit my numeric vector x according to the two different levels.",
    "output": "しかしこの2種類のレベルに従って実数ベクトルxを分割することもできます。"
  },
  {
    "index": "F26677",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now, when I Iike, when I use, now one thing, when I use the split function I don't have to use the interaction function.",
    "output": "必要に応じてinteraction関数を使わずにsplit関数を使うともできます。"
  },
  {
    "index": "F26678",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can just pass it a list with the two factors and it will automatically call the interaction function for me, and create that 10 level interaction factor.",
    "output": "2種類の因子をリストにして渡すと自動的にinteraction関数を呼んでくれて10個のレベル因子を作ります。"
  },
  {
    "index": "F26679",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can just pass the list of these two factors in it, and you can that, it create, it returns me a list with the levels of the 10 different kind of interaction factor levels.",
    "output": "このように2種類の因子が入ったリストを渡すことでリストを返します。これには10個の相互の因子レベルが含まれています。"
  },
  {
    "index": "F26680",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then and then, and then the elements of the numeric factors that are within those 10 levels.",
    "output": "そして、実数因子の要素はこの10個のレベルのどれかになっています。"
  },
  {
    "index": "F26681",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now of course there are, although there are 10 levels between the two different factors, that we don't exactly observe every single combination.",
    "output": "もちろん、複数種類の因子から10個のレベルを相互に合わせたからといって全ての組み合わせがあるわけではありません。"
  },
  {
    "index": "F26682",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so there are some empty levels here and you can see that some of these levels have nothing in them.",
    "output": "このように空白となるレベルもありそのレベルには何もないことが分かります。"
  },
  {
    "index": "F26683",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They have zero elements, whereas other levels have a number in it. And so, so one thing you can do.",
    "output": "この要素は全く存在しませんが他のレベルには数値が入っています。"
  },
  {
    "index": "F26684",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But, sometimes it's a little bit handy to not have to keep these empty levels.",
    "output": "何種類かあるやり方の1つはこのリストを使ってlapplyやsapplyを適用することもできますが空白のレベルを残さない方が使いやすいことがあります。"
  },
  {
    "index": "F26685",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so the split function has an argument called drop.",
    "output": "このため、split関数には引数dropがあります。"
  },
  {
    "index": "F26686",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And if you specify drop equals true, it will drop.",
    "output": "drop=TRUEを指定するとsplitで作られた空白のレベルは削除されます。"
  },
  {
    "index": "F26687",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and this can be very handy, when you're, you're combining, multiple different factors.",
    "output": "これは複数の因子を結合している時には非常に便利です。"
  },
  {
    "index": "F26688",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you're only using a single factor, then doesn't, that argument doesn't really do anything, because you'll just use all the, all the levels but, usually.",
    "output": "ただ、因子が1種類だけの場合にはこの引数は有効な操作を行わず全てのレベルを使用します。"
  },
  {
    "index": "F26689",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But if you have multiple factors then typically you're going to have empty levels, just because you don't observe every single combination of the two factors.",
    "output": "ですが、複数種類の因子がある場合には空白のレベルがあることが多くあります。"
  },
  {
    "index": "F26690",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so drop equals true will drop those empty levels and then you can have, you'll, you'll will be returned a list, with only the levels, that have observations in them.",
    "output": "これはただ単に2種類の因子を全ての組み合わせが観測されるわけではないからです。drop=TRUEは空白のレベルを削除して観測値のあるレベルのみを返すように動作します。"
  },
  {
    "index": "F26691",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Alright, so so today's lecture is about the debugging tools that are built into R.",
    "output": "今日はRに組み込まれているデバッグツールについて説明します。ツールはRに付いてきて別のパッケージに含まれてはいません。"
  },
  {
    "index": "F26692",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They're not part of any package and they can be useful for kind of figuring anything out, figuring out what's wrong after you've discovered there's a problem, right.",
    "output": "ツールは問題が見つかった時に何がおかしいのかを突き止めるのに役立ちます。"
  },
  {
    "index": "F26693",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So how do you know that there's a problem?",
    "output": "どうやったら問題があるかわかるでしょうか?"
  },
  {
    "index": "F26694",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, there are a couple of indications that R, will produce that that will give you the sense that there's something going on.",
    "output": "Rでは何種類かで示してくれてどんな感じのことが起こっているのか返してくれます。"
  },
  {
    "index": "F26695",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But, basically there are three main types of indications.",
    "output": "前にもお伝えしたかもしれませんが指標には基本的に3種類あります。"
  },
  {
    "index": "F26696",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's just an in, it could be a diagnostic message that something happened.",
    "output": "1つ目はmessageで大したことのないことを通知します。"
  },
  {
    "index": "F26697",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay? And and so the message won't stop your function from executing.",
    "output": "起こっていることを判定するようなメッセージに使われることがあります。"
  },
  {
    "index": "F26698",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It will just it will print.",
    "output": "どうでもよいことの時もあります。分かりましたか。"
  },
  {
    "index": "F26699",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There will be a message that gets printed to the screen and the execution of the function will continue and that's all.",
    "output": "この種類のメッセージは関数の実行を停止しません。ただ、出力されるだけです。"
  },
  {
    "index": "F26700",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The next level up is the warning.",
    "output": "メッセージが画面に出力されるだけで関数の実行は続けられてただそれだけのものです。"
  },
  {
    "index": "F26701",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "All right? So the warning is another indication.",
    "output": "さらにいえば関数を使うと標識がどんな影響を持つのか考えることになります。"
  },
  {
    "index": "F26702",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Usually, if you're writing a function, you are choosing, you're trying to figure out, okay, what's a message and what's a warning.",
    "output": "warningは予期していないことが起こった時の指標ですが必ずしも問題だとは限りません。また、意図的にwarningを無視したいことも多くありますが。"
  },
  {
    "index": "F26703",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "furthermore, or if you're using a function and you're figuring out well what does that mean, a warning is an indication that something unexpected happened it's not necessarily a problem, and may, and many times you, you, you explicitly want to ignore warnings but there's something unexpected happened.",
    "output": "想定外のことが起こったということです。"
  },
  {
    "index": "F26704",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the function was expecting one thing, and it got something slightly different.",
    "output": "関数が期待していた種類のものがあるとして少し違うものが渡されたような場合には全体を止めてしまうほどのことではないこともあります。"
  },
  {
    "index": "F26705",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It wasn't enough to kill the whole thing, But it was enough to kind of trigger this warning.",
    "output": "でも、warningを出力するには十分という場合です。"
  },
  {
    "index": "F26706",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So execution of the function will continue if a warning occurs but you'll get a message after the end, so once you'll get a message when the function completes execution.",
    "output": "warningが起こった場合でも関数の実行は継続しますが、終了時にメッセージが出力されます。"
  },
  {
    "index": "F26707",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when the function comes back, when you get your console back, that's when the warning appears.",
    "output": "関数の実行が終了するとメッセージが返されます。"
  },
  {
    "index": "F26708",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you won't get a warning in the middle of the execution.",
    "output": "関数が帰って来た時にはコンソールも返ってきてこの時にwarningが表示されます。"
  },
  {
    "index": "F26709",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "By default.",
    "output": "デフォルトではです。"
  },
  {
    "index": "F26710",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is, these are generated by the warning function, sorry I should say the messages are generated by the message function.",
    "output": "そして、messageはmessage関数で出力されます。"
  },
  {
    "index": "F26711",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then an error is the last stop, right?",
    "output": "では、最後のerrorにやってきましたね。"
  },
  {
    "index": "F26712",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So an error is a fatal problem.",
    "output": "errorは、致命的な問題の時に出力されます。"
  },
  {
    "index": "F26713",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This stops execution of the function.",
    "output": "関数の実行を停止してしまいます。"
  },
  {
    "index": "F26714",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and these, and error messages are produced by the stop function.",
    "output": "errorのメッセージはstop関数で出力します。"
  },
  {
    "index": "F26715",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So and then there's a general notion of a condition.",
    "output": "そして、conditionという概念が存在しています。"
  },
  {
    "index": "F26716",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which is it's the higher level concept.",
    "output": "これは、より高いレベルにある概念です。"
  },
  {
    "index": "F26717",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It can, all three of these things are, are conditions.",
    "output": "また、これら3種類もconditionです。"
  },
  {
    "index": "F26718",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you can, you can imagine that, and so it, you can create new conditions if you wanted to.",
    "output": "自分が希望するようなconditionを作れます。"
  },
  {
    "index": "F26719",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you have, and generally you're not going to be doing this at this level but if you have a, a, another type of of, condition that you want to, kind of trigger when something, when a special thing happens.",
    "output": "ただ、一般的にはこのようなレベルでは作成することはなく何か特別なことが起こった時に発生させたい条件があるときに使います。"
  },
  {
    "index": "F26720",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's not an error, it's not a warning, and it's not a message.",
    "output": "これは、errorでもwarningでもmessageでもありません。"
  },
  {
    "index": "F26721",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can create your own conditions and and using some of the functions that are available.",
    "output": "自分独自のconditionを作ることができこれには準備された関数をいくつか使います。"
  },
  {
    "index": "F26722",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So we won't be doing that now, but there is this notion of a condition and it's, it's generic.",
    "output": "今は実施しませんがconditionという概念があって汎用性のあるものです。"
  },
  {
    "index": "F26723",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is your basic warning, right?",
    "output": "さて、このようなものが基本的なwarningです。"
  },
  {
    "index": "F26724",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You take the log of a negative number.",
    "output": "負の数にlogを使うとこうなります。"
  },
  {
    "index": "F26725",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can't do that, right?",
    "output": "負のlogは取れませんよね。"
  },
  {
    "index": "F26726",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's a NaN, right?",
    "output": "でも、値は返ってきていてNaNとなっていますよね。"
  },
  {
    "index": "F26727",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Not a number.",
    "output": "Notanumberです。"
  },
  {
    "index": "F26728",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, but you also get this warning which occurred after the execution of the function.",
    "output": "ただ、warningも返ってきています。関数を実行した後に発生したものです。"
  },
  {
    "index": "F26729",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is your typical and, and sometimes that's fine.",
    "output": "これが代表的な例ですが構わなくてよいこともあります。"
  },
  {
    "index": "F26730",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because maybe you're taking a log of a bunch of numbers and maybe some of them are negative, but you don't really care and then you're going to make some sort of plot or something like that.",
    "output": "例えば、多くの数に対してlogを実行していて中には負の値があるかもしれませんが特に気にしなくてもよい場合でplotしたり、似かよったことを使用としているような場合です。"
  },
  {
    "index": "F26731",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so this is the kind of thing where you probably wouldn't want the function's behavior to just stop anytime it sees a negative number because sometimes these things just happen.",
    "output": "このように、負の数が混ざっていることは起こりがちなので負の数が出てきたらずぐにその場で関数の実行を止めないで欲しいと思うことがあります。"
  },
  {
    "index": "F26732",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You get negative numbers on occasion and you want to take the log anyway.",
    "output": "時々負の数があったとしてもlogを計算したいでしょう。"
  },
  {
    "index": "F26733",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so that's a warning.",
    "output": "これがwarningです。"
  },
  {
    "index": "F26734",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now I've got a little function here that I've created.",
    "output": "ここに短い関数を作ってみました。"
  },
  {
    "index": "F26735",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It checks to see if it's greater than zero.",
    "output": "とても単純なもので入力を受けて0を超える数かどうかを調べます。"
  },
  {
    "index": "F26736",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If it's greater than zero, it prints a message saying x is greater than zero.",
    "output": "0を超える場合には、xが0を超えていると示すmessageを出力します。"
  },
  {
    "index": "F26737",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If it's less than or equal to zero, you get a message saying that it's less than or equal to zero.",
    "output": "0以下の場合には0以下だと示すmessageを出力します。"
  },
  {
    "index": "F26738",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, and then last I want to mention this part here.",
    "output": "とても役立つ関数なのでみなさんもすぐに使うときがくるでしょう。"
  },
  {
    "index": "F26739",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So invisible is a function that that, that stops or I should say prevents auto printing.",
    "output": "最後のこの部分を説明しておきたいのですがinvisibleというものがあり、これは関数でautoprintを実施しないように実行するものです。"
  },
  {
    "index": "F26740",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So normally when you, if I if I'm at command line and I type a function, remember the, and I execute a function the, the function will return the last element of, that's in its function body, right?",
    "output": "通常の場合コンソールで関数名を入力して使った場合には関数が関数コード中の最後の要素を出力するように動作するのを覚えていますよね。"
  },
  {
    "index": "F26741",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if the last sum in this function body is like is numeric vector, it will return that numeric vector.",
    "output": "つまり、関数コードの最後の要素が数値ベクトルだった場合数値ベクトルを返します。"
  },
  {
    "index": "F26742",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now what happens is that if you just execute the function, that numeric venture, vector will be automatically printed to the console because it got returned by the function and R will use auto printing to just print that to the console.",
    "output": "どのようになるかというと関数を実行すると数値ベクトルが自動的にコンソールに出力されます。"
  },
  {
    "index": "F26743",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If I call invisible on the return object, then it will still return the same object but it won't, it wont do the auto printing.",
    "output": "しかし、もしinvisibleを返すオブジェクトに対して呼び出したら関数は同じようにオブジェクトを返しますがautoprintは行いません。"
  },
  {
    "index": "F26744",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can call the function and the object will be returned.",
    "output": "そして、関数を呼び出すとオブジェクトが返ってきます。"
  },
  {
    "index": "F26745",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So a, a, a, a, an example of a function like this is the load function.",
    "output": "このように動作する関数の例としてはload関数があります。"
  },
  {
    "index": "F26746",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So we haven't really used that much, but the load functions loads objects from what, from a saved work space, so it's like the opposite of of save, right?",
    "output": "それほど使う関数ではありませんがload関数を使うと保存されたワークスペースのオブジェクトを読み込みます。"
  },
  {
    "index": "F26747",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, but when, and when it loads the objects, it actually returns a character vector containing the names of all the objects that it loads.",
    "output": "ただ、読み込みを行った時には実は読み込んだオブジェクトの全ての名前を格納した文字ベクトルを返します。"
  },
  {
    "index": "F26748",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But that doesn't get printed to the screen and because, it's, it's returned invisibly.",
    "output": "これは、そのベクトルが画面には非表示で返されているためです。"
  },
  {
    "index": "F26749",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you have a function that returns something invisibly then the return, what happens is that the object that gets, that gets returned by that function doesn't get printed to the console and so sometimes you want that to happen and sometimes you don't.",
    "output": "しかしこの何かを非表示で返す関数を使うと関数が返しているオブジェクトはコンソールには表示されません。"
  },
  {
    "index": "F26750",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Sometimes it doesn't matter.",
    "output": "どちらでも構わないという時もあります。"
  },
  {
    "index": "F26751",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I've, I've just added this here just so I can, you know, tell you about it.",
    "output": "ここに示している例はこれを知ってもらうためのものです。"
  },
  {
    "index": "F26752",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's not particularly important.",
    "output": "特に重要というわけではありません。"
  },
  {
    "index": "F26753",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But actually, the print, actually I should say that any print function here actually all print functions will return the string that it prints.",
    "output": "ですが、どんなものでもprint関数は文字列を出力して返します。この線の勾配になります。"
  },
  {
    "index": "F26754",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you say print X, what gets returned is a string, X.",
    "output": "しかしこの例えば、print(x)と指定したら文字列のxが返されます。"
  },
  {
    "index": "F26755",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you don't actually see that, because it, the, the, the, the return value is, is, is returned invisibly.",
    "output": "いかし、実際にはこれは表示されません。返り値は、非表示で返されているためです。"
  },
  {
    "index": "F26756",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so, so, so you could assign the output of print to, like, an, an object.",
    "output": "このため実はprintの出力としてオブジェクトも指定できます。"
  },
  {
    "index": "F26757",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Generally speaking, you never do that.",
    "output": "でも概して、そんなことはしません。"
  },
  {
    "index": "F26758",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, anyway. That was a little diversion on invisible.",
    "output": "さて、少しinvisibleから外れてしまいました。"
  },
  {
    "index": "F26759",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here I, I create my printmessage function, and I call printmessage(1), great.",
    "output": "次に、ここにmyprintmessage関数を作って、printmessage(1)を呼びました。"
  },
  {
    "index": "F26760",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "No problem.",
    "output": "問題は起こりません。"
  },
  {
    "index": "F26761",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I get the message x is greater than 0.",
    "output": "\"xisgreaterthanzero\"がメッセージとして戻ってきます。"
  },
  {
    "index": "F26762",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So and so what does printmessage return, just before I go on?",
    "output": "しかしこの進む前に、printmessageが何を返したか見てみます。"
  },
  {
    "index": "F26763",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so actually, if I had assigned print, the output or printmessage to some other object, it would be the number one in this case, right.",
    "output": "もし仮に、他のオブジェクトの出力にprintmessage(1)を代入していたら値1を返したはずです。"
  },
  {
    "index": "F26764",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Even though it didn't printout the number one anywhere.",
    "output": "ですが、値1はどこにも出力されません。"
  },
  {
    "index": "F26765",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now, I'm going to pass it directly an NA, right.",
    "output": "さて、それではNAを直接渡して実行します。"
  },
  {
    "index": "F26766",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and, and we're going to get an error here because you can't make the comparison if NA was greater than zero, it's not defined, right.",
    "output": "ここではエラーが起こります。なぜならNAと0超を比較できないからです。"
  },
  {
    "index": "F26767",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so it doesn't know what to do it can't move on.",
    "output": "何を処理するべきか分からず継続することができません。"
  },
  {
    "index": "F26768",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It, and so it has to error out.",
    "output": "このためエラーを出力しなければなりませんでした。"
  },
  {
    "index": "F26769",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, so you get an error saying that in this expression if X is greater than zero the missing value, you, you have a missing value where, so it was expecting true or false and instead it got NA, which is neither true or, nor false.",
    "output": "もし、xが0を超える数の場合にはそう告げるメッセージが返されます。また、欠損値の場合でもそうなります。"
  },
  {
    "index": "F26770",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So something happened there that's wrong.",
    "output": "さてここでは異常な何かが起こりました。"
  },
  {
    "index": "F26771",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, I'm going to to fixed this problem so to speak.",
    "output": "では、いわゆる問題解決をこれからしてみます。"
  },
  {
    "index": "F26772",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I've got a new function print message two and the first thing we are going to do is I'm going to check to see if the argument is NA, right?",
    "output": "printmessage2を作りました。この関数ではまず、引き数がNAかどうかを調べます。"
  },
  {
    "index": "F26773",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now I if it's NA, I'm going to print this message, right.",
    "output": "こうして、もしNAだったらメッセージを出力するようにします。"
  },
  {
    "index": "F26774",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's not going to produce an error, it's just going to print, print a different message.",
    "output": "さてこれなら、今度はエラーを起こすことがなくなります。また別のメッセージを表示するようになります。"
  },
  {
    "index": "F26775",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this function's going to print one of three messages for now and then it's going to return its argument, invisibly.",
    "output": "関数は、ひとまずは、次の3つのメッセージのうちどれかを出力するようになります。続いて、引数を非表示で返すようになります。"
  },
  {
    "index": "F26776",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when I call this, so now what, so what's something that might typically happen?",
    "output": "つまり、この関数を今呼び出せばどんなことが起こるでしょうか?"
  },
  {
    "index": "F26777",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now I'm going to printmessage on x, and I'm getting x as a missing value, right?",
    "output": "-1のlogを計算して結果をxに代入しようとしています。"
  },
  {
    "index": "F26778",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, now that, now there's no error there but it's, it may be unexpected, right?",
    "output": "ここでは、停止してしまうことはありません。"
  },
  {
    "index": "F26779",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because maybe I, I, I, maybe I thought that, okay, well the thing that I'm inputting into printmessage2 is, is like some positive number, so I thought I was going to get the message X is greater than zero.",
    "output": "printmessage(x)を実行するとxが欠損値として返されるはずです。さて、今では、エラーが起こっていませんが期待している値ではないですよね?"
  },
  {
    "index": "F26780",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But instead I'm getting this message x is a missing value.",
    "output": "というのもここでprintmessage2に入力しようとしているのは正の数なのでメッセージとしては「Xisgreaterthanzero」が出力されると考えていました。"
  },
  {
    "index": "F26781",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what happened right?",
    "output": "何がおこったでしょうか?"
  },
  {
    "index": "F26782",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So um,this is the kind of thing where where what you thought you were going to get, where your expectation is different from actually kind of what the function produced, right?",
    "output": "ここで起こったようなことが期待していた値が返ってこなかった場合です。期待していたものに対して関数が違った値を返しました。"
  },
  {
    "index": "F26783",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so all I'm trying to say here is how do you know when something's gone wrong, right?",
    "output": "今回説明したかったのは何かが正常に動作しないときにどうすればわかるのかです。"
  },
  {
    "index": "F26784",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And sometimes it's easy to tell like in the case where you got the error message.",
    "output": "そして、エラーメッセージが表示される場合はかえって簡単にわかることがあります。"
  },
  {
    "index": "F26785",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But sometimes it's not easy to tell because here there's no error but it's not exactly what it, what I was expecting, okay.",
    "output": "しかし、必ずしもいつも分かりやすいわけではなくエラーが発生せず、何が正しいのか分からないこともあります。"
  },
  {
    "index": "F26786",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's when you, when you're looking at a function, you think something's gone wrong, there's a couple questions you want to ask yourself.",
    "output": "もし、関数を確認していて何かがおかしい時にはいくつか確認しておくべき点があります。"
  },
  {
    "index": "F26787",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "To see whether there something actually is wrong, or maybe, or is there is something we call user error, okay?",
    "output": "本当に何かがおかしくなっているのかどうかもしかしたら、ユーザーの使い方が問題ということもあります。"
  },
  {
    "index": "F26788",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what was your, so the thing about when you're kind of thinking about, when you're debugging a function you want to answer all these questions as you're going through your process here.",
    "output": "関数をデバッグをするときには手順を踏みながらこれらのすべての点を確認していきます。"
  },
  {
    "index": "F26789",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what was the input that you put?",
    "output": "どんな入力をしたのか?"
  },
  {
    "index": "F26790",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What, what did you feed into that function?",
    "output": "何を関数に対して引き渡したのか?"
  },
  {
    "index": "F26791",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, not what you thought you fed into that function, what did you actually into that function?",
    "output": "関数に渡したと「思っている」ものではなく実際にその関数に渡したかを確認します。"
  },
  {
    "index": "F26792",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, so I thought I fed that function a positive number but in reality I fed it a, a NaN.",
    "output": "今回の例では、正の数を渡したと思っていましたが実際のところはNaNを渡していました。"
  },
  {
    "index": "F26793",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Alright, so how did you call the function?",
    "output": "そして、どうやって関数を呼んだのか?"
  },
  {
    "index": "F26794",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What were you expecting?",
    "output": "何を想定していたか?"
  },
  {
    "index": "F26795",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you, and this is important when you're asking someone for help, or you're asking someone a question.",
    "output": "誰かに助けてもらう時や質問するときに大切なことです。"
  },
  {
    "index": "F26796",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can't just, it's not that useful to say oh the printmessage2 to function didn't work.",
    "output": "ただ単に「え~printmessage2が上手く動作しないんです」とつたえるだけでは役に立ちません。"
  },
  {
    "index": "F26797",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "How do you know it didn't work, alright?",
    "output": "「どうして上手く動作していないと思う?"
  },
  {
    "index": "F26798",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "That's how you know it doesn't work.",
    "output": "このようにして、正常に動作していないことが分かります。"
  },
  {
    "index": "F26799",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then, someone could say, well you shouldn't have expected this, because that's not what that function does, or you know, or something like that.",
    "output": "そうすると相手は、「その関数はそう動作しないからAを期待してはだめです」と教えてくれるかもしれません。"
  },
  {
    "index": "F26800",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But or you can say, okay, here's the problem.",
    "output": "または、ここが問題なんですとつたえることもできます。"
  },
  {
    "index": "F26801",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what were you were expecting is then very important to be able to articulate at least to yourself and maybe to other people.",
    "output": "このため、何を期待しているのかは他の人や自分自身に明示できるようにするのに非常に重要です。"
  },
  {
    "index": "F26802",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What was the output that you were expecting, were the were you expecting some message that you didn't get?",
    "output": "メッセージを期待しているのに出力されてこない、だったり違う結果や、数値結果などを期待している、ということです。"
  },
  {
    "index": "F26803",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what we're expecting, and then of course, what did you actually get?",
    "output": "まとめると、何を期待していてもちろん、何が返ってきているかです。"
  },
  {
    "index": "F26804",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "How do, how did what you actually get differ from what you're expecting?",
    "output": "返ってきているものがどんな点で期待と違うのか?"
  },
  {
    "index": "F26805",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then of course were expectations correct in the first place?",
    "output": "そして、期待しているものがそもそも正しいのか?"
  },
  {
    "index": "F26806",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, if you were expecting something that was, that was in fact incorrect then your notion of what is correct and incorrect is now being challenged, right?",
    "output": "というのは、期待しているものがそもそも正しくなかった場合には何が正しく、何が正しくないかが再度考える必要が出てきますよね?"
  },
  {
    "index": "F26807",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So an important, and another key aspect of debugging of course is you have to be able to reproduce the problem, right?",
    "output": "そして、デバッグで重要で鍵となる他の側面は問題が制限可能にする必要があるということです。"
  },
  {
    "index": "F26808",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because if you can never reproduce the problem, you'll never have a chance in figuring it what went wrong, because it only happened that one time, right?",
    "output": "というのは、もし問題を再現できない場合には一度しか起こっていないから何がおかしかったのか検討することができません。"
  },
  {
    "index": "F26809",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this is very, very, very, very important.",
    "output": "このため、再現することは非常に果てしなく重要です。"
  },
  {
    "index": "F26810",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And unless it's a very I mean unless it's like the most basic problem.",
    "output": "もし、非常に根本的な問題でない限り一体どんな問題だったかさえ言えるものではありません。"
  },
  {
    "index": "F26811",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I can't even say what that would be.",
    "output": "というのも、再現できれば問題が起こったのはこうやったと示すことができます。"
  },
  {
    "index": "F26812",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You have to be able to reproduce the problem.",
    "output": "というのも、ほとんどの人がエラーメッセージを見ただけでは何を意味するのか、どこに原因があるのかどうしてそうなったのか分かりません。"
  },
  {
    "index": "F26813",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You know, because you have to be able to show someone this is how I created the problem.",
    "output": "このため、エラーや問題にどんな手順で遭遇したのかはとても重要です。"
  },
  {
    "index": "F26814",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because most people are not going to know if you just show them the output of the error message, or what that means, or where it came from or how you got there.",
    "output": "問題を再現する方法が分かっている必要があります。"
  },
  {
    "index": "F26815",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, so the process by which you encounter the error or the problem is very important.",
    "output": "例えば、問題があったとします。"
  },
  {
    "index": "F26816",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you, you have to know how to reproduce the problem.",
    "output": "乱数を生成するときにはseedを設定する必要があります。"
  },
  {
    "index": "F26817",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are some problems, and so when I was talking about, for example, when in random number generation you need to set the seed because it may be that only under a certain sequence of random numbers that a problem occurs.",
    "output": "それは乱数が特定の順序になっているときだけに発生する問題かもしれないためです。"
  },
  {
    "index": "F26818",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, if you're not setting the seed, you will never be able to reproduce that problem, because every time you run it, it's going to be a different set of random numbers.",
    "output": "もし、seedを設定しなかったら問題を再現することは不可能になります。実行するたびに、乱数の組が異なるためです。"
  },
  {
    "index": "F26819",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There are other types of problems that can be hard to reproduce.",
    "output": "他には、再現が困難な問題の種類があります。"
  },
  {
    "index": "F26820",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They, and, but they're more complex.",
    "output": "例えば、network関数を書いている場合で並行処理プログラムのような場合にはこれらの問題は再現が困難なことがよくあります。"
  },
  {
    "index": "F26821",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "They're usually, for example, if you're writing networking co, networking functions, you know, something, so you're doing like parallel programming, often, those kinds of problems can be very hard to reproduce because they depend on activity in other machines and things like that.",
    "output": "というのも、他の機械での動作などに依存しているためです。"
  },
  {
    "index": "F26822",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Things that, if you're getting code over the internet, and so if you're getting data over the internet, and your code is kind of interacting with things in the web, that can, problems there can sometimes be hard to reproduce because servers on the other side may change or whatever.",
    "output": "他にも、インターネットでコードを入手してインターネットでデータを取得してネット上のものと相互に作用しながら動作するコードだと問題は再現が困難なことがあります。"
  },
  {
    "index": "F26823",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you, you can't always freeze things in time.",
    "output": "関連するものを常に一定の固定された状態にしておくことはできません。"
  },
  {
    "index": "F26824",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If it's something that's just happening on your computer it's usually going to be easier to reproduce the problems.",
    "output": "もし、自分自身のコンピューターで全てを行っていたら問題を再現するのは概して簡単です。"
  },
  {
    "index": "F26825",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, unless, I mean only under very esoteric circumstances, circumstances will it be hard to reproduce a problem on your computer.",
    "output": "関連する環境が、非常に特殊で深遠な状況でない限りは自分のコンピューターで再現するのは非常に難しいです。"
  },
  {
    "index": "F26826",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "so, what are the tools that R comes with to help you to debug a program?",
    "output": "プログラムのデバッグに役立つRに組み込まれたツールは何でしょうか?"
  },
  {
    "index": "F26827",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, so there are five basic functions and a few associated ones that I want to talk about.",
    "output": "このために5つの基本関数と関連する関数を説明します。"
  },
  {
    "index": "F26828",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But the first most basic one is the traceback function.",
    "output": "まずは最も基本的なtraceback関数です。"
  },
  {
    "index": "F26829",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now, one thing I want to say, you can get pretty far in R without using any of these functions.",
    "output": "ひとつお知らせしておきたいのですがここで紹介する関数を使わなくてもRでは多くのことができます。"
  },
  {
    "index": "F26830",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I actually, I worked with R for like six years and didn't even know these functions existed so, and So, I'm, I'm not saying that you necessarily have to, that you will always be using these functions, but they're actually quite handy in some, some cases.",
    "output": "私も6年間Rを使っていましたがこれらの関数の存在も知りませんでした。常にこの関数を使って行くというわけではありませんが時として、非常に役立つものなのです。"
  },
  {
    "index": "F26831",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, the traceback function, what does is it prints out what's called the function call stack.",
    "output": "traceback関数で行えるのは関数のコールスタックというものを出力できます。"
  },
  {
    "index": "F26832",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you know, typically when you call a function, you call, you call the function and that function calls another function, and then that function calls another function, and it's like, and then you're four functions deep, and then maybe the error happens way down here, right?",
    "output": "関数を呼んだ時にはその呼んだ関数が別の関数を呼んでさらにその関数が関数を呼んだときには4階層の深さで関数を呼んでいてそこでエラーが起こっているかもしれません。"
  },
  {
    "index": "F26833",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, traceback just tells you how many function calls you're in and where the error occurred, right?",
    "output": "このためtracebackを使うとどの深さの呼び出し関数でエラーがどこで起こっているかが分かります。"
  },
  {
    "index": "F26834",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you can try to identify where in the sequence of function calls the error occurred.",
    "output": "つまり、エラーが起こっている関数を呼び出している順番がわかります。"
  },
  {
    "index": "F26835",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Otherwise, all you know is that you called one function and then an error occurred.",
    "output": "これがないと、ある関数を呼んだらエラーが起こったことしか分かりません。"
  },
  {
    "index": "F26836",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But you've no idea, you know, how many other functions are called underneath.",
    "output": "どれだけの他の関数が配下で呼び出されているか分かりません。"
  },
  {
    "index": "F26837",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the traceback function will tell you that, and I'll give you an example.",
    "output": "それがtraceback関数を使うと分かります。"
  },
  {
    "index": "F26838",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the debug function is probably the handiest function.",
    "output": "debug関数は、恐らく最も役に立つ関数です。"
  },
  {
    "index": "F26839",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It, what it does is it, as you give it a function as an argument, and it flags that function for debug mode.",
    "output": "この関数を使うときに関数を引数にして渡すとその関数をデバッグモードに指定します。"
  },
  {
    "index": "F26840",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, what debug means, that anytime you execute that function, anytime, anywhere even if another function calls it, it will, it will halt, it will suspend execution of the function at the first line, and then you can, in what's called a browser.",
    "output": "ではデバッグとはなんでしょうか指定した関数を実行すると他の関数に呼ばれたりしてもどこでもいつでも動作を停めて、その関数の1行目で停止させることができます。"
  },
  {
    "index": "F26841",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'll show you how this works and then you can step through the function line by line.",
    "output": "その上でbrowserと呼ばれる関数を呼ぶと一行一行を順次指定しながら実行できます。"
  },
  {
    "index": "F26842",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then you can see you can execute one line, one expression at a time, I should say inside the function.",
    "output": "どうなるか後程お見せします。このようにすることで関数の中の1演算毎に実行できます。"
  },
  {
    "index": "F26843",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you can try to pinpoint, okay, if there's a specific line of code when the error occurs, you'll be able to find out which line that is, okay.",
    "output": "こうすることで、エラーが起こった時にコードのどこで起こっているかその一点を探し出すことができます。"
  },
  {
    "index": "F26844",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The browser function's relativity to debug in the sense that you can stick the browser, the browser, of, of call to the browser function anywhere in your code, and then when that, when that line of code gets hit, when that browser call gets hit, the execution of the function will suspend, okay?",
    "output": "似ている点はbrowser関数をコードのどこにでも差し込める点です。"
  },
  {
    "index": "F26845",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then you can, and then you can go line by line from there.",
    "output": "この指定した行に到達したときにはbrowserで指定した行の実行が停止されます。"
  },
  {
    "index": "F26846",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So sometimes, for example, you don't, the debug function by the, will always start the, start the debugging, start the browser right at the top of the function.",
    "output": "例えば、違いとしてdebug関数の場合はdebugを必ず最初の行から始めてbrowserを関数の最初から始めます。"
  },
  {
    "index": "F26847",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But sometimes, you kind of want to run through the beginning and then stop it somewhere in the middle.",
    "output": "しかし、最初の部分はそのまま実行して中間のどこかで停止したいという時もあります。"
  },
  {
    "index": "F26848",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, so the browser function allows you to stick the browser call anywhere in your code and then it will run the function up until that point and then suspend it.",
    "output": "browser関数を使うとbrowser呼び出しをコードのどこからでも出来て関数をその場所まで実行して動作を停止します。"
  },
  {
    "index": "F26849",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so that, so there, those two are obviously related.",
    "output": "この点で、この2つの関数に関連性があるのは明確です。"
  },
  {
    "index": "F26850",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The trace function allows you to insert debugging code into a function without actually editing the function itself.",
    "output": "trace関数を使うと関数のコードを変更することなくデバッグのコードを関数へ入れることができます。"
  },
  {
    "index": "F26851",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "and, and this is handy if you are debugging someone else's code.",
    "output": "これは、他の人のコードをデバッグするのに役に立ちます。"
  },
  {
    "index": "F26852",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, so for example, there's code in the package or the, and you can't easily edit the code in that package, or there's code in the base R itself or there's you know, something like that.",
    "output": "では、例を挙げますが特定のパッケージの中にコードがあってそのコードを変更できなかったりRそのもののコードにデバッグしたい箇所があることがあります。"
  },
  {
    "index": "F26853",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you don't want to go and edit that code, because you can't find the file, or whatever.",
    "output": "このファイルの格納先が分からないなどの理由からこのコードは変更したくありません。"
  },
  {
    "index": "F26854",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, you can use the trace function, just insert a little snippet of code, and using that snippet is just a call to the browser function.",
    "output": "こんな時にはtrace関数を使ってデバック用のスニペットを入れます。このスニペットは、browser関数を呼ぶだけのものです。"
  },
  {
    "index": "F26855",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then and, and then, and then you can kind of browse through that function, and then you can turn the trace off, and it's, and the function's back to normal.",
    "output": "こうすると、browseでその関数を一旦順次実行してからtraceをオフにして、関数の残りの部分を通常通り実行できます。"
  },
  {
    "index": "F26856",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that, and then the recover function is the last function.",
    "output": "続いて、recover関数は最後の関数です。"
  },
  {
    "index": "F26857",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's actually, I should put it up here, it's related to the traceback.",
    "output": "この関数はtraceback関数と関連性があるのでここで述べることにしました。"
  },
  {
    "index": "F26858",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What recover does, so normally when you get an error you get, you usually get a message saying what the error was and then the, and then you get, and then the console kind of comes back to you.",
    "output": "ここになって初めてコマンドをさらに入力し様々なことを行って確認します。"
  },
  {
    "index": "F26859",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But execution of that function stops and you get the console back.",
    "output": "しかし、関数の実行は終了しコンソールが戻ってきています。"
  },
  {
    "index": "F26860",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "What we were, that's the default behavior.",
    "output": "これがデフォルトの挙動です。"
  },
  {
    "index": "F26861",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can change that default behavior by, by, by creating what's called, or setting what's called an error handler.",
    "output": "このデフォルトの挙動をエラー処理と呼ばれる処理で変更することが可能です。"
  },
  {
    "index": "F26862",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And recover is an error handler function which means that any time you encounter an error, anywhere in a function, rather than getting the console back the R interpreter will stop the execution of that function right where the error occurred, and will kind of freeze it there.",
    "output": "recoverは、エラー処理関数です。何ができるかと言うとエラーが生じたら関数のどこで起こっていてもコンソールに戻さずに、Rのインタープリターがその関数の処理をエラーが起こった箇所で停止しそこで待ち状態になります。"
  },
  {
    "index": "F26863",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then it will print out the function call stack, so you'll see how far deep you're in, and then you can go, you can kind of jump around to the different function calls to see, and to look around.",
    "output": "そして、関数のコールスタックを出力しどの階層にいるのかが分かります。"
  },
  {
    "index": "F26864",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now you're in the browser, and you can look around in the different function calls to see kind of, okay, what happened here, and happened here, what did the, how did data get corrected here and things like that.",
    "output": "その上で、該当箇所に行き呼び出した関数を自由に確認し見て回ることができます。"
  },
  {
    "index": "F26865",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's a little hard to talk about in the abstract so I'll give you the example.",
    "output": "そして、browser内にいるので複数の関数を見てある箇所では何が行われているか別の箇所では何が行われていてデータがどこで壊れてしまったかなどが確認できます。"
  },
  {
    "index": "F26866",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So there's also, so these functions kind of allow you to pick apart the kind of the details, the lines of code and try to figure out, okay, nail down where exactly the the bug may be.",
    "output": "抽象的に説明するのは少し難しいですが、例を出します。"
  },
  {
    "index": "F26867",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can also just put things like print, and cat, statements in your code to print out things.",
    "output": "これらの関数を使うことで事態の詳細が分かりコードの行が分かり実際にバグがありそうな箇所を絞り込んだり、特定しようとすることができます。"
  },
  {
    "index": "F26868",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you want to know, well what's the value of x at line 42, you can just print it out, right, and then see what it is.",
    "output": "xの値がどうなっているのかを42行目で知りたい場合出力すれば値が分かります。"
  },
  {
    "index": "F26869",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can get a lot of mileage out by just putting in print statements.",
    "output": "ただprint命令を入れるだけで多くの利用価値があります。"
  },
  {
    "index": "F26870",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The only problem with print statements and things like that, is that you often you'll put in like a lot of these, it's a long piece of code, you'll put in like 40 print statements.",
    "output": "print命令の唯一の問題はこのようなやり方の場合長いコードの中のあちこちに入れてしまいがちだということです。"
  },
  {
    "index": "F26871",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I go back through and, like, delete all the print statements.",
    "output": "そして、やっとバグを取り除き終わって全てのprint命令を遡って確認し削除します。"
  },
  {
    "index": "F26872",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that's, that can be a little bit kind of a pain, but you know, there's nothing terribly wrong with it.",
    "output": "これはちょっと煩雑なものですがこのやりかたには付いて回るものです。"
  },
  {
    "index": "F26873",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Some people I've, I've, that I've worked with are actually against, they like, oppose the use of debugging tools.",
    "output": "これまで私が一緒にやってきた人の中にはデバッグツールを使うことに反対している人もいます。"
  },
  {
    "index": "F26874",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I've ever software engineer company many years ago and there was an engineer there who was, he, he was opposed to any debugging tools.",
    "output": "随分前ですが、私はソフトウェア会社で働いていてどんなデバッグツールにも反対しているエンジニアがいました。"
  },
  {
    "index": "F26875",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "He'd never used a debugger.",
    "output": "デバッガを一切使ったことがない人でした。"
  },
  {
    "index": "F26876",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "All he did was print and you know, print statements basically.",
    "output": "彼はprintを使っていてそう、基本的にprint命令です。"
  },
  {
    "index": "F26877",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And because he thought that the use of the debugger encouraged bad habits, right?",
    "output": "彼はデバッガーを使うことで、良くないくせを助長すると考えていたからです。"
  },
  {
    "index": "F26878",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I've seen it happen in other places.",
    "output": "様々なところで助長された例を見てきました。"
  },
  {
    "index": "F26879",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If there's a problem, I'll just run it through the debugger.",
    "output": "ただコードを書いてどう動作するかなどは考えず実行してみて問題が起こったらデバッガーで見ればいいよね。"
  },
  {
    "index": "F26880",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, and I'll just step through line by line to find out what the problem was.",
    "output": "順番に行ごとに実行していって問題がなにかを見つけるからいいよ。"
  },
  {
    "index": "F26881",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and it encourages kind of a sloppy code development process because you know that if there's a problem you can just step through execution with the debugger.",
    "output": "こうなってしまうと雑な感じのコード開発プロセスを助長してしまいます。"
  },
  {
    "index": "F26882",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I have to say, that's probably not a good habit to get into.",
    "output": "というのも、問題があったらデバッガーの順次実行で見ればいいと知っているからです。"
  },
  {
    "index": "F26883",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's probably better to think about your code, write it in, in a kind of intelligent way and then if there's a problem resort to the debugger.",
    "output": "良くないやり方をするのは多くの場合良くないと言わざるをえませんがまずはコードのことを考えて合理的な方法でコードを書いてもし問題が起こったら、デバッガーを最終手段にするのが良いでしょう。"
  },
  {
    "index": "F26884",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But I use the debugger all the time.",
    "output": "ですが、私はデバッガーをいつも使っています。"
  },
  {
    "index": "F26885",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I use the browser function, I use all these functions all the time.",
    "output": "browser関数を使ったり他の関数もいつも使っています。"
  },
  {
    "index": "F26886",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So maybe I just have bad habits but that, that memory is burnin' my mem, mem, burnin' my brain for some reason.",
    "output": "その意味では私にも悪いくせがあるのかもしれませんがこの記憶がなぜか頭に焼き付いて離れません。"
  },
  {
    "index": "F26887",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Let's take a look, I'll just give you a couple examples and then I'll move to the actual just so you can see things.",
    "output": "では見ていきますが何個かまず例を挙げたあとで実際のRに移って実際に見ていただきます。"
  },
  {
    "index": "F26888",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here's the mean. I took the mean of x, x doesn't exist.",
    "output": "xの平均と指定していますがxは存在していません。"
  },
  {
    "index": "F26889",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if you take the mean of something that doesn't exist you're clearly going to get an error.",
    "output": "存在していないものの平均を求めようとするとエラーが確実に発生します。"
  },
  {
    "index": "F26890",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Here it says so you get the error message this is produced by the stop function.",
    "output": "このようにエラーが起こりstop関数で出力を行っています。"
  },
  {
    "index": "F26891",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I call the traceback. It tells me where the error occurs.",
    "output": "traceback関数を呼んでエラーがどこで起こっているか調べます。"
  },
  {
    "index": "F26892",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well the error just occurs like right away at the top of the mean function.",
    "output": "mean関数の最初の部分でエラーが起こっています。"
  },
  {
    "index": "F26893",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that, so the function mean didn't actually call any other functions, right because it couldn't because it couldn't figure out, it couldn't evaluate your argument.",
    "output": "つまり、mean関数は他の関数を呼んでいなかったのが分かります。"
  },
  {
    "index": "F26894",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so, that's where the error occurs so, you know that may or may not be.",
    "output": "まずは、渡された引数を評価できなかったためです。"
  },
  {
    "index": "F26895",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Many times that's just that is where the error will occur at the top level function. so, that in that case the trace-back's not very handy.",
    "output": "ここでエラーが起こっていますが役立つかどうかは分かりません。"
  },
  {
    "index": "F26896",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "One thing that's useful to, that, that the trace-back is useful for, is for when you're communicating with someone else over email, for example, me.",
    "output": "関数の最初の呼び出しレベルでエラーが起こるのは頻繁に起こることです。こんなときにはtraceback関数はそれほど役に立ちません。"
  },
  {
    "index": "F26897",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Its very useful if we just say use the trace-back, when I get after I get the error.",
    "output": "tracebackが役に立つ場合というのは誰かにメールで連絡を取り合うときに例えば私と連絡するときにどんな関数でもいいですがエラーが起きたと私に連絡してきたとしてこれがエラーが出た時のtraceback出力ですとと伝えてくれればとても役立ってくれます関数の呼び出し一覧はどうなっているかなと、見ることができます。"
  },
  {
    "index": "F26898",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then I can see okay, wha, what was the list of function calls, I mean.",
    "output": "バグの近くのtracebackがこんな風に短くなければです。関数でのエラーを誰かに伝える時にはtracebackを出力するだけで非常に役に立ってくれます。"
  },
  {
    "index": "F26899",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Unless the trace-back looks like this, then near dud bug, but when you're communicating with someone about an error and a function, its very handy just to print out the trace-back, so that they can seek out where the error occurred in the hierarchy of functions.",
    "output": "関数の階層のどこでエラーが起こっているのか探すことができるからです。"
  },
  {
    "index": "F26900",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You have to call traceback immediately after the error occurs.",
    "output": "tracebackはエラーの直後に呼ぶ必要があります。"
  },
  {
    "index": "F26901",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you execute some other code and then call traceback it's not going to work, right?",
    "output": "他のコードを実行してからだとtracebackを呼んでも上手く動作しません。"
  },
  {
    "index": "F26902",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Because the traceback will only give you the most recent error.",
    "output": "tracebackは最後のエラーだけを表示してくれるからです。"
  },
  {
    "index": "F26903",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you execute another function and there's no error well then there's no traceback to give because there's no error in the, in the next.",
    "output": "他の関数を実行してエラーが無かったとしたらtracebackで出力する情報はありません。後続の実行ではエラーがなかったためです。"
  },
  {
    "index": "F26904",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you have to you've to call it right away.",
    "output": "このため、直後に呼ぶ必要があります。"
  },
  {
    "index": "F26905",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Here's a slightly more interesting trace back so I call it LM, which is the linear modeling function.",
    "output": "次の例は少しだけ興味深いtraceback出力です。lmを呼んでいます。"
  },
  {
    "index": "F26906",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So y tilda x. They don't exist.",
    "output": "y~xを指定しますがこれは存在していません。"
  },
  {
    "index": "F26907",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so I'm getting an error that says y cannot be found.",
    "output": "このため、発見できない旨のエラーが出ています。"
  },
  {
    "index": "F26908",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Were to that error occur?",
    "output": "エラーはどこで起こったのでしょうか?"
  },
  {
    "index": "F26909",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Well actually it occurred several levels deep actually. So here I called L M and the L M arrow function is a little funky.",
    "output": "ここでは、lmを呼んでいますがlmは少し変わっています。"
  },
  {
    "index": "F26910",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I don't expect you to understand all this but L M called e val on what's called a mono frame.",
    "output": "これを全て理解されるなんてことはないでしょうがlmは、いわゆるmodelframeに対してevalを呼んでいます。"
  },
  {
    "index": "F26911",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then that, it's then and then that called e val again which called the model frame function which called the model frame default.",
    "output": "そして、さらにそれがevalを呼んでいます。それがmodel.frame関数を呼んでそれがさらにmodel.frame.defaultを呼んでいます。"
  },
  {
    "index": "F26912",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Model frame is a generic function that called a model frame default function.",
    "output": "model.frameは総称的関数でmodel.frame.default関数を呼んでいます。"
  },
  {
    "index": "F26913",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Then it called the eval function again on this. And then, the and at the seventh level, here.",
    "output": "次に、その結果に対してeval関数を呼んでいてさらに進んで7階層目でエラーが起こっています。"
  },
  {
    "index": "F26914",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So and it basically it occurred because it tried to evaluate my formula here.",
    "output": "しかしこの私の式を評価しようとしてエラーが発生しています。"
  },
  {
    "index": "F26915",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Which is y tilda x.",
    "output": "y~xの式です。"
  },
  {
    "index": "F26916",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And and it couldn't.",
    "output": "そして評価できませんでした。"
  },
  {
    "index": "F26917",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And when it evaluated the formula it couldn't find the actual value of y and x.",
    "output": "式を評価したときにyもxも実際の値が見つからずこのため、ここでエラーが起こりました。"
  },
  {
    "index": "F26918",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So printing out something like this can be very useful.",
    "output": "このような情報の出力がとても役立ちます。"
  },
  {
    "index": "F26919",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "If you're trying to get help from someone else and you're, and you're, and you're kind of trying to debug your function together, okay?",
    "output": "例えば、誰かに助けてもらったり関数を一緒になってデバッグするような時にです。"
  },
  {
    "index": "F26920",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so that's the traceback, there.",
    "output": "これがtracebackでした。"
  },
  {
    "index": "F26921",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The debug function doesn't really work well in the static format like this, but I'll show, I'll just show you that, but But, basically I could debug the l m, so you can debug any function, doesn't matter if you wrote it or not.",
    "output": "lmをdebugするともちろん、自分のコードでなくてもどんな関数でもデバッグできますがlmもdebugできてlm(y~x)を呼び出すと「debuggingin」の表示がされて呼び出し時の命令が表示されます。"
  },
  {
    "index": "F26922",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I can debug the l m function, and now when I call l m y fill the x it you get this debugging in and I'll give you the the expression that you called.",
    "output": "そのため、実際にはこれよりもたいへん長いコードが表示されますが、途中で切りました。"
  },
  {
    "index": "F26923",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And I'll first thing it will do is it will print out the entire code of the function, so this is a lot longer than so I just I just put I just cut cut it off in the middle here but the first thing it does is it prints out the whole function body code okay.",
    "output": "ただ、debugがまず行うのは関数の本体コードを出力します。"
  },
  {
    "index": "F26924",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then you get this little prompt at the bottom here the browse so now you're in what's called the browser.",
    "output": "browse関数を表示してbrowserというものの中にいる状態になります。"
  },
  {
    "index": "F26925",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And the browser is just like your r workspace, actually.",
    "output": "browserは、まるでRのワークスペースのように使えます。"
  },
  {
    "index": "F26926",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "you, you can think of it like a work space embedded within a work space.",
    "output": "ワークスペース内で動くワークスペースと思ってもよいです。"
  },
  {
    "index": "F26927",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Are, sorry, so the environment of that workspace in the browser is your function environment.",
    "output": "そこでしかしながらここ、browser内でのワークスペース環境は呼び出している関数の環境です。"
  },
  {
    "index": "F26928",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the things that are in your function are what are in your environment.",
    "output": "関数の中のものがこの環境には存在します。"
  },
  {
    "index": "F26929",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So at, at the very top of this function you just actually, there's nothing in your environment except for the function arguments, right.",
    "output": "関数の一番最初では環境にはほとんど何も無く関数の引数部分しかありません。"
  },
  {
    "index": "F26930",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So what are the function arguments? Well, the first one is the formula?",
    "output": "では、関数の引数部分には何があったでしょうか?"
  },
  {
    "index": "F26931",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So I have a formula in my environment which is this y tilda x, but that's it.",
    "output": "このため、環境にはy~xという式がありますがそれだけです。"
  },
  {
    "index": "F26932",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So anyway so now I can well there are actually I should say there are other arguments so l'm too which are default values.",
    "output": "もう一つお伝えしておくべきでしたがlmには他の引数もデフォルトのものがあります。"
  },
  {
    "index": "F26933",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "But they are not, they are not listed there, but they do, they also, they, I shouldn't say there is more than just a formula because there is other arguments.",
    "output": "でもその引数はここには表示されていません。他の引数もあるため式だけと言うべきではありませんでした。"
  },
  {
    "index": "F26934",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here what I do is I press n for next and it runs the first line.",
    "output": "ではここで、nを押して次へ進めます。"
  },
  {
    "index": "F26935",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "When I hit n and then enter and it runs the first line. N then enter runs the second line.",
    "output": "そうすると1行目が実行されます。"
  },
  {
    "index": "F26936",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I just keep hitting n, n, n, so I run, and I just execute each line until I get to the line where the error occurs.",
    "output": "nを押してエンターを押すと最初の1行を実行します。"
  },
  {
    "index": "F26937",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So when you get to the line where the error occurs. And you execute it.",
    "output": "再度nを押すと2行目を実行しnで3行目を実行します。"
  },
  {
    "index": "F26938",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's not going to magically fix the problem by itself. But, at least you'll know where that error occurred, okay?",
    "output": "n、n、nと押し続けていくと各行を実行しエラーが起こっている行まで行きます。"
  },
  {
    "index": "F26939",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So and further more, suppose you want you can debug functions within the debugger, right?",
    "output": "エラーが起こっている行に来たらそこを実行するとさっきから起こっているようにエラーが起きます。問題が勝手に解決されるようなことは起こりません。"
  },
  {
    "index": "F26940",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, you can I can call, if I want so, I can call.",
    "output": "ですが、少なくともどこでエラーが起こったか分かります。"
  },
  {
    "index": "F26941",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So this match.call function I just kind of stepped right over it but I could have gone into this function by calling debug on match.call before executing it and then when this got executed I'd be in the third level of the browser.",
    "output": "さらに言えばデバッガーの中でもデバッグしたいですよね?"
  },
  {
    "index": "F26942",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Ah, so these things can nest and then as you go so they come like a stack of browser frames right?",
    "output": "そんなときにはデバッグできますが例えばこのmatch.call関数はステップオーバーで実行しましたがこの関数の中に関してもこの行を実行する前にdebugを呼んでいれば第3階層のbrowserに入ることができました。"
  },
  {
    "index": "F26943",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so you can, you can, you can call the debug function on functions.",
    "output": "つまり、デバッグはネストできてbrowserの枠組みが積みあがる感じになります。"
  },
  {
    "index": "F26944",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "While you're, even while you're in the debugger.",
    "output": "つまり、複数階層の関数に対してdebug関数を呼び出せるということです。"
  },
  {
    "index": "F26945",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can step through functions even while you're kind of debugging your top level functions.",
    "output": "デバッガーの中であっても最初の階層の関数をデバッグ中でも関数の中身をステップスルーで実行することができます。"
  },
  {
    "index": "F26946",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "The recover function, so the you can set the recover to be this kind of error handler by using the options function.",
    "output": "options関数を使ってrecover関数を設定することでエラー処理の方法として設定できます。"
  },
  {
    "index": "F26947",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you say options error equals recover. And, and that will set a global option, right?",
    "output": "options(error=recover)と指定してそしてこれでグローバルにこのoptionが設定されましたね。"
  },
  {
    "index": "F26948",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now this will, this will, this behavior will curve ever, everything you do as long as your r session is open.",
    "output": "これでRセッションが残っている限り何を実行したとしてもこの挙動が使われます。"
  },
  {
    "index": "F26949",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "As soon as you quit it will go away and then if you start up R somewhere else it's not going, it's not going to save that option.",
    "output": "quitすると設定が消えます。その上でRを起動するとそのoption設定は残っていません。"
  },
  {
    "index": "F26950",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So now I'm going to what I'm trying to do is I'm going to read that csv some file that doesn't exist.",
    "output": "では次にread.csvで、存在しないファイルを読もうとしてみます。"
  },
  {
    "index": "F26951",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Okay, and then you get an error and you get the error message, cannot open the connection.",
    "output": "そうするとエラーが発生してconnectionを開けない旨のエラーメッセージが表示されます。"
  },
  {
    "index": "F26952",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And now bu, but instead of getting my console back, I get a little menu here.",
    "output": "しかし、コンソールに戻ってくるわけではなく少ない数のメニューが戻ってきます。"
  },
  {
    "index": "F26953",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And this menu is the function call stack, okay.",
    "output": "このメニューは関数の呼び出し順を表示しています。"
  },
  {
    "index": "F26954",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's the same thing that you would get back, if you called trace back after the error.",
    "output": "これは、エラーの後にtracebackを実行した結果と同じものです。"
  },
  {
    "index": "F26955",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right, so reed.csv is that I called, remember reed.csv is just a for reed.tables.",
    "output": "呼び出したのはread.csvでした。"
  },
  {
    "index": "F26956",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So Reed.csv called reed.table and then reed.table called the file function, because we wanted to create a file connection with my file, no such file.",
    "output": "read.csvがread.tableを呼び出してread.tableがfile関数を呼んでいます。nosuchfileというファイルへのfileconnectionを開こうとしています。"
  },
  {
    "index": "F26957",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Right? And then when it tried to create that file connection.",
    "output": "このfileconnectionを作成しようとしたときに当たり前ですが、ファイルが見つからないためここでエラーが起こっていました。"
  },
  {
    "index": "F26958",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Obviously you couldn't find the file, and that's where the error occurred, okay?",
    "output": "こう確認すると、このコールスタックの3階層目でエラーが起こっています。"
  },
  {
    "index": "F26959",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the error occurred at the third level in the function call stacks, so what you can do, is you can press a number one, two, three and then you can kind of browse the environment of that function.",
    "output": "ここで何をすれば良いかというと1、2、3と押していくとこの関数の環境をbrowserで見ていくことができます。"
  },
  {
    "index": "F26960",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So if I want to see okay, what was the read, what was going on in read.csv, I can just press one here, and then it would show me kind of the environment of the read.csv.",
    "output": "例えば、read.csvで読み込んだ内容を知りたい場合には1を押せば、read.csvの環境を表示してくれます。"
  },
  {
    "index": "F26961",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And, and then I can break out of that and look at the environment for read.table, and et cetera.",
    "output": "そこから抜けて、read.tableやそれに続く関数を実行したときの環境を見ていくことができます。"
  },
  {
    "index": "F26962",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you can, if you have a very long function call stack, you can kind of jump back and forth to see what was going on at each, at each function call.",
    "output": "このようにできるので例えば、非常に深い関数呼び出し階層の場合あちらそちらの関数呼び出しで何が起こっているのかを見ることができます。"
  },
  {
    "index": "F26963",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "To to try out a pinpoint kind of where the problem occurs.",
    "output": "また、どこで問題が起こるのかを突き止めようとすることもできます。この線の勾配になります。"
  },
  {
    "index": "F26964",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So so just to summarize really quickly there's, there are basically three main indications of some sort of problem or condition.",
    "output": "しかしこの簡単にまとめてみますと問題や状況は基本的には、主に3種類で示されます。"
  },
  {
    "index": "F26965",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "There's the message warning error and of the three only the error will stop execution of the function.",
    "output": "message、warningerrorがありますがerrorだけが、関数の実行を停止します。"
  },
  {
    "index": "F26966",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "When you're analyzing a function that has and you think has a problem make sure you can reproduce that problem.",
    "output": "問題がありそうだなと考える関数を分析するときには問題が再現可能な状態にしましょう。"
  },
  {
    "index": "F26967",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then you make sure you can articulate how what do your expectations and how'd and what the output are that and how the output differs from what you were expecting or I'd like to say what you are expecting.",
    "output": "そして、期待している動作を明確に伝えるようにしてください。つまり、出力がどのようなものかどんな風に期待している出力と異なった出力がされているかを伝えます。"
  },
  {
    "index": "F26968",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so that the, the interactive tools trace back, debug, browser, trace, and recover can be used.",
    "output": "また、インタラクティブなツールとしてtraceback、debug、browsertrace、recoverが使えます。"
  },
  {
    "index": "F26969",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And it's, and the keyword actually here is interactive.",
    "output": "このツールが役に立つのはインタラクティブだからです。"
  },
  {
    "index": "F26970",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can kind of do things on the console.",
    "output": "コンソールで色々と行えるということです。"
  },
  {
    "index": "F26971",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And of course the debugging tools are not a substitute for thinking.",
    "output": "そして、デバッグツールはきちんと考えることにとって替わるものではありません。"
  },
  {
    "index": "F26972",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so you should always think about writing your code before, you know, just throwing it to the wind and hoping the debugger will catch it.",
    "output": "コードを書く前には常にきちんと考えるべきでサッと書いてみて、デバッガーが誤りを見つけてくれると願ってはいけません。"
  },
  {
    "index": "F26973",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This video is about the most important function in all R, the str function.",
    "output": "このビデオでは、Rで最も重要な関数str関数について説明します。"
  },
  {
    "index": "F26974",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "This function is really handy.",
    "output": "この関数はとても便利で本当に役に立ちます。"
  },
  {
    "index": "F26975",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I use it all the time.",
    "output": "私もいつも使っています。"
  },
  {
    "index": "F26976",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And you can use it in all kinds of situations just to help you out, to look at R objects.",
    "output": "Rオブジェクトの多種多様な状況を知るために使うことができます。"
  },
  {
    "index": "F26977",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So the idea behind the str function is, is that it's suppose to compactly display the internal structure of an R object, so str, str, you can think of as being, meaning structure.",
    "output": "str関数の背景にある考えはRオブジェクトの内部構造(structure)を出力することです。短縮したstrをstructureを意味していると考えてもよいでしょう。"
  },
  {
    "index": "F26978",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it's a very simple diagnostic function.",
    "output": "strはとても単純な診断のための関数でとても多目的に使えます。"
  },
  {
    "index": "F26979",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You want to look at an object, and see, and see you know, what is it.",
    "output": "オブジェクトを見たりオブジェクトの中身を見たいときがあります。"
  },
  {
    "index": "F26980",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can use summary which will often be very useful. But str is another option.",
    "output": "summary関数を使っても非常に役に立ちますがstr関数ももう1つの方法です。"
  },
  {
    "index": "F26981",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It's partic, particularly well suited for compactly displaying large lists which may contain nested lists.",
    "output": "ネストされているかもしれない巨大なリストを小さく纏めて表示するのに特に適しています。"
  },
  {
    "index": "F26982",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And also and, and its goal is to produce roughly one line of output per basic object.",
    "output": "そしてまた各基本オブジェクトを1行単位で表示させるのが主な目的です。"
  },
  {
    "index": "F26983",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "For example so if you give it a simple object like a vector, it'll give you one line of output backup.",
    "output": "ベクトルのような単純なオブジェクトを渡すと一行の出力が返ってきてコンソールに表示します。"
  },
  {
    "index": "F26984",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And so the basic goal of str is to answer the question, what's in this object?",
    "output": "strを使う基本的な目的はオブジェクトの中身は何かを知るということです。"
  },
  {
    "index": "F26985",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I'm going to start up R here and I'm going to just give a little demonstration of how the str function can work.",
    "output": "ここでRを起動してstrの動作について少しデモをします。"
  },
  {
    "index": "F26986",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, you can apply str to itself and see it's a function that takes an object.",
    "output": "strに対してstrを適用するとstrが関数で、オブジェクトを引数に取りRオブジェクトを取ると分かります。"
  },
  {
    "index": "F26987",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So, so you can apply str to other functions.",
    "output": "また、str関数を他の関数に対しても適用できます。"
  },
  {
    "index": "F26988",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So let's say I want to know what the lm function does.",
    "output": "lm関数が何をしているか知りたいとするとstrを使うとlm関数の引数が返ってきます。"
  },
  {
    "index": "F26989",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So here, what it gives you it gives you the, the function arguments for the lm function.",
    "output": "非常に簡潔な要約が表示されているのが分かります。"
  },
  {
    "index": "F26990",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So just, so here you can see it's a very brief summary, you know, take the first argument's a formula, the second argument's data, et cetera.",
    "output": "1つ目の引数はformulaで2つ目の引数はdata、などが分かります。次にls関数を見てみましょう。"
  },
  {
    "index": "F26991",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "I can look at maybe ls function and it gives me, you know, what are the arguments for the LS function?",
    "output": "ls関数の引数が何かを返してくれます。"
  },
  {
    "index": "F26992",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Let's say I'm going to generate some normal random variables here, 100 of them, let's say mean two variant, and standard deviation four.",
    "output": "もし、データの類を見てみたい場合には、正規分布の乱数を100個生成します。"
  },
  {
    "index": "F26993",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "Now one thing you can do is, is just do summary on x, and that will give you like a five number summary plus the mean.",
    "output": "ここで、xに対してsummary関数を使うこともできます。summaryは、要約された5つの数値とmeanを返します。"
  },
  {
    "index": "F26994",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So you get the mean, median that is 25th, 75th percentiles and the min and the max.",
    "output": "返されるのは、mean、中央値25と75パーセンタイルと最小最大値です。"
  },
  {
    "index": "F26995",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So that gives you a rough sense of kind of what the range is and how it varies.",
    "output": "この数値によってどんな範囲と幅があるのか大まかに掴めます。"
  },
  {
    "index": "F26996",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "You can also call str on x and it will give you a little bit more information.",
    "output": "xに対してstrを呼ぶこともできてもう少し詳しい情報が返ってきます。"
  },
  {
    "index": "F26997",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "So it'll give you a one line output.",
    "output": "一行の出力を返します。"
  },
  {
    "index": "F26998",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "It tells you that x is a numeric vector.",
    "output": "この1行からxは実数ベクトルで100個の要素があることが分かります。"
  },
  {
    "index": "F26999",
    "instruction": "次の英語を日本語に翻訳してください。",
    "input": "And then, and it'll give you the first five numbers in this vector.",
    "output": "さらに、ベクトルの最初の5つの値を返します。"
  }
]